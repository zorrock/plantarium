{"version":3,"file":"index.b43d4ce3.js","sources":["../../vite/modulepreload-polyfill","../../../packages/theme/src/stylesToJSON.ts","../../../packages/theme/src/Themes.ts","../../../packages/theme/src/ThemeStore.ts","../../../packages/theme/src/ThemeProvider.svelte","../../../packages/ui/src/helpers/isBrowser.ts","../../../packages/ui/src/icons/arrow.svg?raw","../../../packages/ui/src/icons/branch.svg?raw","../../../packages/ui/src/icons/checkmark.svg?raw","../../../packages/ui/src/icons/cog.svg?raw","../../../packages/ui/src/icons/cross.svg?raw","../../../packages/ui/src/icons/exclamation.svg?raw","../../../packages/ui/src/icons/folder.svg?raw","../../../packages/ui/src/icons/hand.svg?raw","../../../packages/ui/src/icons/leaf.svg?raw","../../../packages/ui/src/icons/pointing.svg?raw","../../../packages/ui/src/icons/stem.svg?raw","../../../packages/ui/src/icons/triangle.svg?raw","../../../packages/ui/src/icons/warning.svg?raw","../../../packages/ui/src/icons/question.svg?raw","../../../packages/ui/src/Icon.svelte","../../../packages/ui/src/Button.svelte","../../../packages/ui/src/helpers/IMessage.ts","../../../packages/ui/src/helpers/createMessageStore.ts","../../../packages/ui/src/alert/AlertStore.ts","../../../packages/ui/src/alert/AlertWrapper.svelte","../../../packages/ui/src/toast/ToastStore.ts","../../../packages/helpers/src/aggregate.ts","../../../packages/helpers/src/convertHexToRGB.ts","../../../packages/helpers/src/curve.ts","../../../packages/helpers/src/debounce.ts","../../../packages/helpers/src/debounceDecorator.ts","../../../packages/helpers/src/throttle.ts","../../../packages/helpers/src/EventEmitter.ts","../../../packages/helpers/src/fastHash.ts","../../../packages/helpers/src/genId.ts","../../../packages/helpers/src/groupArray.ts","../../../packages/helpers/src/humane.ts","../../../packages/helpers/src/inputChanged.ts","../../../packages/helpers/src/loader.ts","../../../packages/helpers/src/logger.ts","../../../packages/helpers/src/memoize.ts","../../../packages/helpers/src/parseStackTrace.ts","../../../packages/ui/src/toast/StackTrace.svelte","../../../packages/ui/src/toast/Toast.svelte","../../../packages/ui/src/toast/ToastWrapper.svelte","../../../packages/ui/src/InputCheckbox.svelte","../../../packages/ui/src/InputCurve.svelte","../../../packages/ui/src/InputInteger.svelte","../../../packages/ui/src/InputFloat.svelte","../../../packages/ui/src/InputSelect.svelte","../../../packages/ui/src/InputShape.svelte","../../../packages/ui/src/Section.svelte","../../../packages/ui/src/index.ts","../../../packages/geometry/src/helpers/convertInstancedGeometry.ts","../../../packages/geometry/src/helpers/extrudePath.ts","../../../packages/geometry/src/helpers/lerp.ts","../../../packages/geometry/src/helpers/interpolateArray.ts","../../../packages/geometry/src/helpers/interpolateSkeleton.ts","../../../packages/geometry/src/helpers/interpolateSkeletonVec.ts","../../../packages/geometry/src/helpers/join.ts","../../../packages/geometry/src/helpers/length2D.ts","../../../packages/geometry/src/helpers/length3D.ts","../../../packages/geometry/src/helpers/noise.ts","../../../packages/geometry/src/helpers/normalize2D.ts","../../../packages/geometry/src/helpers/normalize3D.ts","../../../packages/geometry/src/helpers/rotate2D.ts","../../../packages/geometry/src/helpers/rotate3D.ts","../../../packages/geometry/src/helpers/transferToGeometry.ts","../../../packages/geometry/src/parts/ground.ts","../../../packages/geometry/src/parts/leaf.ts","../../../packages/geometry/src/shapes/tube.ts","../../../packages/nodes/src/nodes/Branch.ts","../../../packages/nodes/src/nodes/Curve.ts","../../../packages/nodes/src/nodes/Gravity.ts","../../../packages/nodes/src/nodes/Join.ts","../../../packages/nodes/src/nodes/Leaf.ts","../../../packages/nodes/src/nodes/Math.ts","../../../packages/nodes/src/nodes/Noise.ts","../../../packages/nodes/src/nodes/Output.ts","../../../packages/nodes/src/nodes/Parameter.ts","../../../packages/nodes/src/nodes/Rotate.ts","../../../packages/nodes/src/nodes/Shape.ts","../../../packages/nodes/src/nodes/Slider.ts","../../../packages/nodes/src/nodes/Stem.ts","../../../packages/nodes/src/nodes/Vec2.ts","../../../packages/nodes/src/nodes/Vec3.ts","../../../packages/nodes/src/index.ts","../../../packages/nodesystem/src/view/ConnectionView.ts","../../../packages/nodesystem/src/view/NodeConnectionView.ts","../../../packages/nodesystem/src/helpers/panzoom/domController.ts","../../../packages/nodesystem/src/helpers/panzoom/kinetic.ts","../../../packages/nodesystem/src/helpers/panzoom/index.ts","../../../packages/nodesystem/src/helpers/rectanglesIntersect.ts","../../../packages/nodesystem/src/helpers/canSocketsConnect.ts","../../../packages/nodesystem/src/helpers/diffObjects.ts","../../../packages/nodesystem/src/model/NodeConnection.ts","../../../packages/nodesystem/src/model/Node.ts","../../../packages/nodesystem/src/nodes/Boolean.ts","../../../packages/nodesystem/src/nodes/Math.ts","../../../packages/nodesystem/src/nodes/Number.ts","../../../packages/nodesystem/src/view/NodeStateView.ts","../../../packages/nodesystem/src/view/NodeInputView.ts","../../../packages/nodesystem/src/model/NodeInput.ts","../../../packages/nodesystem/src/model/NodeState.ts","../../../packages/nodesystem/src/view/NodeView.ts","../../../packages/nodesystem/src/nodes/Debug.ts","../../../packages/nodesystem/src/nodes/Output.ts","../../../packages/nodesystem/src/nodes/index.ts","../../../packages/nodesystem/src/model/Logger.ts","../../../packages/nodesystem/src/view/AddMenu.ts","../../../packages/nodesystem/src/view/BoxSelection.ts","../../../packages/nodesystem/src/view/NodeOutputView.ts","../../../packages/nodesystem/src/model/NodeOutput.ts","../../../packages/nodesystem/src/view/FloatingConnectionView.ts","../../../packages/nodesystem/src/view/socketColorStore.ts","../../../packages/nodesystem/src/view/NodeSystemView.ts","../../../packages/nodesystem/src/model/NodeFactory.ts","../../../packages/nodesystem/src/model/NodeHistory.ts","../../../packages/nodesystem/src/model/NodeParser.ts","../../../packages/nodesystem/src/model/NodeTypeStore.ts","../../../packages/nodesystem/src/model/NodeSystem.ts","../../src/helpers/localState.ts","../../../packages/generator/src/helpers/isNode.ts","../../../packages/generator/src/helpers/uniqID.ts","../../../packages/generator/src/nodes.ts","../../../packages/generator/src/executeNode.ts","../../../packages/generator/src/walkNode.ts","../../../packages/generator/src/createContext.ts","../../../packages/generator/src/plant.ts","../../../packages/generator/src/webworker/createWebWorker.ts","../../../packages/renderer/src/Renderer.ts","../../src/components/scene/shaders/index.ts","../../src/helpers/renderProject.ts","../../src/helpers/getBrowser.ts","../../../packages/client-api/helper.ts","../../../packages/client-api/user-store.ts","../../../packages/client-api/core.ts","../../../packages/client-api/admin-wrapper.ts","../../../packages/client-api/user-wrapper.ts","../../../packages/client-api/index.ts","../../src/components/project-manager/ProjectManager.ts","../../src/components/project-manager/Project.svelte","../../src/components/project-manager/ProjectManagerView.svelte","../../src/components/settings-manager/SettingsTemplate.ts","../../src/components/settings-manager/SettingsManager.ts","../../src/components/settings-manager/sectionOpen.ts","../../src/components/settings-manager/SettingsSection.svelte","../../src/components/settings-manager/SettingsManagerView.svelte","../../src/components/tutor/steps/Final.svelte","../../src/components/tutor/steps.ts","../../src/components/tutor/store.ts","../../src/components/tutor/Tutor.svelte","../../src/components/tutor/index.ts","../../src/helpers/performance.ts","../../src/components/index.ts","../../src/components/scene/background.ts","../../src/elements/changelog/Commit.svelte","../../src/elements/changelog/store.ts","../../src/elements/changelog/ChangeLog.svelte","../../src/elements/HoverWindow.svelte","../../src/elements/Report.svelte","../../src/components/scene/debug.ts","../../src/components/scene/foreground.ts","../../src/components/scene/index.ts","../../src/components/scene/Scene.svelte","../../src/elements/Help.svelte","../../src/Header.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","export default function (obj) {\n  const themes = {};\n\n  Object.entries(obj).forEach(([key, value]) => {\n    const [themeName, variableName] = key.split('_');\n\n    if (themeName in themes) {\n      themes[themeName][variableName] = value;\n    } else {\n      themes[themeName] = { [variableName]: value };\n    }\n  });\n\n  return themes;\n}\n","import styles from './themes.module.scss';\nimport stylesToJSON from './stylesToJSON';\n\nexport const themes = stylesToJSON(styles);\nexport const themeNames = Object.keys(themes);\n","import { writable } from 'svelte/store';\nimport { themes, themeNames } from './Themes';\n\nlet activeTheme =\n  'theme' in localStorage ? localStorage.getItem('theme') : themeNames[0];\nif (!themeNames.includes(activeTheme)) activeTheme = themeNames[0];\n\nexport const store = writable(themes[activeTheme]);\n\nexport const setTheme = (style: string) => {\n  if (themeNames.includes(style)) {\n    store.set(themes[style]);\n    localStorage.setItem('theme', style);\n  }\n};\n\nexport default store;\n","<script lang=\"ts\">\n  import ThemeStore from './ThemeStore';\n  import generateCSSVariables from 'css-vars-from-json';\n  import { onMount } from 'svelte';\n  $: styles = generateCSSVariables($ThemeStore);\n\n  let themeWrapper: HTMLStyleElement;\n  $: if (styles) transition();\n\n  let isAnimating = false;\n\n  function transition() {\n    if (isAnimating || !themeWrapper) return;\n    isAnimating = true;\n    themeWrapper.innerHTML = `* {transition: color 0.2s ease, background-color 0.2s ease, outline 0.2s ease !important;}`;\n    setTimeout(() => {\n      themeWrapper.innerHTML = `* {transition: color 0.2s ease, background-color 0.2s ease, outline 0.2s ease !important;} :root{${styles}}`;\n      setTimeout(() => {\n        themeWrapper.innerHTML = `:root{${styles}}`;\n        isAnimating = false;\n      }, 200);\n    }, 1);\n  }\n\n  onMount(() => {\n    themeWrapper.innerHTML = `:root{${styles}}`;\n  });\n</script>\n\n<svelte:head>\n  <style type=\"text/css\" bind:this={themeWrapper}></style>\n</svelte:head>\n\n<svelte:body />\n","function getBrowser(){\n  return \"window\" in globalThis\n}\n\nexport const isBrowser = getBrowser()\n","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n<!-- Generator: Adobe Illustrator 16.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\\n<svg version=\\\"1.2\\\" baseProfile=\\\"tiny\\\" id=\\\"Ebene_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n\\t x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"100px\\\" height=\\\"100px\\\" viewBox=\\\"0 0 100 100\\\" xml:space=\\\"preserve\\\">\\n</svg>\\n\"","export default \"<svg\\n  xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 100 100\\\">\\n  <defs>\\n    <style>.cls-1{fill:none;stroke:#fff;stroke-width:5px;}</style>\\n  </defs>\\n  <title>branch</title>\\n  <path class=\\\"cls-1\\\" d=\\\"M49.59,57.35,72.15,38.69\\\"/>\\n  <path class=\\\"cls-1\\\" d=\\\"M51.58,29.45,38,11.21\\\"/>\\n  <path class=\\\"cls-1\\\" d=\\\"M53.14,82.61,21.78,55.74\\\"/>\\n  <path class=\\\"cls-1\\\" d=\\\"M33.46,47.91l4,21\\\"/>\\n  <polyline class=\\\"cls-1\\\" points=\\\"56 97 50 58 51 28 56 16\\\"/>\\n</svg>\"","export default \"<svg id=\\\"e7691b6e-31fa-49a4-aaec-be19b623d191\\\" data-name=\\\"Layer 1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 100 100\\\"><defs><style>.b50603dd-20d5-40a2-a0ce-2fdf3b92ec21{fill:none;stroke:#fff;stroke-linecap:round;stroke-linejoin:round;stroke-width:5px;}</style></defs><title>checkmark</title><path class=\\\"b50603dd-20d5-40a2-a0ce-2fdf3b92ec21\\\" d=\\\"M75.5,30,40.43,72.47a2,2,0,0,1-3.08,0L24.5,57\\\"/></svg>\"","export default \"<svg\\n  xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 100 100\\\">\\n<defs>\\n\\t<style>\\n\\t\\tcircle, path{\\n\\t\\t\\tfill:none;\\n\\t\\t\\tstroke: var(--text, white);\\n\\t\\t\\tstroke-width: 5px;\\n\\t\\t}\\n\\t</style>\\n</defs>\\n\\t<circle class=\\\"cls-1\\\" cx=\\\"50.37\\\" cy=\\\"50.5\\\" r=\\\"17.23\\\"/>\\n  <path class=\\\"cls-1\\\" d=\\\"M38.07,20.49,32.17,8.05,50.83,4.41l.61,13.8,12.13,2.28L68.73,8.05l14,10.16-9,10L81.17,38.7l12-5.47,3.34,17.3H81.93L80.57,63l12.59,6.37L82.7,83.62l-9-9.86L63.58,81.19l5.15,11.23-17.9,3.64V82.71L38.08,81.19,32.77,92.42,17.44,82.71l10.17-8.35L19.11,63,8.19,69.36,4.4,50.56H17.45l1.67-13.81L8.2,30.84l9.25-13.2,11.08,8.81Z\\\"/>\\n</svg>\\n\"","export default \"<svg\\n  xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n\\tviewBox=\\\"0 0 100 100\\\">\\n  <line fill=\\\"none\\\" stroke=\\\"#FFFFFF\\\" stroke-width=\\\"5\\\" stroke-miterlimit=\\\"10\\\" x1=\\\"27.836\\\" y1=\\\"72.164\\\" x2=\\\"72.164\\\" y2=\\\"27.836\\\"/>\\n  <line fill=\\\"none\\\" stroke=\\\"#FFFFFF\\\" stroke-width=\\\"5\\\" stroke-miterlimit=\\\"10\\\" x1=\\\"27.836\\\" y1=\\\"27.988\\\" x2=\\\"72.164\\\" y2=\\\"72.012\\\"/>\\n</svg>\\n\"","export default \"<svg viewBox=\\\"0 0 100 100\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"M50.552 59.3295L39.0695 13.7056H60.2078L50.552 59.3295Z\\\" stroke=\\\"white\\\" stroke-width=\\\"5\\\" stroke-linejoin=\\\"round\\\"/>\\n<path d=\\\"M58.4305 77.2411C58.4305 80.8276 55.4725 83.7944 51.7497 83.7944C48.0269 83.7944 45.0688 80.8276 45.0688 77.2411C45.0688 73.6546 48.0269 70.6878 51.7497 70.6878C55.4725 70.6878 58.4305 73.6546 58.4305 77.2411Z\\\" stroke=\\\"white\\\" stroke-width=\\\"5\\\"/>\\n</svg>\\n\"","export default \"<svg viewBox=\\\"0 0 100 100\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n\\n<defs>\\n\\t<style>\\n\\t\\tpath{\\n\\t\\t\\tstroke: white;\\n\\t\\t\\tstroke-width: 5px;\\n\\t\\t}\\n\\t</style>\\n</defs>\\n\\n<path d=\\\"M23.5167 72.9513V32.1483H82.1056L87.6855 37.0307V76.09L82.1056 78.5312H29.4453L23.5167 72.9513Z\\\" />\\n<path d=\\\"M23.2747 73.6489L12.3145 30.0463L15.8885 21.4688H71.8808L75.693 32.9055\\\" />\\n<path d=\\\"M25.488 43.9781H86.7394\\\" />\\n</svg>\\n\"","export default \"<svg viewBox=\\\"0 0 100 100\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"M70.5 26.5L77.5 23.5L82 32V69L77.5 82L64.5 92.5H47L32 82L18 46L21 40H27L35 57.5V15.5L39.5 11L45.5 13.5M70.5 26.5L69 15.5L58.5 14M70.5 26.5V57.5M58.5 14L55 8L45.5 13.5M58.5 14V49M45.5 13.5V49\\\" stroke-width=\\\"5\\\"/>\\n</svg>\\n\"","export default \"<svg\\n  xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 100 100\\\">\\n  <defs>\\n    <style>.cls-1{fill:none;stroke:#fff;stroke-width:5px;}</style>\\n  </defs>\\n  <title>leaf</title>\\n  <path class=\\\"cls-1\\\" d=\\\"M50.69,96.21,72.86,72.33,77,47,65.91,21.7,50.66,4.5\\\"/>\\n  <path class=\\\"cls-1\\\" d=\\\"M53.37,96.21,31.2,72.33,27.07,47,38.15,21.7,53.4,4.5\\\"/>\\n</svg>\"","export default \"<svg viewBox=\\\"0 0 100 100\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"M30.2312 46.4809V15.6962L33.3006 8H40.8035L44.3844 11.0785V29.7203H52.9104L55.9798 33.8249H65.0173L68.0867 38.9557L76.2717 40.1529L79 56.0583L73.7139 72.9899L66.8931 93H36.5405L30.2312 75.5553L20 60.334L21.7052 50.2435L30.2312 46.4809ZM30.2312 46.4809V58.1107M44.3844 29.3783V46.3099M56.4913 34.5091V46.3099M68.7688 39.2978V50.4145\\\" stroke=\\\"white\\\" stroke-width=\\\"5\\\"/>\\n</svg>\\n\"","export default \"<svg\\n  xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 100 100\\\">\\n  <defs>\\n    <style>.cls-1{fill:none;stroke:#fff;stroke-width:5px;}</style>\\n  </defs>\\n  <title>stem</title>\\n  <path class=\\\"cls-1\\\" d=\\\"M49,95.5l8.66-23.19L43.24,46.07l10.59-21L43.24,4.5\\\"/>\\n</svg>\"","export default \"<svg\\n  xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 100 100\\\" xml:space=\\\"preserve\\\">\\n  <polygon fill=\\\"none\\\" stroke=\\\"#FFFFFF\\\" stroke-width=\\\"5\\\" stroke-miterlimit=\\\"10\\\" points=\\\"33.5,73.759 33.5,26.241 67.441,50 \\\"/>\\n</svg>\\n\"","export default \"<svg viewBox=\\\"0 0 100 100\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"M54.7631 15.1799L91.7944 79.3201C93.9114 82.9867 91.2652 87.5701 87.0313 87.5701H12.9687C8.73476 87.5701 6.08857 82.9867 8.20552 79.3201L45.2368 15.1799C47.3538 11.5133 52.6462 11.5133 54.7631 15.1799Z\\\" stroke=\\\"white\\\" stroke-width=\\\"5\\\" stroke-linejoin=\\\"round\\\"/>\\n<ellipse cx=\\\"50.0578\\\" cy=\\\"73.7787\\\" rx=\\\"5.98166\\\" ry=\\\"5.89858\\\" fill=\\\"white\\\"/>\\n<path d=\\\"M52.9755 60.2707C52.5275 63.7615 47.4723 63.7615 47.0243 60.2707L43.5981 33.5748C43.3678 31.781 44.7652 30.1929 46.5736 30.1929L53.4261 30.1929C55.2346 30.1929 56.6319 31.781 56.4017 33.5748L52.9755 60.2707Z\\\" fill=\\\"white\\\"/>\\n</svg>\\n\"","export default \"<svg viewBox=\\\"0 0 100 100\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"M32.7792 25.4477L45.6598 15.6472L61.6205 20.4075L67.2208 32.728L54.3402 46.4486L50.9801 59.3291V63.9218\\\" stroke-width=\\\"8\\\"/>\\n<path d=\\\"M47.3642 83.3434L44.983 79.0169L46.821 74.3331L51.3861 73.0881L55.5363 75.0446L56.307 80.8548L52.3347 84.3528L47.3642 83.3434Z\\\" />\\n</svg>\\n\\n\"","<svelte:options tag=\"plant-icon\" />\n\n<script context=\"module\" lang=\"ts\">\n  import * as icons from './icons/index.ts';\n\n  export type IconType = keyof typeof icons;\n</script>\n\n<script lang=\"ts\">\n  export let name: IconType = 'triangle';\n\n  export let active = false;\n  export let dark = false;\n  export let circle = false;\n\n  $: icon = name in icons ? icons[name] : name.toString() + ' icon not found';\n</script>\n\n<div class=\"icon-wrapper\" class:active class:dark class:circle>\n  {@html icon}\n</div>\n\n<style lang=\"scss\">\n  .icon-wrapper {\n    width: var(--width, fit-content);\n    height: var(--height, 100%);\n    object-fit: cover;\n    box-sizing: border-box;\n\n    min-width: 20px;\n    min-height: 20px;\n\n    stroke: var(--color);\n\n    &.circle {\n      border-radius: 50%;\n      padding: 5px;\n      border: solid 2px white;\n    }\n\n    > :global(svg) {\n      width: 100%;\n    }\n  }\n\n  .circle::after {\n    content: '';\n    display: block;\n    padding-bottom: 100%;\n  }\n\n  .icon-wrapper > :global(*) {\n    stroke: var(--stroke, white);\n    fill: var(--fill, none);\n  }\n\n  .active :global(*) {\n    color: var(--text-color, white);\n  }\n\n  .dark :global(*) {\n    stroke: #303030;\n  }\n  .icon-wrapper :global(svg > *) {\n    transition: stroke 0.1s ease;\n    stroke-width: 5px;\n  }\n</style>\n","<svelte:options tag=\"plant-button\" />\n\n<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import type { IconType } from './Icon.svelte';\n  import Icon from './Icon.svelte';\n  export let icon: IconType | undefined = undefined;\n  export let name = '';\n  export let active = false;\n  export let useActive = false;\n  export let disabled = false;\n\n\tlet buttonEl: HTMLElement;\n\n\t$: notWebComponent =buttonEl && !!buttonEl.parentElement;\n\n\tconst dispatch = createEventDispatcher();\n\n  const handleClick = () => {\n    active = !active;\n    dispatch('click');\n  };\n</script>\n\n<button\n\tbind:this={buttonEl}\n  on:click={handleClick}\n  class:active\n  class:useActive\n  {disabled}\n  class:only-icon={!name}\n  class:has-icon={!!icon}\n>\n  {#if icon}\n\t\t{#if notWebComponent}\n\t\t\t<Icon name={icon} {active} />\n\t\t{:else}\n\t\t\t<plant-icon name={icon} {active}/>\n\t\t{/if}\n\t{/if}\n\n  {#if name}\n    <p>{name}</p>\n  {/if}\n\n  <div class=\"content\">\n    <slot />\n  </div>\n</button>\n\n<style lang=\"scss\">\n  @import './global.scss';\n\n  button.active.useActive {\n    background-color: #65e2a0 !important;\n    > p {\n      color: #303030 !important;\n    }\n    > :global(.icon-wrapper > svg > *) {\n      stroke: #303030 !important;\n    }\n  }\n\n  button {\n    position: relative;\n    display: flex;\n    align-items: center;\n    height: 40px;\n    border-radius: 5px;\n    border: none;\n    background-color: transparent;\n    outline: none;\n    margin: var(--margin, 0);\n    transition: none;\n    cursor: pointer;\n    background-color: var(--bg, --foreground-color);\n  }\n\n  button:disabled {\n    opacity: 0.8;\n    pointer-events: none;\n  }\n\n  button.only-icon {\n    width: 40px;\n    > :global(.icon-wrapper) {\n      left: 9px;\n    }\n  }\n\n  button.has-icon { \n\t\t> :global(.icon-wrapper),plant-icon {\n\t\t\tposition: absolute;\n\t\t\ttop: 9px;\n\t\t\theight: calc(100% - 18px);\n\t\t}\n\t}\n\n  button.has-icon > p {\n    padding-left: 30px;\n  }\n\n  p {\n    color: var(--text-color);\n    font-weight: bolder;\n    padding: 0px 5px;\n    white-space: nowrap;\n    margin: 0;\n  }\n\n  .content {\n    position: absolute;\n    bottom: 0px;\n    left: 0px;\n    overflow: visible;\n  }\n</style>\n","import type { SvelteComponent } from 'svelte';\n\nexport enum MessageType {\n  INFO = 'info',\n  WARNING = 'warning',\n  ERROR = 'error',\n  SUCCESS = 'success',\n}\n\nexport interface Message {\n  id: string | Error | unknown;\n  type: MessageType;\n  content: string | Error | typeof SvelteComponent;\n  title: string;\n  props?: Record<string, unknown>;\n  values?: string[];\n  timeout?: number;\n  resolve?: (answer: boolean | string | unknown) => void;\n  reject?: () => void;\n}\n\nexport interface MessageOptions {\n  title: string;\n  values: string[];\n  type: string;\n  props: Record<string, unknown>;\n  timeout: number;\n  callback: (answer: boolean | string | unknown) => void;\n}\n","import createId from 'shortid';\nimport type { SvelteComponent } from 'svelte';\nimport type { Writable } from 'svelte/store';\nimport { writable } from 'svelte/store';\nimport type { Message, MessageOptions } from './IMessage';\nimport { MessageType } from './IMessage';\n\nconst createMessageFactory =\n  (store: Writable<Message[]>) =>\n  (\n    content: string | Error | typeof SvelteComponent,\n    options?: Partial<MessageOptions>,\n  ) => {\n    if (!content && !options) return;\n\n    const hasValues = Array.isArray(options?.values);\n\n    const message: Message = {\n      id: createId(),\n      type: MessageType.INFO,\n      content,\n      props: options.props,\n      title: options?.title ?? options?.type,\n      values: options?.values,\n      timeout: options?.timeout,\n    };\n\n    const p = new Promise((_res, _rej) => {\n      message.resolve = _res;\n      message.reject = _rej;\n    });\n    p.finally(() =>\n      store.update((msgs) => msgs.filter((m) => m.id !== message.id)),\n    );\n\n    // Find out type\n\n    if (options && 'type' in options) {\n      const t = options.type.toLowerCase();\n      Object.values(MessageType).forEach((v) => {\n        if (t === v) message.type = v;\n      });\n    }\n\n    if (content instanceof Error) {\n      message.type = MessageType.ERROR;\n    }\n\n    if (typeof message.timeout === 'undefined') {\n      let timeout;\n\n      if (message.type === MessageType.SUCCESS) {\n        timeout = 3000;\n      }\n\n      if (message.type === MessageType.INFO) {\n        timeout = 2000;\n      }\n\n      if (message.type === MessageType.WARNING) {\n        timeout = 7000;\n      }\n\n      if (timeout && !hasValues) {\n        message.timeout = timeout;\n      }\n    }\n\n    if (!('title' in message)) {\n      message.title =\n        message.type.toUpperCase().slice(0, 1) + message.type.slice(1);\n    }\n\n    store.update((messages) => [...messages, message]);\n\n    if (message.timeout) {\n      setTimeout(message.resolve, message.timeout);\n    }\n\n    return p;\n  };\n\nexport default () => {\n  const store: Writable<Message[]> = writable([]);\n\n  const createMessage = createMessageFactory(store);\n\n  return { store, createMessage, MessageType };\n};\n","import createMessageStore from '../helpers/createMessageStore';\nimport 'svelte/store';\nimport type { SvelteComponentDev } from 'svelte/internal';\nimport type { Message, MessageOptions } from '../helpers/IMessage';\nimport type { Writable } from 'svelte/store';\n\nconst { store: _store, createMessage, MessageType } = createMessageStore();\n\nconst store: Writable<Message[]> = _store;\n\nconst createAlert: (\n  content: string | Error | typeof SvelteComponentDev,\n  options?: Partial<MessageOptions>,\n) => Promise<unknown> = createMessage;\n\nexport { store, createAlert, MessageType };\n","<svelte:options tag=\"plant-alert-wrapper\" />\n\n<script lang=\"ts\">\n  import { isBrowser } from '../helpers/isBrowser';\n\n  import { fade, scale } from 'svelte/transition';\n  import Button from '../Button.svelte';\n  import { store } from './AlertStore';\n\n  $: alert = $store[0];\n\n  $: if (alert) {\n    isBrowser && document.body.classList.add('overlay-visible');\n  } else {\n    isBrowser && document.body.classList.remove('overlay-visible');\n  }\n\n  $: isInverted =\n    alert && (alert.type === 'success' || alert.type === 'warning');\n\n  function handleKeyDown(ev) {\n    if (ev.key === 'Escape' && alert) {\n      alert.reject();\n    }\n  }\n</script>\n\n{#if alert}\n  <div class=\"alert-container\" transition:fade>\n    <div\n      class=\"alert-wrapper alert-{alert.type}\"\n      transition:scale\n      class:isInverted\n    >\n\n      <div class=\"close-wrapper\">\n        <Button\n          icon=\"cross\"\n          --bg=\"transparent\"\n          on:click={() => {\n            alert.reject();\n          }}\n        />\n      </div>\n\n      {#if alert.title}\n        <h2>{alert.title}</h2>\n      {/if}\n\n      {#if typeof alert.content === 'string'}\n        <p>{@html alert.content}</p>\n      {:else}\n        <svelte:component this={alert.content} {...alert.props} />\n      {/if}\n\n      {#if alert.values}\n        <div class=\"options-wrapper\">\n          {#each alert.values as value}\n            <Button\n              --bg={'#303030'}\n              --text={'white'}\n              on:click={() => alert.resolve(value)}\n              name={value}\n            />\n          {/each}\n        </div>\n      {/if}\n    </div>\n  </div>\n{/if}\n\n<svelte:window on:keydown={handleKeyDown} />\n\n<style lang=\"scss\">\n  .alert-container {\n    position: fixed;\n    z-index: 99999;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.493);\n    display: grid;\n    place-items: center;\n    backdrop-filter: blur(5px) contrast(0.5);\n  }\n\n  .close-wrapper {\n    position: absolute;\n\t\ttop:0px;\n\t\tright: 0px;\n  }\n\n  h2 {\n    margin-bottom: 10px;\n  }\n\n  .alert-wrapper {\n    min-width: 200px;\n\n    max-height: 80vh;\n    max-width: 60vw;\n\n    font-size: 1.3em;\n\n    white-space: pre-line;\n\n    padding: 25px;\n\n    border-radius: 30px;\n\n    backdrop-filter: blur(10px) contrast(0.5) brightness(1.5);\n    overflow-y: auto;\n  }\n\n  .options-wrapper {\n    padding-top: 20px;\n  }\n\n  .alert-info {\n    background-color: #303030;\n\n    color: white;\n    .alert-progress {\n      background-color: white;\n    }\n  }\n\n  .alert-success {\n    background-color: #65e2a0;\n    color: black;\n    border-color: gray;\n\n    .alert-progress {\n      background-color: gray;\n    }\n  }\n\n  .alert-warning {\n    background-color: #fffd7b;\n  }\n\n  .alert-error {\n    background-color: #e26565;\n    color: white;\n\n    .alert-progress {\n      background-color: white;\n    }\n  }\n</style>\n","import createMessageStore from '../helpers/createMessageStore';\nimport 'svelte/store';\nimport type { SvelteComponentDev } from 'svelte/internal';\nimport type { Message, MessageOptions } from '../helpers/IMessage';\nimport type { Writable } from 'svelte/store';\n\nconst { store: _store, createMessage } = createMessageStore();\n\nconst store: Writable<Message[]> = _store;\n\nconst createToast: (\n  content: string | Error | typeof SvelteComponentDev,\n  options?: Partial<MessageOptions>,\n) => Promise<unknown> = createMessage;\n\nexport { store, createToast };\n","export default (baseClass, ...mixins) => {\n  const copyProps = (target, source) => {\n    // this function copies all properties and symbols, filtering out some special ones\n    Object.getOwnPropertyNames(source)\n      .concat(Object.getOwnPropertySymbols(source).map((s) => s.toString()))\n      .forEach((prop) => {\n        if (\n          !prop.match(\n            /^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/,\n          )\n        )\n          Object.defineProperty(\n            target,\n            prop,\n            Object.getOwnPropertyDescriptor(source, prop),\n          );\n      });\n  };\n  const base = class Base extends baseClass {\n    constructor(...args) {\n      super(...args);\n      mixins.forEach((mixin) => copyProps(this, new mixin()));\n    }\n  };\n  mixins.forEach((mixin) => {\n    // outside contructor() to allow aggregation(A,B,C).staticFunction() to be called etc.\n    copyProps(base.prototype, mixin.prototype);\n    copyProps(base, mixin);\n  });\n  return base;\n};\n","export default (input: string): [number, number, number] => {\n  if (input[0] === '#') input = input.replace('#', '');\n\n  if (input.length === 3)\n    input = input[0] + input[0] + input[1] + input[1] + input[2] + input[2];\n\n  const aRgbHex = input.match(/.{1,2}/g);\n  return [\n    parseInt(aRgbHex[0], 16) / 255,\n    parseInt(aRgbHex[1], 16) / 255,\n    parseInt(aRgbHex[2], 16) / 255,\n  ];\n};\n","interface Vec2 {\r\n  x: number;\r\n  y: number;\r\n  pinned?: boolean;\r\n}\r\n\r\nconst tension = 0.4;\r\n\r\nfunction plotCBez(\r\n  ptCount: number,\r\n  pxTolerance: number,\r\n  Ax: number,\r\n  Ay: number,\r\n  Bx: number,\r\n  By: number,\r\n  Cx: number,\r\n  Cy: number,\r\n  Dx: number,\r\n  Dy: number,\r\n) {\r\n  const deltaBAx = Bx - Ax;\r\n  const deltaCBx = Cx - Bx;\r\n  const deltaDCx = Dx - Cx;\r\n  const deltaBAy = By - Ay;\r\n  const deltaCBy = Cy - By;\r\n  const deltaDCy = Dy - Cy;\r\n  let ax, ay, bx, by;\r\n  let lastX = -10000;\r\n  let lastY = -10000;\r\n  const pts = [{ x: Ax, y: Ay }];\r\n  for (let i = 1; i < ptCount; i++) {\r\n    const t = i / ptCount;\r\n    ax = Ax + deltaBAx * t;\r\n    bx = Bx + deltaCBx * t;\r\n    const cx = Cx + deltaDCx * t;\r\n    ax += (bx - ax) * t;\r\n    bx += (cx - bx) * t;\r\n    //\r\n    ay = Ay + deltaBAy * t;\r\n    by = By + deltaCBy * t;\r\n    const cy = Cy + deltaDCy * t;\r\n    ay += (by - ay) * t;\r\n    by += (cy - by) * t;\r\n    const x = ax + (bx - ax) * t;\r\n    const y = ay + (by - ay) * t;\r\n    const dx = x - lastX;\r\n    const dy = y - lastY;\r\n    if (dx * dx + dy * dy > pxTolerance) {\r\n      pts.push({ x, y });\r\n      lastX = x;\r\n      lastY = y;\r\n    }\r\n  }\r\n  pts.push({ x: Dx, y: Dy });\r\n  return pts;\r\n}\r\n\r\nexport function computeControlPoints(points: Vec2[]) {\r\n  const length = points.length - 1;\r\n\r\n  return points.map((p, i, a) => {\r\n    if (i === 0) {\r\n      //First point\r\n      return {\r\n        rx: a[i + 1].x * tension * 0,\r\n        ry: p.y + (a[i + 1].y - p.y) * tension * 0,\r\n      };\r\n    } else if (i === length) {\r\n      //Last point\r\n      return {\r\n        lx: a[i - 1].x + (p.x - a[i - 1].x) * tension * 2,\r\n        ly: a[i - 1].y + (p.y - a[i - 1].y) * tension * 2,\r\n      };\r\n    } else {\r\n      //Middle points\r\n      const isExtremPoint =\r\n        (p.y > a[i + 1].y && p.y > a[i - 1].y) ||\r\n        (p.y < a[i + 1].y && p.y < a[i - 1].y);\r\n\r\n      if (isExtremPoint) {\r\n        return {\r\n          lx: a[i - 1].x + (p.x - a[i - 1].x) * tension,\r\n          ly: p.y,\r\n          rx: p.x + (a[i + 1].x - p.x) * tension,\r\n          ry: p.y,\r\n        };\r\n      } else {\r\n        //Create vector from before and after point\r\n        const vec = {\r\n          x: a[i - 1].x - a[i + 1].x,\r\n          y: a[i - 1].y - a[i + 1].y,\r\n        };\r\n        const vecLength = Math.sqrt(Math.pow(vec.x, 2) + Math.pow(vec.y, 2));\r\n        vec.x /= vecLength;\r\n        vec.y /= vecLength;\r\n\r\n        const lRight = a[i + 1].x - p.x;\r\n        const lLeft = p.x - a[i - 1].x;\r\n\r\n        //let _lRight = Math.sqrt(Math.pow(p.x - a[i + 1].x, 2) + Math.pow(p.y - a[i + 1].y, 2));\r\n        //let _lLeft = Math.sqrt(Math.pow(p.x - a[i - 1].x, 2) + Math.pow(p.y - a[i - 1].y, 2));\r\n\r\n        return {\r\n          lx: p.x + vec.x * lLeft * tension,\r\n          ly: p.y + vec.y * lLeft * tension,\r\n          rx: p.x - vec.x * lRight * tension,\r\n          ry: p.y - vec.y * lRight * tension,\r\n        };\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport function drawLinear(\r\n  ctx: CanvasRenderingContext2D,\r\n  points: Vec2[],\r\n): void {\r\n  ctx.save();\r\n  ctx.beginPath();\r\n  points.forEach((p, i, a) => {\r\n    if (i < a.length - 1) {\r\n      ctx.strokeStyle = 'gray';\r\n      ctx.moveTo(p.x, p.y);\r\n      ctx.lineTo(a[i + 1].x, a[i + 1].y);\r\n    }\r\n  });\r\n  ctx.stroke();\r\n  ctx.restore();\r\n}\r\n\r\nexport function drawControlPoints(\r\n  ctx: CanvasRenderingContext2D,\r\n  points: Vec2[],\r\n): void {\r\n  computeControlPoints(points).forEach((p, i) => {\r\n    if ('rx' in p && 'ry' in p) {\r\n      ctx.fillRect(p.rx - 1, p.ry - 1, 2, 2);\r\n      ctx.beginPath();\r\n      ctx.moveTo(points[i].x, points[i].y);\r\n      ctx.lineTo(p.rx, p.ry);\r\n      ctx.stroke();\r\n    }\r\n    if ('lx' in p && 'ly' in p) {\r\n      ctx.fillRect(p.lx - 1, p.ly - 1, 2, 2);\r\n      ctx.beginPath();\r\n      ctx.moveTo(points[i].x, points[i].y);\r\n      ctx.lineTo(p.lx, p.ly);\r\n      ctx.stroke();\r\n    }\r\n  });\r\n}\r\n\r\nexport function drawCurve(ctx: CanvasRenderingContext2D, points: Vec2[]) {\r\n  const controlPoints = computeControlPoints(points);\r\n  points.forEach((p, i, a) => {\r\n    if (i < a.length - 1) {\r\n      ctx.moveTo(p.x, p.y);\r\n      ctx.bezierCurveTo(\r\n        controlPoints[i].rx,\r\n        controlPoints[i].ry,\r\n        controlPoints[i + 1].lx,\r\n        controlPoints[i + 1].ly,\r\n        a[i + 1].x,\r\n        a[i + 1].y,\r\n      );\r\n      ctx.stroke();\r\n    }\r\n  });\r\n}\r\n\r\nexport function toArray(points: Vec2[]) {\r\n  const length = points.length - 1;\r\n  const seen = {};\r\n\r\n  const controlPoints = computeControlPoints(points);\r\n\r\n  return points\r\n    .map((p, i, a) => {\r\n      if (i < length) {\r\n        return plotCBez(\r\n          length * 20,\r\n          0,\r\n          p.x,\r\n          p.y,\r\n          controlPoints[i].rx,\r\n          controlPoints[i].ry,\r\n          controlPoints[i + 1].lx,\r\n          controlPoints[i + 1].ly,\r\n          a[i + 1].x,\r\n          a[i + 1].y,\r\n        );\r\n      } else {\r\n        return undefined;\r\n      }\r\n    })\r\n    .flat()\r\n    .filter((p: Vec2) => {\r\n      if (!p) return false;\r\n      if (p.x in seen) {\r\n        return false;\r\n      } else {\r\n        seen[p.x] = true;\r\n        return true;\r\n      }\r\n    });\r\n}\r\n\r\nexport function drawSamplePoints(\r\n  ctx: CanvasRenderingContext2D,\r\n  points: Vec2[],\r\n) {\r\n  ctx.save();\r\n  ctx.fillStyle = 'red';\r\n  toArray(points).forEach((p) => {\r\n    ctx.fillRect(p.x - 1, p.y - 1, 2, 2);\r\n  });\r\n  ctx.restore();\r\n}\r\n","export default function debounce(\r\n  func: (...args: unknown[]) => unknown,\r\n  wait: number,\r\n  immediate?: boolean,\r\n) {\r\n  let timeout: number;\r\n  return (...args: unknown[]) => {\r\n    const later = () => {\r\n      timeout = null;\r\n      if (!immediate) func(...args);\r\n    };\r\n    const callNow = immediate && !timeout;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait) as unknown as number;\r\n    if (callNow) func(...args);\r\n  };\r\n}\r\n","export default function Debounce(wait: number, immediate = false) {\n  return function (\n    target,\n    propertyKey: string | symbol,\n    descriptor: PropertyDescriptor,\n  ) {\n    let timeout;\n    const originalMethod = descriptor.value;\n    descriptor.value = function (...args) {\n      const later = () => {\n        timeout = null;\n        if (!immediate) originalMethod.apply(this, args);\n      };\n      const callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) originalMethod.apply(this, args);\n    };\n    return descriptor;\n  };\n}\n","export default function throttle<T>(_func: T, wait: number): T {\r\n  let context: (() => unknown) | null;\r\n  let args;\r\n  let result;\r\n\r\n  let timeout: number | null = null;\r\n  let previous = 0;\r\n\r\n  const func = _func as unknown as () => void;\r\n\r\n  const later = () => {\r\n    previous = 0;\r\n    timeout = null;\r\n    result = func.apply(context, args);\r\n    if (!timeout) context = args = null;\r\n  };\r\n\r\n  const f = function () {\r\n    const now = Date.now();\r\n    if (!previous) previous = now;\r\n    const remaining = wait - (now - previous);\r\n    context = this;\r\n    // eslint-disable-next-line prefer-rest-params\r\n    args = arguments;\r\n    if (remaining <= 0 || remaining > wait) {\r\n      if (timeout) {\r\n        window.clearTimeout(timeout);\r\n        timeout = null;\r\n      }\r\n      previous = now;\r\n      result = func.apply(context, args);\r\n      if (!timeout) context = args = null;\r\n    } else if (!timeout) {\r\n      timeout = window.setTimeout(later, remaining);\r\n    }\r\n    return result;\r\n  };\r\n  return f as unknown as T;\r\n}\r\n","import throttle from './throttle';\n\nconst debug = { amountEmitters: 0, amountCallbacks: 0, emitters: [] };\n\nif (typeof self !== 'undefined' && 'window' in self) {\n  window['debug'] = debug;\n}\n\nexport default class EventEmitter {\n  index = 0;\n  constructor() {\n    this.index = debug.amountEmitters;\n    debug.amountEmitters++;\n  }\n\n  private cbs: { [key: string]: ((data?: unknown) => unknown)[] } = {};\n  private cbsOnce: { [key: string]: ((data?: unknown) => unknown)[] } = {};\n\n  /**\n   * Emit an event with optional data to all the listeners\n   * @param {string} event Name of the event to emit\n   * @param data Data to send along\n   */\n  public emit(event: string, data?: unknown) {\n    if (event in this.cbs) {\n      this.cbs[event].forEach((c) => c(data));\n    }\n    if (event in this.cbsOnce) {\n      this.cbsOnce[event].forEach((c) => c(data));\n      delete this.cbsOnce[event];\n    }\n  }\n\n  /**\n   * Register a new listener on the EventEmitter\n   * @param {string} event Name of the event to listen to\n   * @param {function} cb Listener, gets called everytime the event is emitted\n   * @param {number} [throttleTimer=0] The listener can be throttled\n   * @returns {function} Returns a function which removes the listener when called\n   */\n  public on(event: string, cb: (data?: unknown) => unknown, throttleTimer = 0) {\n    if (throttleTimer > 0) cb = throttle(cb, throttleTimer);\n    const cbs = Object.assign(this.cbs, {\n      [event]: [...(this.cbs[event] || []), cb],\n    });\n    this.cbs = cbs;\n\n    debug.emitters[this.index] = {\n      name: this.constructor.name,\n      cbs: Object.fromEntries(\n        Object.keys(this.cbs).map((key) => [key, this.cbs[key].length]),\n      ),\n    };\n    debug.amountCallbacks++;\n\n    // console.log('New EventEmitter ', this.constructor.name);\n    return () => {\n      debug.amountCallbacks--;\n      cbs[event]?.splice(cbs[event].indexOf(cb), 1);\n      debug.emitters[this.index] = {\n        name: this.constructor.name,\n        cbs: Object.fromEntries(\n          Object.keys(this.cbs).map((key) => [key, this.cbs[key].length]),\n        ),\n      };\n    };\n  }\n\n  /**\n   * Register a special listener which only gets called once\n   * @param {string} event Name of the event to listen to\n   * @param {function} cb Listener, gets called everytime the event is emitted\n   * @returns {function} Returns a function which removes the listener when called\n   */\n  public once(event: string, cb: (data: unknown) => unknown) {\n    this.cbsOnce[event] = [...(this.cbsOnce[event] || []), cb];\n    return () => {\n      this.cbsOnce[event].splice(this.cbsOnce[event].indexOf(cb), 1);\n    };\n  }\n\n  public destroyEventEmitter() {\n    debug.amountEmitters--;\n    Object.keys(this.cbs).forEach((key) => {\n      debug.amountCallbacks -= this.cbs[key].length;\n      delete this.cbs[key];\n    });\n    Object.keys(this.cbsOnce).forEach((key) => delete this.cbsOnce[key]);\n    this.cbs = {};\n    this.cbsOnce = {};\n    delete debug.emitters[this.index];\n  }\n}\n","// Shamelessly copied from\n// https://stackoverflow.com/a/8831937\n\nexport default function (input: string) {\n  if (input.length === 0) return 0;\n\n  let hash = 0;\n  for (let i = 0; i < input.length; i++) {\n    hash = (hash << 5) - hash + input.charCodeAt(i);\n    hash = hash & hash;\n  }\n\n  return hash;\n}\n","/**\n * Generates unique incemental ids\n */\nexport default () => {\n  const idMap: { [id: number]: boolean } = {};\n  let amount = 0;\n\n  const genID = (id = 0, iteration = 0): string => {\n    if (iteration > 500) {\n      throw new Error('Infinite loop in id generation algo');\n    }\n\n    if (id in idMap) {\n      return genID(Math.max(id++, amount++), iteration + 1);\n    }\n\n    idMap[id] = true;\n\n    return id.toString();\n  };\n\n  genID.reset = () => {\n    Object.keys(idMap).forEach((id: string) => delete idMap[+id]);\n    amount = 0;\n  };\n\n  return genID;\n};\n","export default function groupArray<T>(arr: ArrayLike<T>, groupSize: number) {\n  const output: T[][] = [];\n\n  const groupAmount = arr.length / groupSize;\n\n  for (let i = 0; i < groupAmount; i++) {\n    const group = [];\n    for (let j = 0; j < groupSize; j++) {\n      group[j] = arr[i * groupSize + j];\n    }\n    output.push(group);\n  }\n\n  return output;\n}\n","const getPluralS = (amount: number) => (amount > 1 ? 's' : '');\n\nconst time = (millis: number) => {\n  if (typeof millis !== 'number' || isNaN(millis)) return 'never';\n\n  if (millis < 1000) return '< 1 second';\n\n  const seconds = Math.floor(millis / 1000);\n  if (seconds < 60) return seconds + ' second' + getPluralS(seconds);\n\n  const minutes = Math.floor(seconds / 60);\n  if (minutes < 60) return minutes + ' minute' + getPluralS(minutes);\n\n  const hours = Math.floor(minutes / 60);\n  if (hours < 24) return hours + ' hour' + getPluralS(hours);\n\n  const days = Math.floor(hours / 24);\n  if (days < 7) return days + ' day' + getPluralS(days);\n\n  // This is not exactly correct as\n  // not every month has 30 days\n  // but for this purpose its enough\n  const weeks = Math.floor(days / 7);\n  if (weeks < 30) return weeks + ' week' + getPluralS(weeks);\n\n  const months = Math.floor(weeks / 30);\n  if (months < 12) return months + ' month' + getPluralS(months);\n\n  const years = Math.floor(months / 12);\n  if (years < 10) return years + ' year' + getPluralS(years);\n\n  const decades = Math.floor(months / 10);\n  return decades + ' decade' + getPluralS(decades);\n};\n\nexport { time };\n","/**\n * Only calls the passed function when the input parameters changed\n * Warning: works with JSON.stringify, so key order in POJOS is ignored\n * @param func Function to proxy\n */\nexport default function memo<A extends unknown[], R>(fn: (...args: A) => R) {\n  let value: R,\n    before: A = { length: NaN } as A;\n\n  const sameAsBefore = (v: A[number], i: number) => v === before[i];\n  return function memo(...args: A): R {\n    if (args.length !== before.length || !args.every(sameAsBefore)) {\n      before = args;\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n}\n","import { Texture } from 'ogl';\n\nconst textureCache: { [key: string]: Texture } = {};\n// const shaderCache: { [key: string]: Program } = {};\n\nconst loadTexture = (\n  gl: WebGL2RenderingContext,\n  src: string,\n  options = {},\n): Texture => {\n  if (textureCache[src]) return textureCache[src];\n  const texture = new Texture(gl, options);\n  const image = new Image();\n  textureCache[src] = texture;\n  image.onload = () => {\n    texture.image = image;\n  };\n  image.src = src;\n  return texture;\n};\n\nexport default {\n  texture: loadTexture,\n};\n","/* eslint-disable no-console */\n\ninterface Logger {\n  (...args: unknown[]): void;\n  warn(...args: unknown[]): void;\n  error(err: Error): void;\n  group(...args: unknown[]): void;\n}\n\nlet filters: string[] = [];\nlet level = 2;\n\nlet longestName = 0;\n\nconst scopes = {};\nlet currentIndex = 0;\n\nconst colors = [\n  '#00ffff',\n  '#f0ffff',\n  '#f5f5dc',\n  '#000000',\n  '#0000ff',\n  '#a52a2a',\n  '#00ffff',\n  '#00008b',\n  '#008b8b',\n  '#a9a9a9',\n  '#006400',\n  '#bdb76b',\n  '#8b008b',\n  '#556b2f',\n  '#ff8c00',\n  '#9932cc',\n  '#8b0000',\n  '#e9967a',\n  '#9400d3',\n  '#ff00ff',\n  '#ffd700',\n  '#008000',\n  '#4b0082',\n  '#f0e68c',\n  '#add8e6',\n  '#e0ffff',\n  '#90ee90',\n  '#d3d3d3',\n  '#ffb6c1',\n  '#ffffe0',\n  '#00ff00',\n  '#ff00ff',\n  '#800000',\n  '#000080',\n  '#808000',\n  '#ffa500',\n  '#ffc0cb',\n  '#800080',\n  '#800080',\n  '#ff0000',\n  '#c0c0c0',\n  '#ffffff',\n  '#ffff00',\n];\n\nfunction log(scope: string): Logger {\n  longestName = Math.max(longestName, scope.length);\n\n  const myIndex = currentIndex;\n\n  scopes[scope] = colors[currentIndex];\n  currentIndex++;\n\n  const log = (...args: unknown[]) => {\n    if ((!filters.length || filters.includes(scope)) && level === 0) {\n      // Make some logs better to read\n      if (typeof args[0] === 'string' && typeof args[1] === 'object') {\n        console.groupCollapsed(\n          `%c[${scope.padEnd(longestName, ' ')}]`,\n          `color: hsl(${myIndex * 30}deg 68% 64%); font-weight: bold;`,\n          args[0],\n        );\n        console.log(...args.slice(1));\n        console.groupEnd();\n        return;\n      }\n\n      console.log(\n        `%c[${scope.padEnd(longestName, ' ')}]`,\n        `color: hsl(${myIndex * 30}deg 68% 64%); font-weight: bold;`,\n        ...args,\n      );\n    }\n  };\n\n  log.group = (...args: []) => {\n    if (level < 1)\n      console.groupCollapsed(\n        `%c[${scope.padEnd(longestName, ' ')}]`,\n        `color: hsl(${myIndex * 30}deg 68% 64%); font-weight: bold;`,\n        ...args,\n      );\n  };\n\n  log.warn = (...args: []) => {\n    if (level <= 1)\n      console.warn(`[${scope.padEnd(longestName, ' ')}]`, ...args);\n  };\n\n  log.error = (err: Error) => {\n    console.error(`[${scope.padEnd(longestName, ' ')}]`, err);\n  };\n\n  return log;\n}\n\nlog.setFilter = (...f: string[]) => {\n  filters = f;\n};\n\nlog.setLevel = (l = 0) => {\n  level = l;\n};\n\nexport default log;\n","import fastHash from './fastHash';\n\nexport default function memoize(func: (...args) => unknown) {\n  const memo: { [hash: string]: unknown } = {};\n\n  return (...args) => {\n    const hash = fastHash(JSON.stringify(args));\n\n    if (hash in memo) {\n      return memo[hash];\n    } else {\n      return (memo[hash] = func(...args));\n    }\n  };\n}\n","const regex =\n  /^(?:[ ]+)?(?:at )([^ ]*)?(?: )?(?:\\[(.*?)\\] )?(?:\\(([^()]+)\\))?$/gm;\n\nconst stripPath = (s) =>\n  s\n    .replace(window.location.href, '')\n    .replace(/^node_modules/, '')\n    .replace(/.+?(?=plantarium)plantarium\\//, '');\n\nexport default (s: string) => {\n  const [rawTitle, ...rawLines] = s.split('\\n');\n\n  const [type, title] = rawTitle.split(':');\n\n  const lines = rawLines.map((l) => {\n    const res = [...l.matchAll(regex)][0];\n    const [, name, alias, location] = res;\n    return {\n      name: stripPath(name),\n      ...(location ? { location: stripPath(location) } : {}),\n      ...(alias ? { alias: alias.trim().replace('as ', '') } : {}),\n    };\n  });\n\n  return { title, type, lines };\n};\n","<svelte:options tag={null} />\n\n<script>\n  export let stacktrace;\n</script>\n\n{#if stacktrace}\n  <div class=\"wrapper\">\n    <p>\n      <b>{stacktrace.type}:</b>\n      {stacktrace.title}\n    </p>\n    <pre>\n    <code>\n      {#each stacktrace.lines as line}\n        at <strong>{line.name}</strong>{#if line.alias}as <strong>${line.alias}</strong>{/if}{#if line.location}&nbsp;(<i>{line.location}</i>){/if}<br>\n      {/each}\n    </code>\n  </pre>\n  </div>\n{/if}\n\n<style>\n  .wrapper {\n    background-color: #303030;\n    padding: 10px;\n    margin: 0px;\n    border-radius: 5px;\n    overflow-x: auto;\n  }\n\n  pre {\n    width: fit-content;\n  }\n</style>\n","<svelte:options tag=\"plant-toast\" />\n\n<script lang=\"ts\">\n  import { parseStackTrace } from '@plantarium/helpers';\n  import { onMount, SvelteComponent } from 'svelte';\n  import { slide } from 'svelte/transition';\n  import Button from '../Button.svelte';\n  import type { Message } from '../helpers/IMessage';\n  import { MessageType } from '../helpers/IMessage';\n  import type { IconType } from '../Icon.svelte';\n  import Icon from '../Icon.svelte';\n  import StackTrace from './StackTrace.svelte';\n\n  export let toast: Message;\n\n  let animateProgress = false;\n\n  let showStackTrace = false;\n\n  $: icon = toast && getIcon();\n\n  function getIcon(): IconType | undefined {\n    if (toast.type === MessageType.ERROR) {\n      return 'warning';\n    }\n    if (toast.type === MessageType.SUCCESS) {\n      return 'checkmark';\n    }\n    if (toast.type === MessageType.WARNING) {\n      return 'exclamation';\n    }\n    return;\n  }\n\n  $: isInverted =\n    toast && (toast.type === 'success' || toast.type === 'warning');\n\n  let isCustomElement = false;\n  let el: HTMLElement;\n  $: isCustomElement = el && !el.parentElement;\n  onMount(() => {\n    setTimeout(() => {\n      animateProgress = true;\n    }, 10);\n  });\n</script>\n\n{#if toast}\n  <div class=\"wrapper\" bind:this={el}>\n    <div class=\"toast toast-{toast.type}\" class:isInverted>\n      <div class=\"toast-content\" class:hasIcon={!!icon}>\n        {#if icon}\n          <div class=\"toast-icon\">\n            <Icon name={icon} circle --width=\"40px\" --height=\"40px\" />\n          </div>\n        {/if}\n\n        <div class=\"toast-text\">\n          {#if toast.title}\n            <h3>{toast.title}</h3>\n          {/if}\n\n          {#if typeof toast.content === 'string'}\n            <p>{@html toast.content}</p>\n          {:else if toast.content instanceof Error}\n            <p>\n              {toast.content.message}\n            </p>\n            {#if showStackTrace}\n              <div class=\"stack-trace\" transition:slide>\n                <StackTrace stacktrace={parseStackTrace(toast.content.stack)} />\n              </div>\n            {/if}\n          {:else if toast.content instanceof SvelteComponent}\n            <svelte:component this={toast.content} />\n          {/if}\n\n          <div class=\"button-wrapper\">\n            {#if toast.content instanceof Error}\n              <Button\n                --margin=\"5px 10px 5px -10px\"\n                --text={isInverted ? '#1a1a1a' : 'white'}\n                --bg=\"transparent\"\n                on:click={() => {\n                  showStackTrace = !showStackTrace;\n                }}\n                name=\"> StackTrace\"\n              />\n            {/if}\n\n            {#if toast.values}\n              {#each toast.values as v}\n                <div class=\"button-spacer\">\n                  {#if isCustomElement}\n                    <plant-button on:click={() => toast.resolve(v)} name={v} />\n                  {:else}\n                    <Button\n                      --margin=\"5px 10px 5px 0\"\n                      --text={isInverted ? 'white' : '#1a1a1a'}\n                      --bg={isInverted ? '#1a1a1a' : 'white'}\n                      on:click={() => toast.resolve(v)}\n                      name={v}\n                    />\n                  {/if}\n                </div>\n              {/each}\n            {/if}\n          </div>\n        </div>\n        <div class=\"toast-close\" on:click={() => toast.reject()}>\n          <Icon name=\"cross\" --height=\"fit-content\" />\n        </div>\n      </div>\n\n      <div\n        class:animateProgress\n        style={`transition: width ${toast.timeout}ms linear;`}\n        class=\"toast-progress\"\n      />\n    </div>\n  </div>\n{/if}\n\n<style lang=\"scss\">\n  .stack-trace {\n    margin: 0 !important;\n    max-width: 100%;\n    > pre {\n      overflow-x: auto;\n    }\n  }\n  .wrapper {\n    padding: 10px;\n  }\n\n  .button-spacer {\n    display: inline-block;\n  }\n\n  .button-wrapper {\n    display: flex;\n  }\n\n  .isInverted {\n    .toast-close,\n    .toast-icon {\n      filter: invert(0.8);\n    }\n\n    p,\n    h3 {\n      color: #303030;\n    }\n\n    .toast-progress {\n      background-color: #303030 !important;\n    }\n  }\n\n  .toast {\n    position: relative;\n\n    width: fit-content;\n    padding: 10px;\n    border-radius: 5px;\n\n    overflow: hidden;\n\n    box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.7);\n\n    > .toast-content {\n      display: grid;\n      column-gap: 15px;\n      grid-template-columns: auto 28px;\n\n      &.hasIcon {\n        grid-template-columns: 40px auto 28px;\n      }\n\n      > .toast-icon {\n        width: 100%;\n      }\n\n      > .toast-text {\n        max-width: max(30vw, 200px);\n        h3 {\n          margin: 0;\n          margin-bottom: 5px;\n        }\n        p {\n          white-space: pre-line;\n          margin-bottom: 5px;\n        }\n      }\n\n      > .toast-close {\n        width: 30px;\n        cursor: pointer;\n      }\n    }\n\n    .toast-progress {\n      background-color: white;\n      position: absolute;\n      height: 5px;\n      width: 100%;\n      left: 0;\n      bottom: 0;\n      opacity: 0.5 !important;\n    }\n\n    .animateProgress {\n      width: 0%;\n    }\n  }\n\n  .toast-info {\n    background-color: #303030;\n\n    color: white;\n    .toast-progress {\n      background-color: white;\n    }\n  }\n\n  .toast-success {\n    background-color: #65e2a0;\n    color: black;\n    border-color: gray;\n\n    .toast-progress {\n      background-color: gray;\n    }\n  }\n\n  .toast-warning {\n    background-color: #fffd7b;\n  }\n\n  .toast-error {\n    background-color: #e26565;\n    color: white;\n\n    .toast-progress {\n      background-color: white;\n    }\n  }\n</style>\n","<svelte:options tag=\"plant-toast-wrapper\" />\n\n<script lang=\"ts\">\n  import { store } from './ToastStore';\n  import { slide } from 'svelte/transition';\n  import { backInOut } from 'svelte/easing';\n  import Toast from './Toast.svelte';\n  import { onMount } from 'svelte';\n\n  let isCustomElement = false;\n  let el: HTMLElement;\n\n  onMount(function () {\n    isCustomElement = !el.parentElement;\n  });\n</script>\n\n<div id=\"toast-wrapper\" bind:this={el}>\n  {#each $store as toast (toast.id)}\n    <div transition:slide={{ easing: backInOut }}>\n      {#if isCustomElement}\n        <plant-toast {toast} />\n      {:else}\n        <Toast {toast} />\n      {/if}\n    </div>\n  {/each}\n</div>\n\n<style lang=\"scss\">\n  #toast-wrapper {\n    position: fixed;\n    bottom: 0;\n    z-index: 99;\n  }\n</style>\n","<svelte:options tag=\"plant-checkbox\" accessors />\n\n<script lang=\"ts\">\n  import createId from 'shortid';\n  import { createEventDispatcher } from 'svelte';\n  const dispatch = createEventDispatcher();\n\n  export let value = false;\n\n  export let id = createId();\n\n  $: value !== undefined && dispatch('change', !!value);\n</script>\n\n<div class=\"component-wrapper\">\n  <!-- <span class=\"tooltip-text\">Enables syncing of projects to the cloud</span> -->\n  <input type=\"checkbox\" bind:checked={value} {id} />\n  <!-- svelte-ignore a11y-label-has-associated-control -->\n  <label class=\"checkbox-label\" for={id}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\">\n      <title>cross</title>\n      <line\n        vector-effect=\"non-scaling-stroke\"\n        x1=\"0\"\n        y1=\"100\"\n        x2=\"100\"\n        y2=\"0\"\n      />\n      <line\n        vector-effect=\"non-scaling-stroke\"\n        x1=\"0\"\n        y1=\"0\"\n        x2=\"100\"\n        y2=\"100\"\n      />\n    </svg>\n  </label>\n</div>\n\n<style lang=\"scss\">\n  @import './global.scss';\n\n  input[type='checkbox'] {\n    opacity: 0;\n    position: absolute;\n\n    &:checked + label > svg {\n      opacity: 1;\n    }\n  }\n\n  svg {\n    width: 12px;\n    height: 12px;\n    opacity: 0;\n    stroke: white;\n    stroke-width: 2px;\n    pointer-events: none;\n  }\n\n  label {\n    height: 21px;\n    width: 21px;\n    position: absolute;\n    cursor: pointer;\n  \n\t\tdisplay:flex;\n\t\talign-items: center;\n    justify-content: center;\n\n\t}\n\n  .component-wrapper {\n    width: 21px;\n    height: 21px;\n  }\n</style>\n","<svelte:options tag=\"plant-curve\" accessors />\n\n<script lang=\"ts\">\n  import spline from '@yr/monotone-cubic-spline';\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let value = [\n    { x: 0, y: 1, pinned: true },\n    { x: 1, y: 0, pinned: true },\n  ];\n  $: points = value;\n\n  // const tension = 0.4;\n\n  let isHovered = false;\n  // let isRendering = false;\n  let activePoint = undefined;\n  let draggingPoint = undefined;\n\n  let mousePosX = 0;\n  let mousePosY = 0;\n\n  let controlPoints = [];\n\n  const updateValue = () => {\n    requestAnimationFrame(() => {\n      dispatch('change', points);\n      points = points.sort((a, b) => (a.x > b.x ? -1 : 1));\n    });\n  };\n\n  const removePoint = (p) => {\n    if (p.pinned) return;\n    points.splice(points.indexOf(activePoint), 1);\n    updateValue();\n  };\n\n  const handleMouseMove = (ev) => {\n    if (isHovered) {\n      mousePosX = ev.offsetX;\n      mousePosY = ev.offsetY;\n\n      if (activePoint) {\n        draggingPoint = activePoint;\n        activePoint = undefined;\n      }\n\n      if (draggingPoint) {\n        draggingPoint.x = mousePosX / 100;\n        draggingPoint.y = mousePosY / 100;\n        updateValue();\n      }\n    }\n  };\n\n  const handleMouseDown = () => {\n    if (!activePoint) {\n      const point = {\n        x: mousePosX / 100,\n        y: mousePosY / 100,\n        pinned: false,\n      };\n\n      activePoint = point;\n\n      points.push(activePoint);\n      updateValue();\n    }\n  };\n\n  const handleMouseUp = () => {\n    if (activePoint) {\n      removePoint(activePoint);\n      activePoint = undefined;\n    }\n\n    draggingPoint = undefined;\n  };\n\n  const handleMouseOver = () => {\n    isHovered = true;\n  };\n\n  const handleMouseOut = () => {\n    isHovered = false;\n  };\n\n  function renderPath(points) {\n    const pts = spline.points(points.map((p) => [p.x * 100, p.y * 100]));\n    return spline.svgPath(pts);\n  }\n\n  $: path = renderPath(points);\n</script>\n\n<div class=\"component-wrapper\">\n  <svg\n    viewBox=\"0 0 100 100\"\n    width=\"100\"\n    height=\"100\"\n    on:mousedown={handleMouseDown}\n    on:mousemove={handleMouseMove}\n    on:mouseover={handleMouseOver}\n    on:mouseout={handleMouseOut}\n    on:mouseup={handleMouseUp}\n    on:focus={handleMouseOver}\n    on:blur={handleMouseOut}\n  >\n    <!-- <circle cx={mousePosX} cy={mousePosY} r=\"1\" /> -->\n\n    <path d={path} fill=\"none\" stroke=\"grey\" />\n    {#each points as p}\n      <circle\n        cx={p.x * 100}\n        cy={p.y * 100}\n        r=\"2\"\n        class:pinned={p.pinned}\n        on:mousedown={() => {\n          activePoint = p;\n        }}\n      />\n    {/each}\n\n    <g id=\"debug\">\n      {#each controlPoints as p, i}\n        {#if i > 0 && i % 2 === 0}\n          <line\n            x1={controlPoints[i - 1].x * 100}\n            y1={controlPoints[i - 1].y * 100}\n            x2={p.x * 100}\n            y2={p.y * 100}\n          />\n        {/if}\n        <circle cx={p.x * 100} cy={p.y * 100} r=\"1\" class:pinned={p.pinned} />\n      {/each}\n    </g>\n  </svg>\n</div>\n\n<style lang=\"scss\">\n  @import './global.scss';\n\n\t.component-wrapper{\n\t\twidth: 100px;\n\t\tmax-width: 100%;\n\t}\n\n  svg > path {\n    stroke: white;\n    stroke-width: 1px;\n  }\n\n  svg circle {\n    opacity: 0;\n    stroke-width: 1px;\n  }\n\n  circle:hover {\n    fill: white;\n    opacity: 1 !important;\n  }\n\n  svg:hover circle {\n    opacity: 0.5;\n  }\n\n  svg:hover circle.pinned {\n    opacity: 0.5;\n  }\n\n  svg:hover line {\n    opacity: 1;\n    stroke-width: 0.5px;\n  }\n\n  svg line {\n    opacity: 0;\n  }\n\n  #debug {\n    pointer-events: none;\n    display: block;\n  }\n\n  #debug > * {\n    stroke-width: 0.5px;\n  }\n\n  svg:hover > #debug > * {\n    opacity: 1px;\n  }\n\n  svg {\n    width: 100%;\n    stroke-width: 1px;\n    display: block;\n  }\n</style>\n","<svelte:options tag=\"plant-integer\" accessors />\n\n<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  const dispatch = createEventDispatcher();\n\n  // Styling\n  export let min = -Infinity;\n  export let max = Infinity;\n  export let step = 1;\n  export let value = 0;\n\n  $: isClamped =\n    typeof min !== 'undefined' &&\n    typeof max !== 'undefined' &&\n    Number.isFinite(min) &&\n    Number.isFinite(max);\n\n  let inputEl: HTMLInputElement;\n  $: value !== undefined && dispatch('change', parseFloat(value + ''));\n\n  $: width = Number.isFinite(value)\n    ? Math.max((value?.toString().length ?? 1) * 8, 30) + 'px'\n    : '20px';\n\n  function handleChange(change) {\n    value = Math.max(min, Math.min(+value + change, max));\n  }\n\n  let isMouseDown = false;\n  let downX = 0;\n  let downY = 0;\n  let downV = 0;\n  let rect: DOMRect;\n\n  function handleMouseDown(ev: MouseEvent) {\n    ev.preventDefault();\n\n    isMouseDown = true;\n\n    downV = value;\n    downX = ev.clientX;\n    downY = ev.clientY;\n    rect = inputEl.getBoundingClientRect();\n\n    window.removeEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mouseup', handleMouseUp);\n    document.body.style.cursor = 'ew-resize';\n  }\n\n  function handleMouseUp() {\n    isMouseDown = false;\n\n    if (downV === value) {\n      inputEl.focus();\n    } else {\n      inputEl.blur();\n    }\n\n    document.body.style.cursor = 'unset';\n    window.removeEventListener('mouseup', handleMouseUp);\n    window.removeEventListener('mousemove', handleMouseMove);\n  }\n\n  function handleMouseMove(ev: MouseEvent) {\n    if (isClamped) {\n      const vx = (ev.clientX - rect.left) / rect.width;\n      value = Math.max(Math.min(Math.floor(min + (max - min) * vx), max), min);\n    } else {\n      const vx = ev.clientX - downX;\n      value = downV + Math.floor(vx / 10);\n    }\n  }\n</script>\n\n<div class=\"component-wrapper\">\n  {#if typeof min !== 'undefined' && typeof max !== 'undefined'}\n    <span\n      class=\"overlay\"\n      style={`width: ${((value - min) / (max - min)) * 100}%`}\n    />\n  {/if}\n  <button on:click={() => handleChange(-step)}>-</button>\n  <input\n    bind:value\n    bind:this={inputEl}\n    {step}\n    {max}\n    {min}\n    on:mousedown={handleMouseDown}\n    on:mouseup={handleMouseUp}\n    type=\"number\"\n    style={`width:${width};`}\n  />\n\n  <button on:click={() => handleChange(+step)}>+</button>\n</div>\n\n<style lang=\"scss\">\n  @import './global.scss';\n  input[type='number'] {\n    -webkit-appearance: textfield;\n    -moz-appearance: textfield;\n    appearance: textfield;\n    cursor: pointer;\n  }\n\n  input[type='number']::-webkit-inner-spin-button,\n  input[type='number']::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n  }\n\n  .overlay {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    height: 100%;\n    background-color: white;\n    opacity: 0.2;\n    pointer-events: none;\n  }\n\n  div {\n    max-width: 200px;\n    position: relative;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    background-color: #4b4b4b;\n    border-radius: 2px;\n  }\n\n  div button {\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    line-height: 0px;\n    margin: 0;\n    color: white;\n  }\n\n  div input[type='number'] {\n    color: white;\n    background-color: transparent;\n    padding: 2px;\n    width: 72%;\n    font-size: 15pt;\n    text-align: center;\n    border: none;\n    border-style: none;\n  }\n</style>\n","<svelte:options tag=\"plant-float\" accessors />\n\n<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n\n  export let value = 0.5;\n  export let step = 0.01;\n  export let min = 0;\n  export let max = 1;\n\n  function strip(number) {\n    return parseFloat(number).toPrecision(2);\n  }\n\n  const dispatch = createEventDispatcher();\n\n  let inputEl: HTMLInputElement;\n  $: value !== undefined && dispatch('change', parseFloat(value + ''));\n\n  $: if (value.toString().length > 15) {\n    value = strip(value);\n  }\n\n  $: width = Number.isFinite(value)\n    ? Math.max((value?.toString().length ?? 1) * 8, 50) + 'px'\n    : '20px';\n\n  let isMouseDown = false;\n  let downX = 0;\n  let downY = 0;\n  let downV = 0;\n  let vx = 0;\n  let vy = 0;\n  let rect: DOMRect;\n\n  function handleMouseDown(ev: MouseEvent) {\n    ev.preventDefault();\n\n    isMouseDown = true;\n\n    downV = value;\n    downX = ev.clientX;\n    downY = ev.clientY;\n    rect = inputEl.getBoundingClientRect();\n\n    window.removeEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mouseup', handleMouseUp);\n    document.body.style.cursor = 'ew-resize';\n  }\n\n  function handleMouseUp() {\n    isMouseDown = false;\n\n    if (downV === value) {\n      inputEl.focus();\n    }\n\n    document.body.style.cursor = 'unset';\n    window.removeEventListener('mouseup', handleMouseUp);\n    window.removeEventListener('mousemove', handleMouseMove);\n  }\n\n  function handleMouseMove(ev: MouseEvent) {\n    vx = (ev.clientX - rect.left) / rect.width;\n    vy = ev.clientY - downY;\n\n    value = Math.max(Math.min(min + (max - min) * vx, max), min);\n  }\n</script>\n\n<div class=\"component-wrapper\" class:is-down={isMouseDown}>\n  <span\n    class=\"overlay\"\n    style={`width: ${((value - min) / (max - min)) * 100}%`}\n  />\n  <input\n    bind:value\n    bind:this={inputEl}\n    {step}\n    {max}\n    {min}\n    on:mousedown={handleMouseDown}\n    on:mouseup={handleMouseUp}\n    type=\"number\"\n    style={`width:${width};`}\n  />\n</div>\n\n<style lang=\"scss\">\n  @import './global.scss';\n  input[type='number']::-webkit-inner-spin-button,\n  input[type='number']::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n  }\n\n  input[type='number'] {\n    -webkit-appearance: textfield;\n    -moz-appearance: textfield;\n    appearance: textfield;\n    cursor: pointer;\n    color: white;\n    background-color: transparent;\n    padding: 5px 11px;\n    width: 100%;\n    font-size: 15pt;\n    text-align: center;\n    border: none;\n    border-style: none;\n    min-width: 100%;\n  }\n\n  .is-down > input {\n    cursor: ew-resize !important;\n  }\n\n  .overlay {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    height: 100%;\n    max-width: 100%;\n    background-color: white;\n    opacity: 0.2;\n    pointer-events: none;\n  }\n</style>\n","<svelte:options tag=\"plant-select\" accessors />\n\n<script>\n  import { createEventDispatcher } from 'svelte';\n  const dispatch = createEventDispatcher();\n\n  export let value = undefined;\n  let open = false;\n  let main;\n\n  $: value && dispatch('change', value);\n\n  function handleOpen() {\n    open = true;\n    setTimeout(() => {\n      document.addEventListener(\n        'click',\n        () => {\n          open = false;\n        },\n        { once: true },\n      );\n    }, 50);\n  }\n\n  function setSelected(v) {\n    value = v;\n    open = false;\n  }\n\n  export let values = [];\n  export function setItems(_items) {\n    values = _items;\n  }\n\n  export function setValue(v) {\n    value = v;\n  }\n</script>\n\n<div class=\"component-wrapper\" class:open>\n  <div id=\"main\" bind:this={main}>\n    {#if value !== undefined}\n      <div id=\"selected-value\" on:click={handleOpen}>{value}</div>\n    {:else}\n      <div id=\"selected-value\" on:click={handleOpen}>none</div>\n    {/if}\n\n    <div id=\"item-wrapper\">\n      {#each values as item}\n        {#if item !== value}\n          <p\n            style={`opacity: ${item === value ? 0.5 : 1}`}\n            class=\"item\"\n            on:click={() => setSelected(item)}\n          >\n            {item}\n          </p>\n        {/if}\n      {/each}\n    </div>\n  </div>\n</div>\n\n<style lang=\"scss\">\n  @import './global.scss';\n\n  .component-wrapper {\n    height: 30px;\n  }\n\n  .open.component-wrapper {\n    overflow: visible;\n    z-index: 99;\n  }\n\n  #main {\n    color: white;\n    min-width: 100%;\n    border-radius: 2px;\n    width: fit-content;\n    box-sizing: border-box;\n    background-color: #4b4b4b;\n    cursor: pointer;\n  }\n  .open #main {\n    box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.4);\n  }\n\n  #main::before {\n    content: '';\n    position: absolute;\n    left: 5px;\n    top: calc(50% - 2px);\n    width: 5px;\n    height: 5px;\n    border-right: solid 1.5px white;\n    border-bottom: solid 1.5px white;\n    transform: rotate(315deg);\n    border-radius: 2px;\n  }\n\n  .open #main::before {\n    transform: rotate(45deg);\n  }\n\n  #selected-value {\n    padding: 3px;\n    padding-left: 20px;\n    padding-right: 10px;\n  }\n\n  #item-wrapper {\n    width: fit-content;\n    min-width: 100%;\n    background-color: #4b4b4b;\n    border-radius: 2px;\n\n    overflow: hidden;\n    top: 0;\n    z-index: 99;\n    left: 0;\n\n    height: 0px;\n  }\n\n  .open #item-wrapper {\n    height: auto;\n  }\n\n  .item {\n    padding: 6px;\n    margin: 0;\n    background-color: #4b4b4b;\n    cursor: pointer;\n    transition: background-color 0.2s ease;\n  }\n\n  .item:hover {\n    background-color: #3d3d3d;\n  }\n</style>\n","<svelte:options tag=\"plant-shape\" accessors />\n\n<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let value = [\n    { x: 1, y: 0, pinned: true },\n    { x: 0.5, y: 0.5, pinned: true },\n    { x: 1, y: 1, pinned: true },\n  ];\n\n  $: points = value;\n\n  // const tension = 0.4;\n\n  let isHovered = false;\n  // let isRendering = false;\n  let activePoint = undefined;\n  let draggingPoint = undefined;\n\n  let mousePosX = 0;\n  let mousePosY = 0;\n\n  const updateValue = () => {\n    requestAnimationFrame(() => {\n      dispatch('change', points);\n\n      points = points.sort((a, b) => (a.y > b.y ? -1 : 1));\n    });\n  };\n\n  const removePoint = (p) => {\n    if (p.pinned) return;\n    points.splice(points.indexOf(activePoint), 1);\n    updateValue();\n  };\n\n  const handleMouseMove = (ev) => {\n    if (isHovered) {\n      mousePosX = ev.offsetX;\n      mousePosY = ev.offsetY;\n\n      if (activePoint) {\n        draggingPoint = activePoint;\n        activePoint = undefined;\n      }\n\n      if (draggingPoint) {\n        draggingPoint.x = mousePosX / 50;\n        draggingPoint.y = mousePosY / 100;\n        updateValue();\n      }\n    }\n  };\n\n  const handleMouseDown = () => {\n    if (!activePoint) {\n      const point = {\n        x: mousePosX / 50,\n        y: mousePosY / 100,\n        pinned: false,\n      };\n\n      activePoint = point;\n\n      points.push(activePoint);\n      updateValue();\n    }\n  };\n\n  const handleMouseUp = () => {\n    if (activePoint) {\n      removePoint(activePoint);\n      activePoint = undefined;\n    }\n\n    draggingPoint = undefined;\n  };\n\n  const handleMouseOver = () => {\n    isHovered = true;\n  };\n\n  const handleMouseOut = () => {\n    isHovered = false;\n  };\n\n  const lineCommand = (point) => `L ${point.x * 100} ${point.y * 200 - 50}`;\n\n  function renderPath(points) {\n    // build the d attributes by looping over the points\n    return points.reduce(\n      (acc, point, i) =>\n        i === 0\n          ? // if first point\n            `M ${point.x * 100},${point.y * 200 - 50}`\n          : // else\n            `${acc} ${lineCommand(point)}`,\n      '',\n    );\n  }\n\n  $: path = renderPath(points);\n</script>\n\n<div class=\"component-wrapper\">\n  <svg\n    viewBox=\"0 0 100 100\"\n    width=\"50\"\n    height=\"100\"\n    on:mousedown={handleMouseDown}\n    on:mousemove={handleMouseMove}\n    on:mouseover={handleMouseOver}\n    on:mouseout={handleMouseOut}\n    on:mouseup={handleMouseUp}\n    on:focus={handleMouseOver}\n    on:blur={handleMouseOut}\n  >\n    <path d={path} fill=\"none\" stroke=\"#65E2A0\" />\n\n    {#each points as p}\n      <circle\n        cx={p.x * 100}\n        cy={p.y * 200 - 50}\n        r=\"4\"\n        class:pinned={p.pinned}\n        on:mousedown={() => {\n          activePoint = p;\n        }}\n      />\n    {/each}\n  </svg>\n  <svg id=\"right\" viewBox=\"0 0 100 100\" width=\"50\" height=\"100\">\n    <defs>\n      <linearGradient id=\"grad1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n        <stop offset=\"0%\" style=\"stop-color:#65E2A0;stop-opacity:1\" />\n        <stop offset=\"100%\" style=\"stop-color:#469C6E;stop-opacity:1\" />\n      </linearGradient>\n    </defs>\n    <path d={path} fill=\"url(#grad1)\" stroke=\"grey\" />\n  </svg>\n</div>\n\n<style lang=\"scss\">\n  @use '~@plantarium/theme/src/themes.module.scss';\n  @import './global.scss';\n\n  svg {\n    width: 50%;\n  }\n\n  svg > circle {\n    fill: #4b4b4b;\n    stroke: themes.$light-green;\n  }\n\n  svg > circle:hover {\n    fill: themes.$light-green;\n    cursor: pointer;\n  }\n\n  #right {\n    transform: scaleX(-1);\n    & > path {\n      stroke: none;\n    }\n  }\n\n  .component-wrapper {\n    display: flex;\n\t\twidth: 100px;\n\t\tmax-width: 100%;\n  }\n</style>\n","<svelte:options tag=\"plant-section\" />\n\n<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let open = false;\n\n  export let name = '';\n\n  const toggle = () => {\n    open = !open;\n    dispatch('toggle', open);\n  };\n</script>\n\n<div class=\"wrapper\" class:open>\n  <div class=\"header\" on:click={toggle}>\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n    >\n      <path\n        d=\"M13.172 12l-4.95-4.95 1.414-1.414L16 12l-6.364 6.364-1.414-1.414z\"\n      />\n    </svg>\n\n    {#if name}\n      <div class=\"border\">\n        <p>{name}</p>\n      </div>\n    {/if}\n  </div>\n  <div class=\"content\">\n    <slot />\n  </div>\n</div>\n\n<style>\n  p {\n    margin: 0px;\n  }\n\n  .wrapper {\n    width: 100%;\n  }\n\n  .content {\n    max-height: 0px;\n    overflow: hidden;\n    opacity: 0;\n    transition: max-height 0.3s ease, opacity 0.3s ease;\n  }\n\n  .open > .content {\n    opacity: 1;\n    max-height: 1000px;\n  }\n\n  .header {\n    cursor: pointer;\n    display: grid;\n    grid-template-columns: auto 1fr;\n  }\n\n  svg {\n    margin-left: -7px;\n    margin-top: -2px;\n    transform: rotate(0deg);\n    transition: transform 0.2s ease, margin-top 0.3s ease;\n  }\n\n  .open > .header > svg {\n    margin-top: -4px;\n    transform: rotate(90deg);\n  }\n\n  svg > path {\n    stroke: none !important;\n    fill: #303030;\n  }\n\n  p {\n    user-select: none;\n  }\n\n  .border {\n    padding-bottom: 5px;\n    border-bottom: solid thin #30303000;\n    transition: padding-bottom 0.3s ease, border-bottom 0.3s ease;\n  }\n\n  .open > .header > .border {\n    border-bottom: solid thin #30303055;\n    padding-bottom: 10px;\n  }\n</style>\n","import AlertWrapper from './alert/AlertWrapper.svelte';\nimport { createAlert } from './alert/AlertStore';\n\nimport ToastWrapper from './toast/ToastWrapper.svelte';\nimport { createToast } from './toast/ToastStore';\n\nimport Button from './Button.svelte';\nimport Icon from './Icon.svelte';\nimport InputCheckbox from './InputCheckbox.svelte';\nimport InputColor from './InputColor.svelte';\nimport InputCurve from './InputCurve.svelte';\nimport InputInteger from './InputInteger.svelte';\nimport InputFloat from './InputFloat.svelte';\nimport InputSelect from './InputSelect.svelte';\nimport InputShape from './InputShape.svelte';\nimport InputSlider from './InputSlider.svelte';\nimport Section from './Section.svelte';\nimport StackTrace from \"./toast/StackTrace.svelte\";\nimport type { SvelteComponentDev } from 'svelte/internal/index';\n\n\nexport {\n\tInputFloat,\n\tInputInteger,\n\tInputSlider,\n\tInputSelect,\n\tInputCheckbox,\n\tInputCurve,\n\tInputShape,\n\tInputColor,\n\tButton,\n\tIcon,\n\tSection,\n\tAlertWrapper,\n\tcreateAlert,\n\tToastWrapper,\n\tcreateToast,\n  StackTrace\n};\n\n// *****************************************\n// * Notice that the component is not instantiated and mounted to the document <body className=\"\">\n// * Since the compiler is creating a custom element, we instead define and use the custom element\n// * in the index.html file to simulate the end-user experience.\n// ******************************************\n\nexport function stateToElement({\n\ttarget,\n\ttemplate,\n\tvalue,\n}: {\n\ttarget: HTMLElement;\n\ttemplate: ValueTemplate;\n\tvalue: unknown;\n}) {\n\tif (value === undefined && 'value' in template) {\n\t\tvalue = template.value;\n\t}\n\n\tconst component = stateToComponent(template, value);\n\n\tconst props: Partial<ValueTemplate> = { ...template };\n\tdelete props.type;\n\tdelete props.inputType;\n\tdelete props.defaultValue;\n\tdelete props.internal;\n\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t//@ts-ignore\n\tprops['value'] = value;\n\n\treturn new component({ target, props: { ...props, '--width': '100%' } });\n}\n\nexport function stateToComponent(\n\ttemplate: ValueTemplate,\n\tvalue: unknown,\n): typeof SvelteComponentDev {\n\tif (template.inputType === 'select' || Array.isArray(template.values)) {\n\t\treturn InputSelect;\n\t}\n\n\tif (template.inputType === 'curve') {\n\t\treturn InputCurve;\n\t}\n\n\tif (template.inputType === 'shape') {\n\t\treturn InputShape;\n\t}\n\n\tif (template.type === 'number' || typeof value === 'number') {\n\t\tif (template.step && template.step % 1 != 0) {\n\t\t\treturn InputFloat;\n\t\t}\n\t\treturn InputInteger;\n\t}\n\n\treturn InputCheckbox;\n}\n","function applyTransformation(\n  geo: TransferGeometry,\n  offset: number[] = [0, 0, 0],\n  rot: number[] = [0, 0, 0],\n  scale: number[] = [1, 1, 1],\n): TransferGeometry {\n  const newPos = new Float32Array(geo.position.length);\n\n  const l = geo.position.length;\n  const pos = geo.position;\n  for (let i = 0; i < l; i += 3) {\n    //Apply scale\n    const x = pos[i + 0] * scale[0];\n    const y = pos[i + 1] * scale[1];\n    const z = pos[i + 2] * scale[2];\n\n    //Apply rotation\n    const _x = x;\n    const _y = Math.cos(rot[0]) * y - Math.sin(rot[0]) * z;\n    const _z = Math.sin(rot[0]) * y + Math.cos(rot[0]) * z;\n\n    const __x = Math.cos(rot[1]) * _x - Math.sin(rot[1]) * _z;\n    const __y = _y;\n    const __z = Math.sin(rot[1]) * _x + Math.cos(rot[1]) * _z;\n\n    //Apply offset\n    newPos[i + 0] = __x + offset[0];\n    newPos[i + 1] = __y + offset[1];\n    newPos[i + 2] = __z + offset[2];\n  }\n\n  return {\n    position: newPos,\n    uv: geo.uv,\n    normal: geo.normal,\n    index: geo.index,\n  };\n}\n\nexport default function (instances: InstancedGeometry): TransferGeometry[] {\n  const exp: TransferGeometry[] = [];\n  const geometry: TransferGeometry = {\n    position: instances.position,\n    normal: instances.position,\n    uv: instances.uv,\n    index: instances.index,\n  };\n\n  const offset = instances.offset;\n  const rotation = instances.rotation;\n  const scale = instances.scale;\n\n  const l = instances.offset.length;\n  for (let i = 0; i < l; i += 3) {\n    exp.push(\n      applyTransformation(\n        geometry,\n        [offset[i + 0], offset[i + 1], offset[i + 2]],\n        [rotation[i + 0], rotation[i + 1], rotation[i + 2]],\n        [scale[i + 0], scale[i + 1], scale[i + 2]],\n      ),\n    );\n  }\n\n  return exp;\n}\n","import { identity, rotate } from 'gl-matrix/mat4';\nimport {\n  add,\n  cross,\n  dot,\n  mul,\n  normalize,\n  subtract,\n  transformMat4,\n} from 'gl-matrix/vec3';\n\nfunction createCircle(res: number) {\n  const angle = (2 * Math.PI) / res;\n\n  const position = new Array(res).fill(null).map((_, i) => {\n    return [Math.cos(angle * i), Math.sin(angle * i)];\n  });\n\n  return position;\n}\n\nfunction createIndeces(resX:number, stemLength: number){\n\n  const index = new Uint16Array(resX * (stemLength-1) * 6);\n\n  for (let i = 0; i < stemLength; i++) {\n    const indexOffset = i * resX * 6;\n    const positionOffset = i * resX;\n    for (let j = 0; j < resX; j++) {\n      const _indexOffset = indexOffset + j * 6;\n      const _positionOffset = positionOffset + j;\n\n      index[_indexOffset + 0] = _positionOffset;\n      index[_indexOffset + 1] = _positionOffset - resX + 1;\n      index[_indexOffset + 2] = _positionOffset + 1;\n\n      index[_indexOffset + 3] = _positionOffset + 1;\n      index[_indexOffset + 4] = _positionOffset + resX;\n      index[_indexOffset + 5] = _positionOffset;\n\n\n      if (j === resX - 1) {\n        index[_indexOffset + 0] = _positionOffset;\n        index[_indexOffset + 1] = _positionOffset - resX + 1;\n        index[_indexOffset + 2] = _positionOffset + 1;\n\n        index[_indexOffset + 3] = _positionOffset + 1;\n        index[_indexOffset + 4] = _positionOffset + resX;\n        index[_indexOffset + 5] = _positionOffset;\n      } else {\n        index[_indexOffset + 0] = _positionOffset;\n        index[_indexOffset + 1] = _positionOffset + 1;\n        index[_indexOffset + 2] = _positionOffset + resX + 1;\n\n        index[_indexOffset + 3] = _positionOffset + resX + 1;\n        index[_indexOffset + 4] = _positionOffset + resX;\n        index[_indexOffset + 5] = _positionOffset;\n      }\n    }\n  }\n\n  return index;\n\n}\n\nexport default function (path, resolution) {\n  const mat = [],\n    v = [],\n    axis = [];\n\n  const mesh = { position: [], index:createIndeces(resolution, path.length)};\n\n  const position = createCircle(resolution);\n\n  const positionAmount = position.length,\n    pathLength = path.length;\n\n  for (let i = 0; i < pathLength; i++) {\n    const n = [0, 0, 1];\n    if (i === 0) {\n      subtract(v, path[i], path[i + 1]);\n    } else if (i === pathLength - 1) {\n      subtract(v, path[i - 1], path[i]);\n    } else {\n      subtract(v, path[i - 1], path[i + 1]);\n    }\n    normalize(v, v);\n    cross(axis, n, v);\n    const angle = Math.acos(dot(n, v));\n    identity(mat);\n    rotate(mat, mat, angle, axis);\n\n    for (let j = 0; j < positionAmount; j++) {\n      const p = position[j];\n      const pt = [p[0], p[1], 0];\n      const scale = path[i][3];\n      mul(pt, pt, [scale, scale, 1]);\n      transformMat4(pt, pt, mat);\n      add(pt, pt, path[i]);\n      mesh.position.push(pt);\n    }\n  }\n\n\n  return mesh;\n}\n","export default function lerp(v0: number, v1: number, t: number) {\r\n  return v0 * (1 - t) + v1 * t;\r\n}\r\n","import lerp from './lerp';\r\n\r\nfunction interpolateArray(array: number[], alpha = 0): number {\r\n  //Clamp to 0-1 range\r\n  //alpha = Math.max(Math.min(alpha, 1), 0);\r\n\r\n  const _alpha = (array.length - 1) * alpha;\r\n\r\n  //Get value below and above i\r\n  const i = Math.floor(_alpha);\r\n  const j = Math.ceil(_alpha);\r\n\r\n  //Lerp the two values\r\n  return lerp(array[j], array[i], j - _alpha);\r\n}\r\n\r\nexport default interpolateArray;\r\n","import lerp from './lerp';\r\n\r\nexport default function (\r\n  skeleton: Float32Array,\r\n  alpha: number,\r\n): [number, number, number, number] {\r\n  //alpha = Math.max(Math.min(alpha, 1), 0);\r\n\r\n  const _alpha = (skeleton.length / 4 - 1) * alpha;\r\n\r\n  const i = Math.floor(_alpha);\r\n  const j = Math.ceil(_alpha);\r\n\r\n  const a = j - _alpha;\r\n\r\n  return [\r\n    lerp(skeleton[j * 4 + 0], skeleton[i * 4 + 0], a),\r\n    lerp(skeleton[j * 4 + 1], skeleton[i * 4 + 1], a),\r\n    lerp(skeleton[j * 4 + 2], skeleton[i * 4 + 2], a),\r\n    lerp(skeleton[j * 4 + 3], skeleton[i * 4 + 3], a),\r\n  ];\r\n}\r\n","export default function (\r\n  skeleton: Float32Array,\r\n  alpha: number,\r\n): [number, number, number, number] {\r\n  const _alpha = (skeleton.length / 4 - 1) * alpha;\r\n\r\n  const i = Math.floor(_alpha);\r\n  const j = Math.ceil(_alpha);\r\n\r\n  // TODO: we could make this more precise by lerping between the next and the previous vector base on alpha\r\n\r\n  return [\r\n    skeleton[j * 4 + 0] - skeleton[i * 4 + 0],\r\n    skeleton[j * 4 + 1] - skeleton[i * 4 + 1],\r\n    skeleton[j * 4 + 2] - skeleton[i * 4 + 2],\r\n    skeleton[j * 4 + 3] + skeleton[i * 4 + 3] / 2,\r\n  ];\r\n}\r\n","export default function (...geometries: TransferGeometry[]): TransferGeometry {\r\n  if (geometries.length === 1) return geometries[0];\r\n\r\n  const position = new Float32Array(\r\n    geometries.reduce((a, b) => a + b.position.length, 0),\r\n  );\r\n  const normal = new Float32Array(\r\n    geometries.reduce((a, b) => a + b.normal.length, 0),\r\n  );\r\n  const uv = new Float32Array(geometries.reduce((a, b) => a + b.uv.length, 0));\r\n  const indexSize = geometries.reduce((a, b) => a + b.index.length, 0);\r\n  const index =\r\n    indexSize > 65536 ? new Uint32Array(indexSize) : new Uint16Array(indexSize);\r\n\r\n  let posOffset = 0;\r\n  let normalOffset = 0;\r\n  let uvOffset = 0;\r\n  let indexOffset = 0;\r\n\r\n  for (let i = 0; i < geometries.length; i++) {\r\n    //Copy normal array\r\n    const _normal = geometries[i].normal;\r\n    const normalLength = _normal.length;\r\n    for (let j = 0; j < normalLength; j++) {\r\n      normal[normalOffset + j] = _normal[j];\r\n    }\r\n    normalOffset += normalLength;\r\n\r\n    //Copy uv array\r\n    const _uv = geometries[i].uv;\r\n    const uvLength = _uv.length;\r\n    for (let j = 0; j < uvLength; j++) {\r\n      uv[uvOffset + j] = _uv[j];\r\n    }\r\n    uvOffset += uvLength;\r\n\r\n    //Transfer index\r\n    const _index = geometries[i].index;\r\n    const indexLength = _index.length;\r\n    for (let j = 0; j < indexLength; j++) {\r\n      index[j + indexOffset] = _index[j] + posOffset / 3;\r\n    }\r\n    indexOffset += indexLength;\r\n\r\n    //Copy position array\r\n    const _pos = geometries[i].position;\r\n    const posLength = _pos.length;\r\n    for (let j = 0; j < posLength; j++) {\r\n      position[posOffset + j] = _pos[j];\r\n    }\r\n    posOffset += posLength;\r\n  }\r\n\r\n  return {\r\n    position,\r\n    normal,\r\n    uv,\r\n    index,\r\n  };\r\n}\r\n","export default (x: number, y: number) => {\n  return Math.sqrt(x * x + y * y);\n};\n","export default (x: number, y: number, z: number) => {\n  return Math.sqrt(x * x + y * y + z * z);\n};\n","import { makeNoise2D, makeNoise3D } from 'open-simplex-noise';\r\n\r\nlet seed = 0;\r\nlet noise2D = makeNoise2D(seed);\r\nlet noise3D = makeNoise3D(seed);\r\n\r\nexport default {\r\n  n1d: (x: number) => {\r\n    return noise2D(x, 0);\r\n  },\r\n  n2d: (x: number, y: number) => {\r\n    return noise2D(x, y);\r\n  },\r\n  n3d: (x: number, y: number, z: number) => {\r\n    return noise3D(x, y, z);\r\n  },\r\n  get seed() {\r\n    return seed;\r\n  },\r\n  set seed(s) {\r\n    seed = s;\r\n    noise2D = makeNoise2D(seed);\r\n    noise3D = makeNoise3D(seed);\r\n  },\r\n};\r\n","import length2D from './length2D';\n\nexport default ([x, y]: number[]) => {\n  const l = length2D(x, y);\n\n  if (l === 0) {\n    return [1, 0];\n  }\n\n  return [x / l, y / l];\n};\n","import length3D from './length3D';\nexport default (x: number, y: number, z: number) => {\n  const l = length3D(x, y, z);\n  return [x / l, y / l, z / l];\n};\n","export default (x: number, y: number, degrees: number) => {\n  return [\n    x * Math.cos(degrees) - y * Math.sin(degrees),\n    x * Math.sin(degrees) + y * Math.cos(degrees),\n  ];\n};\n","import { Vec3 } from 'ogl';\r\n// import length3D from './length3D';\r\nimport normalize3D from './normalize3D';\r\n\r\n/*\r\n  Javascript version of:  \r\n  http://paulbourke.net/geometry/rotate/source.c\r\n  \r\n*/\r\n\r\n/*\r\n   Rotate a point p by angle theta around an arbitrary axis r\r\n   Return the rotated point.\r\n   Positive angles are anticlockwise looking down the axis\r\n   towards the origin.\r\n   Assume right hand coordinate system.\r\n*/\r\n\r\nexport default function rotate3D(\r\n  point: number[] | Vec3,\r\n  rawAxis: number[] | Vec3,\r\n  theta: number,\r\n) {\r\n  const [px, py, pz] = point;\r\n  const [ax, ay, az] = normalize3D(rawAxis[0], rawAxis[1], rawAxis[2]);\r\n\r\n  const costheta = Math.cos(theta);\r\n  const sintheta = Math.sin(theta);\r\n\r\n  return new Vec3(\r\n    (costheta + (1 - costheta) * ax * ax) * px +\r\n      ((1 - costheta) * ax * ay - az * sintheta) * py +\r\n      ((1 - costheta) * ax * az + ay * sintheta) * pz,\r\n\r\n    ((1 - costheta) * ax * ay + az * sintheta) * px +\r\n      (costheta + (1 - costheta) * ay * ay) * py +\r\n      ((1 - costheta) * ay * az - ax * sintheta) * pz,\r\n\r\n    ((1 - costheta) * ax * az - ay * sintheta) * px +\r\n      ((1 - costheta) * ay * az + ax * sintheta) * py +\r\n      (costheta + (1 - costheta) * az * az) * pz,\r\n  );\r\n}\r\n","import { Geometry } from 'ogl';\n\nexport default function (\n  gl: WebGL2RenderingContext,\n  transfer: TransferGeometry,\n) {\n  return new Geometry(gl, {\n    position: { size: 3, data: transfer.position },\n    normal: { size: 3, data: transfer.normal },\n    uv: { size: 2, data: transfer.uv },\n    index: { data: transfer.index },\n  });\n}\n","const totalSize = 100;\nconst slopeLength = 2;\nconst groundHeight = 1;\n\nexport default function (size = 1, res = 12, resCircle = 12): TransferGeometry {\n  //General parameters\n  const angle = (360 * (Math.PI / 180)) / resCircle; // Convert to radians\n\n  // Plus one for center vertext\n  const amountPositions = res * resCircle + 1;\n\n  const amountTriangles = (res - 1) * resCircle * 2 + resCircle;\n\n  //Final model\n  const position = new Float32Array(amountPositions * 3);\n  const normal = new Float32Array(amountPositions * 3);\n  const uv = new Float32Array(amountPositions * 2);\n  const index = new Uint16Array(amountTriangles * 3);\n\n  //Set first point\n  position[0] = 0;\n  position[1] = 1 - groundHeight;\n  position[2] = 0;\n\n  normal[0] = 0;\n  normal[1] = 1;\n  normal[2] = 0;\n\n  uv[0] = 0.5;\n  uv[1] = 0.5;\n\n  //Create the positions\n  const xPositions = new Array(res - 1)\n    .fill(null)\n    .map((v, i, a) => size + (i / (a.length - 1)) * slopeLength);\n\n  xPositions.push(totalSize);\n\n  const yPositions = xPositions.map((v) => {\n    const slopeAlpha =\n      (Math.max(Math.min(v, size + slopeLength), size) - size) / slopeLength;\n    return Math.sin((slopeAlpha + 0.5) * Math.PI) / 2 + 0.5 - groundHeight;\n  });\n\n  //Loop from center out\n  for (let i = 0; i < res; i++) {\n    const xPos = xPositions[i];\n    const yPos = yPositions[i];\n\n    for (let j = 0; j < resCircle; j++) {\n      const _angle = angle * j;\n\n      const x = Math.cos(_angle) * xPos;\n      const y = yPos;\n      const z = Math.sin(_angle) * xPos;\n\n      const lineOffset = i * resCircle;\n      // We need to offset plus to account for the center vertices\n      const offset = lineOffset + j + 1;\n\n      position[offset * 3 + 0] = x;\n      position[offset * 3 + 1] = y;\n      position[offset * 3 + 2] = z;\n\n      normal[offset * 3 + 0] = 0;\n      normal[offset * 3 + 1] = 1;\n      normal[offset * 3 + 2] = 0;\n\n      uv[offset * 2 + 0] = x;\n      uv[offset * 2 + 1] = z;\n\n      if (i === 0) {\n        const _offset = (offset - 1) * 3;\n\n        index[_offset + 0] = 0;\n        index[_offset + 1] = ((j + 1) % resCircle) + 1;\n        index[_offset + 2] = j + 1;\n      } else if (j === resCircle - 1) {\n        const _offset = i * resCircle * 6 + j * 6 - resCircle * 3;\n\n        index[_offset + 0] = offset;\n        index[_offset + 1] = offset + 1 - resCircle - resCircle;\n        index[_offset + 2] = offset + 1 - resCircle;\n\n        index[_offset + 3] = offset;\n        index[_offset + 4] = offset - resCircle;\n        index[_offset + 5] = offset + 1 - resCircle * 2;\n      } else {\n        // For the outer rings we need to create two facecs per point\n        // const _offset = lineOffset;\n        const _offset = i * resCircle * 6 + j * 6 - resCircle * 3;\n\n        index[_offset + 0] = offset;\n        index[_offset + 1] = offset + 1 - resCircle;\n        index[_offset + 2] = offset + 1;\n\n        index[_offset + 3] = offset;\n        index[_offset + 4] = offset - resCircle;\n        index[_offset + 5] = offset + 1 - resCircle;\n      }\n\n      // Two triangles per vertice\n    }\n  }\n\n  return {\n    position,\n    normal,\n    uv,\n    index,\n  };\n}\n","export default function (\n  shape: Vec2[],\n  { res = 1, xCurvature = 0.5, yCurvature = 0.2 } = {},\n): TransferGeometry {\n  const amountY = shape.length;\n  const amountX = 3 + res * 2;\n  const amountPoints = amountX * amountY;\n\n  const amountTriangles = (amountX - 1) * (amountY - 1) * 2;\n\n  const position = new Float32Array(amountPoints * 3);\n  const normal = new Float32Array(amountPoints * 2);\n  const uv = new Float32Array(amountPoints * 2);\n  const index = new Uint16Array(amountTriangles * 3);\n\n  shape.forEach((s, j) => {\n    const offset = j * amountX;\n\n    // Do the left side of the leaf;\n    for (let i = 0; i < amountX; i++) {\n      const a = 2 - (i / (amountX - 1)) * 2 - 1;\n      position[offset * 3 + i * 3 + 0] = (s.x - 1) * a * 0.5;\n\n      const curvedY = -(1 - s.y) * (1 - s.y) * 0.5;\n      const curvedX = Math.sin(Math.abs(a) * Math.PI) * 0.01;\n\n      position[offset * 3 + i * 3 + 1] =\n        curvedX * xCurvature + curvedY * yCurvature;\n      position[offset * 3 + i * 3 + 2] = s.y - 1;\n\n      uv[offset * 2 + i * 2 + 0] = position[offset * 3 + i * 3 + 0] + 1 / 2;\n      uv[offset * 2 + i * 2 + 1] = position[offset * 3 + i * 3 + 2];\n\n      // Create the indeces per row\n      if (j < shape.length - 1) {\n        const lineOffset = j * (amountX - 1);\n\n        index[lineOffset * 6 + i * 6 + 0] = offset + i + 0;\n        index[lineOffset * 6 + i * 6 + 1] = offset + i + 1;\n        index[lineOffset * 6 + i * 6 + 2] = offset + i + amountX;\n\n        index[lineOffset * 6 + i * 6 + 3] = offset + i + 1;\n        index[lineOffset * 6 + i * 6 + 4] = offset + i + amountX;\n        index[lineOffset * 6 + i * 6 + 5] = offset + i + amountX + 1;\n      }\n    }\n  });\n\n  // console.table(groupArray(index, 3));\n\n  return {\n    position,\n    normal,\n    index,\n    uv,\n  };\n}\n","import { groupArray } from '../../../helpers/src';\nimport { extrudePath } from '../helpers';\n\nexport default function (skeleton: Float32Array, resX = 8): TransferGeometry {\n  // Skeleton\n  // [x,y,z,t,x,y,z,t];\n\n  // skeleton = Float32Array.from([0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0]);\n\n  //Transform the skeleton into the path\n  // from [x,y,z,t,x,y,z,t]\n  // to [[x,y,z,t],[x,y,z,t]]\n  const path = groupArray(skeleton, 4);\n\n  const m = extrudePath(path, resX);\n\n  const _pos = Float32Array.from(\n    m.position.map((arr) => arr.splice(0, 3)).flat(),\n  );\n\n  return {\n    position: _pos,\n    index: m.index,\n    normal: new Float32Array(),\n    uv: new Float32Array(),\n  };\n}\n","import { interpolateSkeleton, join, tube } from '@plantarium/geometry';\nimport {\n\tinterpolateSkeletonVec,\n\tnormalize2D,\n} from '@plantarium/geometry/src/helpers';\nimport rotate2D from '@plantarium/geometry/src/helpers/rotate2D';\n\nconst node: PlantNode = {\n\ttitle: 'Branches',\n\ttype: 'branch',\n\n\toutputs: ['plant'],\n\n\tparameters: {\n\t\tinput: {\n\t\t\ttype: 'plant',\n\t\t\tlabel: 'plant',\n\t\t\texternal: true,\n\t\t},\n\t\tlength: {\n\t\t\ttype: ['number', 'parameter', 'curve'],\n\t\t\tmin: 0,\n\t\t\tmax: 3,\n\t\t\tstep: 0.05,\n\t\t\tvalue: 0.8,\n\t\t},\n\t\tthiccness: {\n\t\t\ttype: 'number',\n\t\t\tmin: 0,\n\t\t\tmax: 1,\n\t\t\tstep: 0.01,\n\t\t\tvalue: 0.8,\n\t\t},\n\t\toffsetSingle: {\n\t\t\ttype: 'number',\n\t\t\tmin: 0,\n\t\t\tmax: 1,\n\t\t\tstep: 0.01,\n\t\t\tvalue: 0.5,\n\t\t},\n\t\tlowestBranch: {\n\t\t\ttype: 'number',\n\t\t\tmin: 0,\n\t\t\tmax: 1,\n\t\t\tstep: 0.01,\n\t\t\tvalue: 0.2,\n\t\t},\n\t\tamount: {\n\t\t\ttype: 'number',\n\t\t\tmin: 0,\n\t\t\tmax: 64,\n\t\t\tvalue: 10,\n\t\t},\n\t},\n\n\tcomputeSkeleton(parameters, ctx) {\n\t\tconst { skeletons: inputSkeletons } = parameters.input.result;\n\n\t\tconst branchRes = ctx.getSetting('stemResY');\n\n\t\tconst skeletons = inputSkeletons\n\t\t\t.map((skelly) => {\n\t\t\t\tconst branches: Float32Array[] = [];\n\n\t\t\t\tconst amount = ctx.handleParameter(parameters.amount);\n\n\t\t\t\tconst lowestBranch = ctx.handleParameter(parameters.lowestBranch);\n\n\t\t\t\tfor (let i = 0; i < amount; i++) {\n\t\t\t\t\tconst _a = i / amount;\n\t\t\t\t\tconst length = ctx.handleParameter(parameters.length, _a) * (1 - _a);\n\t\t\t\t\tconst thiccness = ctx.handleParameter(parameters.thiccness, _a);\n\t\t\t\t\tconst offsetSingle = ctx.handleParameter(parameters.offsetSingle, _a);\n\n\t\t\t\t\tconst isLeft = i % 2 === 0;\n\t\t\t\t\tlet a = lowestBranch + (1 - lowestBranch) * _a;\n\n\t\t\t\t\ta -= (1 / amount) * offsetSingle * (isLeft ? -1 : 1);\n\n\t\t\t\t\t//Vector along stem\n\t\t\t\t\tconst [_vx, , _vz] = interpolateSkeletonVec(skelly, a);\n\n\t\t\t\t\tconst nv = normalize2D([_vx, _vz]);\n\n\t\t\t\t\t//Rotate Vector along stem by 90deg\n\t\t\t\t\tconst [vx, vz] = rotate2D(\n\t\t\t\t\t\tnv[0],\n\t\t\t\t\t\tnv[1],\n\t\t\t\t\t\tisLeft ? -Math.PI / 2 : Math.PI / 2,\n\t\t\t\t\t);\n\n\t\t\t\t\t// Point along skeleton\n\t\t\t\t\tconst [px, py, pz, pt] = interpolateSkeleton(skelly, a);\n\n\t\t\t\t\tconst pointAmount = Math.max(Math.floor(branchRes * length * 10), 4);\n\n\t\t\t\t\tconst branch = new Float32Array(pointAmount * 4);\n\t\t\t\t\tfor (let j = 0; j < pointAmount * 4; j++) {\n\t\t\t\t\t\tconst _a = j / pointAmount;\n\n\t\t\t\t\t\tbranch[j * 4 + 0] = px + vx * _a * length;\n\t\t\t\t\t\tbranch[j * 4 + 1] = py;\n\t\t\t\t\t\tbranch[j * 4 + 2] = pz + vz * _a * length;\n\t\t\t\t\t\tbranch[j * 4 + 3] = pt * thiccness * (1 - _a);\n\t\t\t\t\t}\n\n\t\t\t\t\tbranches.push(branch);\n\t\t\t\t}\n\n\t\t\t\treturn branches;\n\t\t\t})\n\t\t\t.flat();\n\n\t\treturn {\n\t\t\tskeletons,\n\t\t\tallSkeletons: [...skeletons, ...inputSkeletons],\n\t\t};\n\t},\n\n\tcomputeGeometry(parameters, result, ctx) {\n\t\tconst stemResX = ctx.getSetting('stemResX');\n\n\t\tconst { geometry } = parameters.input.result;\n\t\tconst { skeletons } = result;\n\n\t\treturn {\n\t\t\tgeometry: join(\n\t\t\t\tgeometry,\n\t\t\t\t...skeletons.map((skeleton) => tube(skeleton, stemResX)),\n\t\t\t),\n\t\t};\n\t},\n};\n\nexport default node;\n","import { curve } from '@plantarium/helpers';\nimport { interpolateArray } from '@plantarium/geometry';\n\nconst node: PlantNode = {\n  title: 'Curve',\n  type: 'curve',\n  outputs: ['number'],\n  parameters: {\n    value: {\n      type: 'curve',\n      inputType: 'curve',\n      internal: true,\n      label: false,\n      value: [\n        { x: 0, y: 1, pinned: true },\n        { x: 1, y: 0, pinned: true },\n      ],\n    },\n  },\n  computeValue(parameters, ctx, alpha) {\n    const values = curve.toArray(parameters.value).map((v) => v.y);\n    return interpolateArray(values, 1 - alpha);\n  },\n};\n\nexport default node;\n","import { rotate3D } from '@plantarium/geometry';\n// import { logger } from '@plantarium/helpers';\nimport { Vec3 } from 'ogl';\nimport rotate2D from '@plantarium/geometry/src/helpers/rotate2D';\n\n// const log = logger('node.gravity');\n\nconst node: PlantNode = {\n  title: 'Gravity',\n  type: 'gravity',\n\n  outputs: ['plant'],\n\n  parameters: {\n    input: {\n      type: 'plant',\n      external: true,\n    },\n    type: {\n      internal: true,\n      type: 'select',\n      values: ['simple', 'verlet', 'test'],\n    },\n    strength: {\n      type: 'number',\n      inputType: 'slider',\n      min: 0,\n      max: 2,\n      step: 0.05,\n    },\n  },\n  computeSkeleton(parameters, ctx) {\n    const { input, type, strength } = parameters;\n\n    const { skeletons } = input.result;\n\n    if (type === 'simple') {\n      skeletons.forEach((skelly) => {\n        const amount = skelly.length / 4;\n\n        // Loop over every single joint in the skeleton\n        for (let i = 1; i < amount; i++) {\n          const a = i / amount;\n          const y = skelly[i * 4 + 1];\n          const _strength = ctx.handleParameter(strength, a);\n          skelly[i * 4 + 1] = y - y * a * a * a * _strength;\n        }\n\n        return skelly;\n      });\n    }\n\n    if (type === 'test') {\n      skeletons.forEach((skelly) => {\n        const amount = skelly.length / 4;\n\n        // Loop over every single joint in the skeleton\n        for (let i = 1; i < amount; i++) {\n          const a = i / amount;\n\n          const _strength = ctx.handleParameter(strength, a);\n\n          //Current point at skeleton\n          const x = skelly[i * 4 + 0];\n          const y = skelly[i * 4 + 1];\n          const z = skelly[i * 4 + 2];\n          // const t = skelly[i * 4 + 2];\n\n          const px = skelly[(i - 1) * 4 + 0];\n          const py = skelly[(i - 1) * 4 + 1];\n          const pz = skelly[(i - 1) * 4 + 2];\n\n          //Current vector along skeleton\n          const _vx = px - x;\n          const vy = py - y;\n          const _vz = py - z;\n\n          //Rotate vector by 90 deg round the y axis\n          const [vx, vz] = rotate2D(_vx, _vz, 90);\n\n          for (let j = i; j < amount; j++) {\n            //Current point at skeleton\n            const _x = skelly[j * 4 + 0];\n            const _y = skelly[j * 4 + 1];\n            const _z = skelly[j * 4 + 2];\n\n            //Subtract previous point from point;\n            const ox = _x - px;\n            const oy = _y - py;\n            const oz = _z - pz;\n\n            // Rotate around that vector\n\n            // eslint-disable-next-line prefer-const\n            let [rx, ry, rz] = rotate3D(\n              [ox, oy, oz],\n              [vx, vy, vz],\n              _strength * a,\n            );\n\n            // if (limit) {\n            //   rx = ox > 0 ? Math.max(0, rx) : Math.min(0, rx);\n            //   ry = ry + 0;\n            //   rz = oz > 0 ? Math.max(0, rz) : Math.min(0, rz);\n            // }\n\n            //Move the point back\n            const fx = rx + px;\n            const fy = ry + py;\n            const fz = rz + pz;\n\n            skelly[j * 4 + 0] = fx;\n            skelly[j * 4 + 1] = fy;\n            skelly[j * 4 + 2] = fz;\n          }\n        }\n\n        return skelly;\n      });\n    }\n\n    if (type === 'verlet') {\n      skeletons.forEach((skelly) => {\n        const amount = skelly.length / 4;\n\n        // Loop over every single joint in the skeleton\n        for (let i = 1; i < amount; i++) {\n          const x = skelly[i * 4 + 0];\n          const y = skelly[i * 4 + 1];\n          const z = skelly[i * 4 + 2];\n\n          const axis = new Vec3(5, 0, 0).cross(\n            new Vec3(x, y, z),\n            new Vec3(0, 1, 0),\n          );\n\n          const a = i / amount;\n\n          const _strength = ctx.handleParameter(strength, a);\n\n          //Rotate all the other joints\n          for (let j = i; j < amount; j++) {\n            const rot = rotate3D([x, y, z], axis, a * _strength);\n\n            skelly[j * 4 + 0] = rot[0];\n            skelly[j * 4 + 1] = rot[1];\n            skelly[j * 4 + 2] = rot[2];\n          }\n        }\n\n        return skelly;\n      });\n    }\n\n    return {\n      skeletons,\n    };\n  },\n  computeGeometry(parameters) {\n    return parameters.input.result;\n  },\n};\n\nexport default node;\n","import { join } from '@plantarium/geometry';\nimport { logger } from '@plantarium/helpers';\nconst log = logger('nodes.join');\nconst node: PlantNode = {\n  title: 'Join',\n  type: 'join',\n  outputs: ['plant'],\n\n  parameters: {\n    inputA: {\n      type: 'plant',\n      label: 'plant',\n      external: true,\n    },\n    inputB: {\n      type: 'plant',\n      label: 'plant',\n      external: true,\n    },\n  },\n\n  computeSkeleton(parameters, ctx) {\n    log('compute skeleton', parameters, ctx);\n\n    const { inputA, inputB } = parameters;\n\n    if (!inputA || !inputB) {\n      return inputA ? inputA.result : inputB.result;\n    }\n\n    const { skeletons: skeletonsA, allSkeletons: allSkeletonsA } =\n      inputA.result;\n    const { skeletons: skeletonsB, allSkeletons: allSkeletonsB } =\n      inputB.result;\n\n    log(skeletonsA, skeletonsB);\n\n    const skeletons = [...skeletonsA, ...skeletonsB];\n    const allSkeletons = [];\n\n    if (allSkeletonsA) {\n      allSkeletons.push(...allSkeletonsA);\n    }\n    if (allSkeletonsB) {\n      allSkeletons.push(...allSkeletonsB);\n    }\n\n    return {\n      allSkeletons,\n      skeletons,\n    };\n  },\n  computeGeometry(parameters) {\n    const { inputA, inputB } = parameters;\n\n    if (!inputA || !inputB) {\n      return inputA ? inputA.result : inputB.result;\n    }\n\n    const { geometry: geometryA, instances: instancesA } = inputA.result;\n    const { geometry: geometryB, instances: instancesB } = inputB.result;\n\n    const result = join(geometryA, geometryB);\n\n    const instances = [];\n\n    if (instancesA) {\n      instances.push(...instancesA);\n    }\n    if (instancesB) {\n      instances.push(...instancesB);\n    }\n\n    log('compute geometry', { geometryA, geometryB, result });\n\n    return { geometry: result, instances };\n  },\n};\n\nexport default node;\n","import {\n  interpolateSkeleton,\n  interpolateSkeletonVec,\n  leaf,\n  normalize2D,\n} from '@plantarium/geometry';\n// import { logger } from '@plantarium/helpers';\n// const log = logger('nodes.leaf');\n\nconst defaultValue = [\n  {\n    x: 1,\n    y: 1,\n    pinned: true,\n  },\n  {\n    x: 0.62,\n    y: 0.84,\n    pinned: false,\n  },\n  {\n    x: 0.54,\n    y: 0.63,\n    pinned: false,\n  },\n  {\n    x: 0.38,\n    y: 0.41,\n    pinned: true,\n  },\n  {\n    x: 0.44,\n    y: 0.23,\n    pinned: false,\n  },\n  {\n    x: 0.64,\n    y: 0.12,\n    pinned: false,\n  },\n  {\n    x: 0.98,\n    y: 0.02,\n    pinned: true,\n  },\n];\n\nconst node: PlantNode = {\n  title: 'Leaf',\n  type: 'leaf',\n  outputs: ['plant', 'leaf'],\n  parameters: {\n    input: {\n      type: 'plant',\n      external: true,\n    },\n    size: {\n      type: ['number', 'parameter', 'curve', 'vec2'],\n      inputType: 'slider',\n      min: 0,\n      max: 3,\n      step: 0.05,\n      value: 0.2,\n    },\n    shape: {\n      type: 'leaf',\n      external: true,\n      defaultValue,\n    },\n    lowestLeaf: {\n      type: 'number',\n      inputType: 'slider',\n      min: 0,\n      max: 1,\n      step: 0.01,\n      value: 0.5,\n    },\n    curvature: {\n      external: true,\n      type: 'vec2',\n      defaultValue: {\n        x: 0.5,\n        y: 0.2,\n      },\n    },\n    amount: {\n      type: 'number',\n      min: 0,\n      max: 20,\n      value: 10,\n    },\n  },\n\n  computeSkeleton(parameters, ctx) {\n    const { input } = parameters;\n\n    const { skeletons } = input.result;\n\n    const instances = skeletons.map((skelly, i) => {\n      const alpha = i / skeletons.length;\n\n      const amount = ctx.handleParameter(parameters.amount, alpha);\n\n      const offset = new Float32Array(amount * 3);\n      const scale = new Float32Array(amount * 3);\n      const rotation = new Float32Array(amount * 3);\n\n      for (let i = 0; i < amount; i++) {\n        const _alpha = i / (amount - 1);\n        const size = ctx.handleParameter(parameters.size, 1 - _alpha);\n        const lowestLeaf = ctx.handleParameter(parameters.lowestLeaf, _alpha);\n\n        const a = lowestLeaf + (1 - lowestLeaf) * _alpha - 0.001;\n        //const isLeft = i % 2 === 0;\n\n        const [x, y, z] = interpolateSkeleton(skelly, a);\n        const [_vx, , _vz] = interpolateSkeletonVec(skelly, a);\n\n        const nv = normalize2D([_vx, _vz]);\n\n        //Rotate Vector along stem by 90deg\n        // const [vx, vz] = rotate2D(nv[0], nv[1], isLeft ? Math.PI : -Math.PI);\n\n        // Find the angle of the vector\n        const angleRadians = Math.atan2(-nv[0], nv[1]);\n\n        offset[i * 3 + 0] = x;\n        offset[i * 3 + 1] = y;\n        offset[i * 3 + 2] = z;\n\n        scale[i * 3 + 0] = size;\n        scale[i * 3 + 1] = 1;\n        scale[i * 3 + 2] = size;\n\n        rotation[i * 3 + 0] = 0;\n        rotation[i * 3 + 1] =\n          angleRadians - (Math.PI / 2) * (i % 2 === 0 ? -1 : 1);\n        rotation[i * 3 + 2] = 0;\n      }\n\n      return {\n        offset,\n        scale,\n        rotation,\n      };\n    });\n\n    return {\n      allSkeletons: input.result.allSkeletons,\n      skeletons,\n      instances,\n    };\n  },\n\n  computeGeometry(parameters, result, ctx) {\n    const { shape, input, curvature } = parameters;\n    const { instances } = result;\n\n    const _curvature = ctx.handleParameter(curvature);\n\n    const geometry = leaf(ctx.handleParameter(shape), {\n      res: ctx.getSetting('leafRes', 2),\n      xCurvature: _curvature.x,\n      yCurvature: _curvature.y,\n    });\n\n    return {\n      geometry: input.result.geometry,\n      // Here we add the resulting geometry to the instances\n      instances: instances.map((i) => ({ ...i, ...geometry })),\n    };\n  },\n};\n\nexport default node;\n","const node: PlantNode = {\n  title: 'Math',\n  type: 'math',\n  outputs: ['number'],\n  parameters: {\n    mode: {\n      type: 'whatever',\n      internal: true,\n      inputType: 'selection',\n      label: false,\n      defaultValue: 'add',\n      values: ['add', 'multiply', 'subtract'],\n    },\n    a: {\n      type: 'number',\n      defaultValue: 0,\n      label: false,\n    },\n    b: {\n      type: 'number',\n      defaultValue: 0,\n      label: false,\n    },\n  },\n\n  computeValue(parameters, ctx, alpha): number {\n    const { mode } = parameters;\n    const a = ctx.handleParameter(parameters.a, alpha);\n    const b = ctx.handleParameter(parameters.b, alpha);\n\n    switch (mode) {\n      case 'multiply':\n        return a * b;\n      case 'subtract':\n        return a - b;\n      default:\n        return a + b;\n    }\n  },\n};\n\nexport default node;\n","import { noise } from '@plantarium/geometry';\nimport { logger } from '@plantarium/helpers';\nconst log = logger('nodes.noise');\nconst node: PlantNode = {\n  title: 'Noise',\n  type: 'noise',\n  outputs: ['plant'],\n\n  parameters: {\n    input: {\n      type: 'plant',\n      label: 'plant',\n      external: true,\n    },\n    size: {\n      type: 'number',\n      inputType: 'slider',\n      min: 0,\n      max: 20,\n      step: 0.05,\n      value: 1,\n    },\n    strength: {\n      type: 'number',\n      inputType: 'slider',\n      min: 0,\n      max: 2,\n      step: 0.01,\n      value: 0.5,\n    },\n  },\n\n  computeSkeleton(parameters, ctx) {\n    log(parameters);\n\n    const { input } = parameters;\n\n    const size = ctx.handleParameter(parameters.size);\n    const strength = ctx.handleParameter(parameters.strength);\n\n    const { skeletons } = input.result;\n\n    skeletons.forEach((skelly, j) => {\n      const pathLength = skelly.length / 4;\n\n      const lastVec = [skelly[0], skelly[1], skelly[2]];\n      let distance = 0;\n\n      for (let i = 0; i < pathLength; i++) {\n        const a = i / pathLength;\n\n        distance +=\n          (Math.abs(lastVec[0] - skelly[i * 4 + 0]) +\n            Math.abs(lastVec[1] - skelly[i * 4 + 1]) +\n            Math.abs(lastVec[2] - skelly[i * 4 + 2])) /\n          3;\n\n        lastVec[0] = skelly[i * 4 + 0];\n        lastVec[1] = skelly[i * 4 + 1];\n        lastVec[2] = skelly[i * 4 + 2];\n\n        skelly[i * 4 + 0] =\n          skelly[i * 4 + 0] +\n          noise.n1d(distance * size + 0 + j * 500) * strength * a;\n        skelly[i * 4 + 1] =\n          skelly[i * 4 + 1] +\n          noise.n1d(distance * size + 1000 + j * 500) * strength * a;\n        skelly[i * 4 + 2] =\n          skelly[i * 4 + 2] +\n          noise.n1d(distance * size + 2000 + j * 500) * strength * a;\n      }\n    });\n\n    return {\n      skeletons,\n      allSkeletons: input.result.allSkeletons,\n    };\n  },\n\n  computeGeometry(parameters) {\n    return parameters.input.result;\n  },\n};\n\nexport default node;\n","const node: PlantNode = {\n  title: 'Output',\n  type: 'output',\n  outputs: [],\n  parameters: {\n    main: {\n      type: 'plant',\n      label: 'plant',\n      external: true,\n    },\n  },\n  computeNode(parameters = {}) {\n    return (parameters.main as unknown) as NodeResult;\n  },\n};\n\nexport default node;\n","const node: PlantNode = {\n  title: 'Parameter',\n  type: 'parameter',\n  outputs: ['number'],\n  parameters: {\n    value: {\n      type: 'number',\n      value: 0,\n    },\n    variation: {\n      type: 'number',\n      inputType: 'slider',\n      value: 0,\n      min: 0,\n      max: 1,\n      step: 0.05,\n    },\n  },\n  computeValue(parameters, ctx) {\n    const { value = 0, variation = 0 } = parameters;\n\n    if (variation) {\n      return value + ctx.n1d(200) * variation * Math.max(value, 1);\n    }\n    return value;\n  },\n};\n\nexport default node;\n","import { rotate3D } from '@plantarium/geometry';\n\nconst getRotationAxis = (mode: string) => {\n  if (mode === 'X') return [1, 0, 0];\n  if (mode === 'Z') return [0, 0, 1];\n  return [0, 1, 0];\n};\n\nconst node: PlantNode = {\n  title: 'Rotate',\n  type: 'rotate',\n\n  outputs: ['plant'],\n\n  parameters: {\n    input: {\n      type: 'plant',\n      external: true,\n    },\n    type: {\n      internal: true,\n      label: false,\n      type: 'select',\n      values: ['Y', 'X', 'Z'],\n    },\n    spread: {\n      internal: true,\n      type: 'boolean',\n      value: true,\n    },\n    angle: {\n      type: 'number',\n      inputType: 'slider',\n      min: 0,\n      max: Math.PI * 2,\n      step: 0.05,\n      value: 0,\n    },\n  },\n  computeSkeleton(parameters, ctx) {\n    const { input, type, spread } = parameters;\n\n    const {\n      result: { skeletons, allSkeletons },\n    } = input;\n\n    const rotationAxis = getRotationAxis(type as string);\n\n    skeletons.forEach((skelly, j) => {\n      const amount = skelly.length / 4;\n\n      // const a = j / skeletons.length;\n\n      const ox = skelly[0];\n      const oy = skelly[1];\n      const oz = skelly[2];\n\n      const _a = j / skeletons.length;\n\n      const angle =\n        ctx.handleParameter(parameters.angle, _a) * (spread ? _a : 1);\n\n      // Loop over every single joint in the skeleton\n      for (let i = 1; i < amount; i++) {\n        //Current point at skeleton\n        let x = skelly[i * 4 + 0];\n        let y = skelly[i * 4 + 1];\n        let z = skelly[i * 4 + 2];\n\n        //Subtract origin from point;\n        x -= ox;\n        y -= oy;\n        z -= oz;\n\n        //Rotate around axis\n        [x, y, z] = rotate3D([x, y, z], rotationAxis, angle);\n\n        //Move the point back\n        x += ox;\n        y += oy;\n        z += oz;\n\n        skelly[i * 4 + 0] = x;\n        skelly[i * 4 + 1] = y;\n        skelly[i * 4 + 2] = z;\n      }\n    });\n\n    return {\n      skeletons,\n      allSkeletons,\n    };\n  },\n  computeGeometry(parameters) {\n    return parameters.input.result;\n  },\n};\n\nexport default node;\n","const node: PlantNode = {\n  title: 'Shape',\n  type: 'shape',\n  outputs: ['leaf'],\n  parameters: {\n    value: {\n      type: 'leaf',\n      inputType: 'shape',\n      internal: true,\n      label: false,\n      value: [\n        { x: 1, y: 0, pinned: true },\n        { x: 0.5, y: 0.5, pinned: true },\n        { x: 1, y: 1, pinned: true },\n      ],\n    },\n  },\n  computeValue(parameter) {\n    return parameter.value;\n  },\n};\n\nexport default node;\n","const node: PlantNode = {\n  title: 'Slider',\n  type: 'slider',\n  outputs: ['number'],\n  parameters: {\n    value: {\n      type: 'number',\n      label: false,\n      inputType: 'slider',\n      internal: true,\n      min: 0,\n      max: 1,\n      step: 0.01,\n      value: 0,\n    },\n  },\n  computeValue(parameters) {\n    return parameters.value;\n  },\n};\n\nexport default node;\n","import { join, tube } from '@plantarium/geometry';\nimport { logger } from '@plantarium/helpers';\nconst log = logger('nodes.stem');\n\nconst node: PlantNode = {\n  title: 'Stem',\n  type: 'stem',\n  outputs: ['plant'],\n  parameters: {\n    origin: {\n      type: 'vec3',\n      external: true,\n      defaultValue: {\n        x: 0,\n        y: 0,\n        z: 0,\n      },\n    },\n    height: {\n      type: 'number',\n      inputType: 'slider',\n      min: 0,\n      max: 5,\n      step: 0.05,\n      value: 2,\n    },\n    thiccness: {\n      type: 'number',\n      inputType: 'slider',\n      min: 0,\n      max: 0.2,\n      step: 0.01,\n      value: 0.06,\n    },\n    amount: {\n      type: 'number',\n      min: 0,\n      max: 20,\n      value: 1,\n    },\n  },\n\n  computeSkeleton(parameters, ctx) {\n    log('computeSkeleton', parameters);\n\n    const amount = ctx.handleParameter(parameters.amount);\n\n    const amountPoints = ctx.getSetting('stemResY');\n\n    const skeletons = [];\n\n    for (let i = 0; i < amount; i++) {\n      const { x: ox, y: oy, z: oz } = ctx.handleParameter(parameters.origin);\n\n      const height = ctx.handleParameter(parameters.height);\n\n      const skeleton = new Float32Array(amountPoints * 4);\n\n      for (let j = 0; j < amountPoints; j++) {\n        const a = j / amountPoints;\n        const thiccness =\n          ctx.handleParameter(parameters.thiccness, a) * (1 - a);\n\n        //Create point\n        const x = ox;\n        const y = oy + a * height;\n        const z = oz;\n\n        skeleton[j * 4 + 0] = x;\n        skeleton[j * 4 + 1] = y;\n        skeleton[j * 4 + 2] = z;\n        skeleton[j * 4 + 3] = thiccness;\n      }\n\n      skeletons.push(skeleton);\n    }\n\n    return {\n      skeletons,\n      allSkeletons: skeletons,\n    };\n  },\n\n  computeGeometry(parameters, result, ctx) {\n    log('computeNode', parameters, result);\n    const stemResX = ctx.getSetting('stemResX');\n    return {\n      geometry: join(\n        ...result.skeletons.map((skelly) => tube(skelly, stemResX)),\n      ),\n    };\n  },\n};\n\nexport default node;\n","const node: PlantNode = {\n  title: 'Vec2',\n  type: 'vec2',\n  outputs: ['vec2'],\n  parameters: {\n    x: {\n      label: false,\n      type: 'number',\n      value: 0,\n      defaultValue: 0,\n    },\n    y: {\n      label: false,\n      type: 'number',\n      value: 0,\n      defaultValue: 0,\n    },\n  },\n};\n\nexport default node;\n","const node: PlantNode = {\n  title: 'Vec3',\n  type: 'vec3',\n  outputs: ['vec3'],\n  parameters: {\n    x: {\n      label: false,\n      type: 'number',\n      value: 0,\n      defaultValue: 0,\n    },\n    y: {\n      label: false,\n      type: 'number',\n      value: 0,\n      defaultValue: 0,\n    },\n    z: {\n      label: false,\n      type: 'number',\n      value: 0,\n      defaultValue: 0,\n    },\n  },\n};\n\nexport default node;\n","import * as nodes from './nodes';\nconst _nodes = Object.values(nodes).map((node) => {\n  if ('computeNode' in node) {\n    node.compute = node.computeNode;\n  } else {\n    node.compute = (parameters) => ({\n      type: node.type,\n      parameters,\n    });\n  }\n  return node;\n}) as PlantNode[];\nexport default _nodes;\n","import type NodeInput from '../model/NodeInput';\nimport type NodeOutput from '../model/NodeOutput';\nimport type NodeSystem from '../model/NodeSystem';\nimport './ConnectionView.scss';\n\nconst minMax = (min: number, max: number) => (num: number) =>\n  Math.min(Math.max(num, min), max);\n\nconst limitDecimals = (amountDecimals: number) => {\n  const amount = 10 ** amountDecimals;\n  return (num) => Math.floor(num * amount) / amount;\n};\n\nconst limitSafe = minMax(-100000, 100000);\nconst removeDecimals = limitDecimals(1);\n\nconst limit = (num: number) => limitSafe(removeDecimals(num));\n\nexport default class ConnectionView {\n  path: SVGPathElement;\n  hoverPath: SVGPathElement;\n  system: NodeSystem;\n  svg: SVGElement;\n\n  x1 = 0;\n  y1 = 0;\n  x2 = 0;\n  y2 = 0;\n\n  constructor(\n    { x1 = 0, y1 = 0, x2 = 0, y2 = 0 },\n    socket: NodeOutput | NodeInput,\n  ) {\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x2;\n    this.y2 = y2;\n\n    this.system = socket.node.system;\n\n    this.svg = document.createElementNS(\n      'http://www.w3.org/2000/svg',\n      'svg',\n    ) as SVGElement;\n    this.svg.setAttribute('viewbox', '0 0 100 100');\n    this.svg.setAttribute('width', '100');\n    this.svg.setAttribute('height', '100');\n    this.svg.style.overflow = 'visible';\n    this.svg.style.position = 'absolute';\n    this.svg.style.top = '3.5px';\n    this.svg.style.pointerEvents = 'none';\n    this.svg.style.zIndex = '-1';\n    socket.view.wrapper.append(this.svg);\n\n    this.path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    this.path.classList.add('node-connection-path');\n    this.path.setAttribute('vector-effect', 'non-scaling-stroke');\n    this.path.setAttribute(\n      'd',\n      `\n      M 0 0\n      C 50 0 \n        50 100\n\t\t\t\t100  100\n      `,\n    );\n    this.svg.appendChild(this.path);\n\n    this.setPosition();\n  }\n\n  setPosition({ x1 = this.x1, y1 = this.y1, x2 = this.x2, y2 = this.y2 } = {}) {\n    this.x1 = limit(x1);\n    this.y1 = limit(y1);\n    this.x2 = limit(x2);\n    this.y2 = limit(y2);\n\n    const width = this.x2 - this.x1 + 3.5;\n    const height = this.y2 - this.y1;\n\n    this?.hoverPath?.setAttribute(\n      'd',\n      `\n      M 0 0\n      C ${width / 2} 0 \n        ${width / 2} ${height}\n\t\t\t\t${width}  ${height}\n      `,\n    );\n\n    this.path.setAttribute(\n      'd',\n      `\n      M 0 0\n      C ${width / 2} 0 \n        ${width / 2} ${height}\n\t\t\t\t${width}  ${height}\n      `,\n    );\n  }\n\n  remove() {\n    this.path.remove();\n    this?.hoverPath?.remove();\n    this.system.save();\n  }\n}\n","import type Node from '../model/Node';\nimport type NodeConnection from '../model/NodeConnection';\nimport ConnectionView from './ConnectionView';\nimport type NodeInputView from './NodeInputView';\nimport type NodeOutputView from './NodeOutputView';\n\nexport default class NodeConnectionView extends ConnectionView {\n\tconnection!: NodeConnection;\n\n\tinput!: NodeInputView;\n\toutput!: NodeOutputView;\n\n\tconstructor(conn: NodeConnection) {\n\t\tsuper({}, conn.output);\n\t\tthis.connection = conn;\n\n\t\tthis.input = conn.input.view;\n\t\tthis.output = conn.output.view;\n\n\t\tthis.hoverPath = document.createElementNS(\n\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t'path',\n\t\t);\n\t\tthis.hoverPath.classList.add('node-connection-hover');\n\t\tthis.hoverPath.setAttribute('vector-effect', 'non-scaling-stroke');\n\t\tthis.svg.append(this.hoverPath);\n\n\t\tthis.hoverPath.addEventListener('mouseover', () => {\n\t\t\tconst { activeNode } = this.system.view;\n\t\t\tif (\n\t\t\t\tactiveNode &&\n\t\t\t\tactiveNode.view.active &&\n\t\t\t\tactiveNode.view.hoveredConnection !== this\n\t\t\t) {\n\t\t\t\tthis.handleNodeOver(activeNode);\n\t\t\t}\n\t\t});\n\n\t\tthis.hoverPath.addEventListener('mouseout', () => {\n\t\t\tconst { activeNode } = this.system.view;\n\t\t\tthis.handleNodeOut(activeNode);\n\t\t});\n\n\t\tconn.input.node.system.view.colorStore.on(conn.input.type[0], (color) => {\n\t\t\tthis.path.style.stroke = color;\n\t\t});\n\t}\n\n\thandleNodeOver(node: Node) {\n\t\tif (this.connection.isNodeJoinable(node)) {\n\t\t\tnode.view.hoveredConnection = this;\n\t\t\tthis.path.classList.add('hover-active');\n\t\t}\n\t}\n\n\thandleNodeOut(node: Node) {\n\t\tif (node && node.view.hoveredConnection === this) {\n\t\t\tdelete node.view.hoveredConnection;\n\t\t}\n\t\tthis.path.classList.remove('hover-active');\n\t}\n\n\tremove() {\n\t\tsuper.remove();\n\t}\n}\n","export default function makeDomController(domElement) {\n  const elementValid = isDomElement(domElement);\n  if (!elementValid) {\n    throw new Error(\n      'panzoom requires DOM element to be attached to the DOM tree',\n    );\n  }\n\n  const owner = domElement.parentElement;\n  domElement.scrollTop = 0;\n\n  const api = {\n    getBBox: getBBox,\n    getOwner: getOwner,\n    applyTransform: applyTransform,\n  };\n\n  return api;\n\n  function getOwner() {\n    return owner;\n  }\n\n  function getBBox() {\n    // TODO: We should probably cache this?\n    return {\n      left: 0,\n      top: 0,\n      width: domElement.clientWidth,\n      height: domElement.clientHeight,\n    };\n  }\n\n  function applyTransform(transform) {\n    // TODO: Should we cache this?\n    domElement.style.transformOrigin = '0 0 0';\n    domElement.style.transform =\n      'matrix(' +\n      transform.scale +\n      ', 0, 0, ' +\n      transform.scale +\n      ', ' +\n      transform.x +\n      ', ' +\n      transform.y +\n      ')';\n  }\n}\n\nexport function isDomElement(element) {\n  return element && element.parentElement && element.style;\n}\n","/**\n * Allows smooth kinetic scrolling of the surface\n */\nexport default function kinetic(getPoint, scroll, settings) {\n  if (typeof settings !== 'object') {\n    // setting could come as boolean, we should ignore it, and use an object.\n    settings = {};\n  }\n\n  const minVelocity =\n    typeof settings.minVelocity === 'number' ? settings.minVelocity : 5;\n  const amplitude =\n    typeof settings.amplitude === 'number' ? settings.amplitude : 0.25;\n  const cancelAnimationFrame =\n    typeof settings.cancelAnimationFrame === 'function'\n      ? settings.cancelAnimationFrame\n      : getCancelAnimationFrame();\n  const requestAnimationFrame =\n    typeof settings.requestAnimationFrame === 'function'\n      ? settings.requestAnimationFrame\n      : getRequestAnimationFrame();\n\n  let lastPoint;\n  let timestamp;\n  const timeConstant = 342;\n\n  let ticker;\n  let vx, targetX, ax;\n  let vy, targetY, ay;\n\n  let raf;\n\n  return {\n    start: start,\n    stop: stop,\n    cancel: dispose,\n  };\n\n  function dispose() {\n    cancelAnimationFrame(ticker);\n    cancelAnimationFrame(raf);\n  }\n\n  function start() {\n    lastPoint = getPoint();\n\n    ax = ay = vx = vy = 0;\n    timestamp = new Date();\n\n    cancelAnimationFrame(ticker);\n    cancelAnimationFrame(raf);\n\n    // we start polling the point position to accumulate velocity\n    // Once we stop(), we will use accumulated velocity to keep scrolling\n    // an object.\n    ticker = requestAnimationFrame(track);\n  }\n\n  function track() {\n    const now = Date.now();\n    const elapsed = now - timestamp;\n    timestamp = now;\n\n    const currentPoint = getPoint();\n\n    const dx = currentPoint.x - lastPoint.x;\n    const dy = currentPoint.y - lastPoint.y;\n\n    lastPoint = currentPoint;\n\n    const dt = 1000 / (1 + elapsed);\n\n    // moving average\n    vx = 0.8 * dx * dt + 0.2 * vx;\n    vy = 0.8 * dy * dt + 0.2 * vy;\n\n    ticker = requestAnimationFrame(track);\n  }\n\n  function stop() {\n    cancelAnimationFrame(ticker);\n    cancelAnimationFrame(raf);\n\n    const currentPoint = getPoint();\n\n    targetX = currentPoint.x;\n    targetY = currentPoint.y;\n    timestamp = Date.now();\n\n    if (vx < -minVelocity || vx > minVelocity) {\n      ax = amplitude * vx;\n      targetX += ax;\n    }\n\n    if (vy < -minVelocity || vy > minVelocity) {\n      ay = amplitude * vy;\n      targetY += ay;\n    }\n\n    raf = requestAnimationFrame(autoScroll);\n  }\n\n  function autoScroll() {\n    const elapsed = Date.now() - timestamp;\n\n    let moving = false;\n    let dx = 0;\n    let dy = 0;\n\n    if (ax) {\n      dx = -ax * Math.exp(-elapsed / timeConstant);\n\n      if (dx > 0.5 || dx < -0.5) moving = true;\n      else dx = ax = 0;\n    }\n\n    if (ay) {\n      dy = -ay * Math.exp(-elapsed / timeConstant);\n\n      if (dy > 0.5 || dy < -0.5) moving = true;\n      else dy = ay = 0;\n    }\n\n    if (moving) {\n      scroll(targetX + dx, targetY + dy);\n      raf = requestAnimationFrame(autoScroll);\n    }\n  }\n}\n\nfunction getCancelAnimationFrame() {\n  if (typeof cancelAnimationFrame === 'function') return cancelAnimationFrame;\n  return clearTimeout;\n}\n\nfunction getRequestAnimationFrame() {\n  if (typeof requestAnimationFrame === 'function') return requestAnimationFrame;\n\n  return function (handler) {\n    return setTimeout(handler, 16);\n  };\n}\n","import type NodeSystemView from '../../view/NodeSystemView';\nimport makeDomController from './domController';\nimport kinetic from './kinetic';\n\ninterface Bounds {\n\tleft: number;\n\ttop: number;\n\tright: number;\n\tbottom: number;\n}\nexport interface Transform {\n\tx: number;\n\ty: number;\n\tscale: number;\n}\n\nexport interface TransformOrigin {\n\tx: number;\n\ty: number;\n}\nexport interface PanZoomController {\n\tgetOwner: () => Element;\n\tapplyTransform: (transform: Transform) => void;\n}\n\ninterface PanZoomOptions {\n\tfilterKey?: () => boolean;\n\tbounds?: boolean | Bounds;\n\tmaxZoom?: number;\n\tminZoom?: number;\n\tboundsPadding?: number;\n\tzoomDoubleClickSpeed?: number;\n\tzoomSpeed?: number;\n\tinitialX?: number;\n\tinitialY?: number;\n\tinitialZoom?: number;\n\tpinchSpeed?: number;\n\tbeforeWheel?: (e: WheelEvent) => void;\n\tbeforeMouseDown?: (e: MouseEvent) => void;\n\tautocenter?: boolean;\n\tonTouch?: (e: TouchEvent) => void;\n\tonTransform?: (t: Transform) => void;\n\tonDoubleClick?: (e: Event) => void;\n\tsmoothScroll?: boolean;\n\tcontroller?: PanZoomController;\n\tenableTextSelection?: boolean;\n\tdisableKeyboardInteraction?: boolean;\n\ttransformOrigin?: TransformOrigin;\n\tview?: NodeSystemView;\n}\n\nconst defaultZoomSpeed = 0.2;\n\n/**\n * Creates a new instance of panzoom, so that an object can be panned and zoomed\n *\n * @param {DOMElement} domElement where panzoom should be attached.\n * @param {Object} options that configure behavior.\n */\nexport function createPanZoom(\n\tdomElement: HTMLElement,\n\toptions: PanZoomOptions,\n) {\n\tconst panController = makeDomController(domElement);\n\n\tconst owner = panController.getOwner();\n\t// just to avoid GC pressure, every time we do intermediate transform\n\t// we return this object. For internal use only. Never give it back to the consumer of this library\n\tconst storedCTMResult = { x: 0, y: 0 };\n\n\tlet isDirty = false;\n\tconst transform = {\n\t\tx: 0,\n\t\ty: 0,\n\t\tscale: 1,\n\t};\n\n\t// TODO: likely need to unite pinchSpeed with zoomSpeed\n\tconst pinchSpeed =\n\t\ttypeof options.pinchSpeed === 'number' ? options.pinchSpeed : 1;\n\tconst bounds = options.bounds;\n\tconst maxZoom =\n\t\ttypeof options.maxZoom === 'number'\n\t\t\t? options.maxZoom\n\t\t\t: Number.POSITIVE_INFINITY;\n\tconst minZoom = typeof options.minZoom === 'number' ? options.minZoom : 0;\n\n\tconst boundsPadding =\n\t\ttypeof options.boundsPadding === 'number' ? options.boundsPadding : 0.05;\n\n\tconst speed =\n\t\ttypeof options.zoomSpeed === 'number'\n\t\t\t? options.zoomSpeed\n\t\t\t: defaultZoomSpeed;\n\tlet transformOrigin = parseTransformOrigin(options.transformOrigin);\n\n\tvalidateBounds(bounds);\n\n\tlet frameAnimation;\n\tlet touchInProgress = false;\n\n\t// We only need to fire panstart when actual move happens\n\tlet panstartFired = false;\n\n\t// cache mouse coordinates here\n\tlet mouseX;\n\tlet mouseY;\n\n\tlet pinchZoomLength;\n\n\tconst smoothScroll = kinetic(getPoint, scroll, options.smoothScroll);\n\n\tlet zoomToAnimation;\n\n\tlet multiTouch;\n\tlet paused = false;\n\n\tlistenForEvents();\n\n\tconst api = {\n\t\tdispose,\n\t\tmoveBy,\n\t\tmoveTo,\n\t\tsmoothMoveTo,\n\t\tcenterOn,\n\t\tzoomTo: publicZoomTo,\n\t\tzoomAbs,\n\n\t\tpause,\n\t\tresume,\n\t\tisPaused,\n\n\t\tgetTransform: getTransformModel,\n\n\t\tsetTransform,\n\n\t\tgetTransformOrigin,\n\t\tsetTransformOrigin,\n\t};\n\n\tconst initialX =\n\t\ttypeof options.initialX === 'number' ? options.initialX : transform.x;\n\tconst initialY =\n\t\ttypeof options.initialY === 'number' ? options.initialY : transform.y;\n\tconst initialZoom =\n\t\ttypeof options.initialZoom === 'number'\n\t\t\t? options.initialZoom\n\t\t\t: transform.scale;\n\n\tif (\n\t\tinitialX != transform.x ||\n\t\tinitialY != transform.y ||\n\t\tinitialZoom != transform.scale\n\t) {\n\t\tzoomAbs(initialX, initialY, initialZoom);\n\t}\n\n\treturn api;\n\n\tfunction pause() {\n\t\treleaseEvents();\n\t\tpaused = true;\n\t}\n\n\tfunction resume() {\n\t\tif (paused) {\n\t\t\tlistenForEvents();\n\t\t\tpaused = false;\n\t\t}\n\t}\n\n\tfunction isPaused() {\n\t\treturn paused;\n\t}\n\n\tfunction transformToScreen(x, y) {\n\t\tstoredCTMResult.x = x;\n\t\tstoredCTMResult.y = y;\n\n\t\treturn storedCTMResult;\n\t}\n\n\tfunction setTransform(x, y, s) {\n\t\ttransform.x = x;\n\t\ttransform.y = y;\n\t\ttransform.scale = s;\n\t\tmakeDirty();\n\t}\n\n\tfunction getTransformModel() {\n\t\t// TODO: should this be read only?\n\t\treturn transform;\n\t}\n\n\tfunction getTransformOrigin() {\n\t\treturn transformOrigin;\n\t}\n\n\tfunction setTransformOrigin(newTransformOrigin) {\n\t\ttransformOrigin = parseTransformOrigin(newTransformOrigin);\n\t}\n\n\tfunction getPoint() {\n\t\treturn {\n\t\t\tx: transform.x,\n\t\t\ty: transform.y,\n\t\t};\n\t}\n\n\tfunction moveTo(x, y) {\n\t\ttransform.x = x;\n\t\ttransform.y = y;\n\n\t\tkeepTransformInsideBounds();\n\n\t\tmakeDirty();\n\t}\n\n\tfunction moveBy(dx, dy) {\n\t\tmoveTo(transform.x + dx, transform.y + dy);\n\t}\n\n\tfunction keepTransformInsideBounds() {\n\t\tconst boundingBox = getBoundingBox();\n\t\tif (!boundingBox) return;\n\n\t\tlet adjusted = false;\n\t\tconst clientRect = getClientRect();\n\n\t\tlet diff = boundingBox.left - clientRect.right;\n\t\tif (diff > 0) {\n\t\t\ttransform.x += diff;\n\t\t\tadjusted = true;\n\t\t}\n\t\t// check the other side:\n\t\tdiff = boundingBox.right - clientRect.left;\n\t\tif (diff < 0) {\n\t\t\ttransform.x += diff;\n\t\t\tadjusted = true;\n\t\t}\n\n\t\t// y axis:\n\t\tdiff = boundingBox.top - clientRect.bottom;\n\t\tif (diff > 0) {\n\t\t\t// we adjust transform, so that it matches exactly our bounding box:\n\t\t\t// transform.y = boundingBox.top - (boundingBox.height + boundingBox.y) * transform.scale =>\n\t\t\t// transform.y = boundingBox.top - (clientRect.bottom - transform.y) =>\n\t\t\t// transform.y = diff + transform.y =>\n\t\t\ttransform.y += diff;\n\t\t\tadjusted = true;\n\t\t}\n\n\t\tdiff = boundingBox.bottom - clientRect.top;\n\t\tif (diff < 0) {\n\t\t\ttransform.y += diff;\n\t\t\tadjusted = true;\n\t\t}\n\t\treturn adjusted;\n\t}\n\n\t/**\n\t * Returns bounding box that should be used to restrict scene movement.\n\t */\n\tfunction getBoundingBox() {\n\t\tif (!bounds) return; // client does not want to restrict movement\n\n\t\tif (typeof bounds === 'boolean') {\n\t\t\t// for boolean type we use parent container bounds\n\t\t\tconst ownerRect = owner.getBoundingClientRect();\n\t\t\tconst sceneWidth = ownerRect.width;\n\t\t\tconst sceneHeight = ownerRect.height;\n\n\t\t\treturn {\n\t\t\t\tleft: sceneWidth * boundsPadding,\n\t\t\t\ttop: sceneHeight * boundsPadding,\n\t\t\t\tright: sceneWidth * (1 - boundsPadding),\n\t\t\t\tbottom: sceneHeight * (1 - boundsPadding),\n\t\t\t};\n\t\t}\n\n\t\treturn bounds;\n\t}\n\n\tfunction getClientRect() {\n\t\tconst bbox = panController.getBBox();\n\t\tconst leftTop = client(bbox.left, bbox.top);\n\n\t\treturn {\n\t\t\tleft: leftTop.x,\n\t\t\ttop: leftTop.y,\n\t\t\tright: bbox.width * transform.scale + leftTop.x,\n\t\t\tbottom: bbox.height * transform.scale + leftTop.y,\n\t\t};\n\t}\n\n\tfunction client(x, y) {\n\t\treturn {\n\t\t\tx: x * transform.scale + transform.x,\n\t\t\ty: y * transform.scale + transform.y,\n\t\t};\n\t}\n\n\tfunction makeDirty() {\n\t\tisDirty = true;\n\n\t\tframeAnimation = window.requestAnimationFrame(frame);\n\t}\n\n\tfunction zoomByRatio(clientX, clientY, ratio) {\n\t\tif (isNaN(clientX) || isNaN(clientY) || isNaN(ratio)) {\n\t\t\tthrow new Error('zoom requires valid numbers');\n\t\t}\n\n\t\tconst newScale = transform.scale * ratio;\n\n\t\tif (newScale < minZoom) {\n\t\t\tif (transform.scale === minZoom) return;\n\n\t\t\tratio = minZoom / transform.scale;\n\t\t}\n\t\tif (newScale > maxZoom) {\n\t\t\tif (transform.scale === maxZoom) return;\n\n\t\t\tratio = maxZoom / transform.scale;\n\t\t}\n\n\t\tconst size = transformToScreen(clientX, clientY);\n\n\t\ttransform.x = size.x - ratio * (size.x - transform.x);\n\t\ttransform.y = size.y - ratio * (size.y - transform.y);\n\n\t\t// TODO: https://github.com/anvaka/panzoom/issues/112\n\t\tif (bounds && boundsPadding === 1 && minZoom === 1) {\n\t\t\ttransform.scale *= ratio;\n\t\t\tkeepTransformInsideBounds();\n\t\t} else {\n\t\t\tconst transformAdjusted = keepTransformInsideBounds();\n\t\t\tif (!transformAdjusted) transform.scale *= ratio;\n\t\t}\n\n\t\tmakeDirty();\n\t}\n\n\tfunction zoomAbs(clientX, clientY, zoomLevel) {\n\t\tconst ratio = zoomLevel / transform.scale;\n\t\tzoomByRatio(clientX, clientY, ratio);\n\t}\n\n\tfunction centerOn(ui) {\n\t\tconst parent = ui.ownerSVGElement;\n\t\tif (!parent)\n\t\t\tthrow new Error('ui element is required to be within the scene');\n\n\t\t// TODO: should i use controller's screen CTM?\n\t\tconst clientRect = ui.getBoundingClientRect();\n\t\tconst cx = clientRect.left + clientRect.width / 2;\n\t\tconst cy = clientRect.top + clientRect.height / 2;\n\n\t\tconst container = parent.getBoundingClientRect();\n\t\tconst dx = container.width / 2 - cx;\n\t\tconst dy = container.height / 2 - cy;\n\n\t\tinternalMoveBy(dx, dy);\n\t}\n\n\tfunction smoothMoveTo(x, y) {\n\t\tinternalMoveBy(x - transform.x, y - transform.y);\n\t}\n\n\tfunction internalMoveBy(dx, dy) {\n\t\treturn moveBy(dx, dy);\n\t}\n\n\tfunction scroll(x, y) {\n\t\tcancelZoomAnimation();\n\t\tmoveTo(x, y);\n\t}\n\n\tfunction dispose() {\n\t\treleaseEvents();\n\t}\n\n\tfunction listenForEvents() {\n\t\towner.addEventListener('mousedown', onMouseDown, { passive: true });\n\t\towner.addEventListener('dblclick', onDoubleClick, { passive: false });\n\t\towner.addEventListener('touchstart', onTouch, { passive: true });\n\t\towner.addEventListener('keydown', onKeyDown);\n\n\t\t// Need to listen on the owner container, so that we are not limited\n\t\t// by the size of the scrollable domElement\n\t\towner.addEventListener('wheel', onMouseWheel, { passive: true });\n\n\t\tmakeDirty();\n\t}\n\n\tfunction releaseEvents() {\n\t\towner.removeEventListener('wheel', onMouseWheel);\n\t\towner.removeEventListener('mousedown', onMouseDown);\n\t\towner.removeEventListener('keydown', onKeyDown);\n\t\towner.removeEventListener('dblclick', onDoubleClick);\n\t\towner.removeEventListener('touchstart', onTouch);\n\n\t\tif (frameAnimation) {\n\t\t\twindow.cancelAnimationFrame(frameAnimation);\n\t\t\tframeAnimation = 0;\n\t\t}\n\n\t\tsmoothScroll.cancel();\n\n\t\treleaseDocumentMouse();\n\t\treleaseTouches();\n\n\t\ttriggerPanEnd();\n\t}\n\n\tfunction frame() {\n\t\tif (isDirty) applyTransform();\n\t}\n\n\tfunction applyTransform() {\n\t\tisDirty = false;\n\n\t\t// TODO: Should I allow to cancel this?\n\t\tpanController.applyTransform(transform);\n\n\t\tframeAnimation = 0;\n\n\t\tif (options.onTransform) {\n\t\t\toptions.onTransform(transform);\n\t\t}\n\t}\n\n\tfunction onKeyDown(e) {\n\t\tlet x = 0,\n\t\t\ty = 0,\n\t\t\tz = 0;\n\t\tif (e.keyCode === 38) {\n\t\t\ty = 1; // up\n\t\t} else if (e.keyCode === 40) {\n\t\t\ty = -1; // down\n\t\t} else if (e.keyCode === 37) {\n\t\t\tx = 1; // left\n\t\t} else if (e.keyCode === 39) {\n\t\t\tx = -1; // right\n\t\t} else if (e.keyCode === 189 || e.keyCode === 109) {\n\t\t\t// DASH or SUBTRACT\n\t\t\tz = 1; // `-` -  zoom out\n\t\t} else if (e.keyCode === 187 || e.keyCode === 107) {\n\t\t\t// EQUAL SIGN or ADD\n\t\t\tz = -1; // `=` - zoom in (equal sign on US layout is under `+`)\n\t\t}\n\t\tif (z) {\n\t\t\tconst scaleMultiplier = getScaleMultiplier(z * 100);\n\t\t\tconst offset = transformOrigin ? getTransformOriginOffset() : midPoint();\n\t\t\tpublicZoomTo(offset.x, offset.y, scaleMultiplier);\n\t\t}\n\t}\n\n\tfunction midPoint() {\n\t\tconst ownerRect = owner.getBoundingClientRect();\n\t\treturn {\n\t\t\tx: ownerRect.width / 2,\n\t\t\ty: ownerRect.height / 2,\n\t\t};\n\t}\n\n\tfunction onTouch(e) {\n\t\t// let the override the touch behavior\n\t\tbeforeTouch(e);\n\n\t\tif (e.touches.length === 1) {\n\t\t\treturn handleSingleFingerTouch(e);\n\t\t} else if (e.touches.length === 2) {\n\t\t\t// handleTouchMove() will care about pinch zoom.\n\t\t\tpinchZoomLength = getPinchZoomLength(e.touches[0], e.touches[1]);\n\t\t\tmultiTouch = true;\n\t\t\tstartTouchListenerIfNeeded();\n\t\t}\n\t}\n\n\tfunction beforeTouch(e) {\n\t\te.stopPropagation();\n\t\te.preventDefault();\n\t}\n\n\tfunction beforeDoubleClick(e) {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t}\n\n\tfunction handleSingleFingerTouch(e) {\n\t\tconst touch = e.touches[0];\n\t\tconst offset = getOffsetXY(touch);\n\t\tconst point = transformToScreen(offset.x, offset.y);\n\t\tmouseX = point.x;\n\t\tmouseY = point.y;\n\n\t\tsmoothScroll.cancel();\n\t\tstartTouchListenerIfNeeded();\n\t}\n\n\tfunction startTouchListenerIfNeeded() {\n\t\tif (touchInProgress) {\n\t\t\t// no need to do anything, as we already listen to events;\n\t\t\treturn;\n\t\t}\n\n\t\ttouchInProgress = true;\n\t\tdocument.addEventListener('touchmove', handleTouchMove);\n\t\tdocument.addEventListener('touchend', handleTouchEnd);\n\t\tdocument.addEventListener('touchcancel', handleTouchEnd);\n\t}\n\n\tfunction handleTouchMove(e) {\n\t\tif (e.touches.length === 1) {\n\t\t\te.stopPropagation();\n\t\t\tconst touch = e.touches[0];\n\n\t\t\tconst offset = getOffsetXY(touch);\n\t\t\tconst point = transformToScreen(offset.x, offset.y);\n\n\t\t\tconst dx = point.x - mouseX;\n\t\t\tconst dy = point.y - mouseY;\n\n\t\t\tif (dx !== 0 && dy !== 0) {\n\t\t\t\ttriggerPanStart();\n\t\t\t}\n\t\t\tmouseX = point.x;\n\t\t\tmouseY = point.y;\n\t\t\tinternalMoveBy(dx, dy);\n\t\t} else if (e.touches.length === 2) {\n\t\t\t// it's a zoom, let's find direction\n\t\t\tmultiTouch = true;\n\t\t\tconst t1 = e.touches[0];\n\t\t\tconst t2 = e.touches[1];\n\t\t\tconst currentPinchLength = getPinchZoomLength(t1, t2);\n\n\t\t\t// since the zoom speed is always based on distance from 1, we need to apply\n\t\t\t// pinch speed only on that distance from 1:\n\t\t\tconst scaleMultiplier =\n\t\t\t\t1 + (currentPinchLength / pinchZoomLength - 1) * pinchSpeed;\n\n\t\t\tconst firstTouchPoint = getOffsetXY(t1);\n\t\t\tconst secondTouchPoint = getOffsetXY(t2);\n\t\t\tmouseX = (firstTouchPoint.x + secondTouchPoint.x) / 2;\n\t\t\tmouseY = (firstTouchPoint.y + secondTouchPoint.y) / 2;\n\t\t\tif (transformOrigin) {\n\t\t\t\tconst offset = getTransformOriginOffset();\n\t\t\t\tmouseX = offset.x;\n\t\t\t\tmouseY = offset.y;\n\t\t\t}\n\n\t\t\tpublicZoomTo(mouseX, mouseY, scaleMultiplier);\n\n\t\t\tpinchZoomLength = currentPinchLength;\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t}\n\t}\n\n\tfunction handleTouchEnd(e) {\n\t\tif (e.touches.length > 0) {\n\t\t\tconst offset = getOffsetXY(e.touches[0]);\n\t\t\tconst point = transformToScreen(offset.x, offset.y);\n\t\t\tmouseX = point.x;\n\t\t\tmouseY = point.y;\n\t\t}\n\t}\n\n\tfunction getPinchZoomLength(finger1, finger2) {\n\t\tconst dx = finger1.clientX - finger2.clientX;\n\t\tconst dy = finger1.clientY - finger2.clientY;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t}\n\n\tfunction onDoubleClick(e) {\n\t\tbeforeDoubleClick(e);\n\t}\n\n\tfunction onMouseDown(e) {\n\t\tif (touchInProgress) {\n\t\t\t// modern browsers will fire mousedown for touch events too\n\t\t\t// we do not want this: touch is handled separately.\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t}\n\n\t\tif (e.target !== owner && e.target !== domElement) return;\n\n\t\t// for IE, left click == 1\n\t\t// for Firefox, left click == 0\n\t\tconst isLeftButton =\n\t\t\t(e.button === 1 && window.event !== null) || e.button === 0;\n\t\tif (!isLeftButton) return;\n\n\t\tsmoothScroll.cancel();\n\n\t\tconst offset = getOffsetXY(e);\n\t\tconst point = transformToScreen(offset.x, offset.y);\n\t\tmouseX = point.x;\n\t\tmouseY = point.y;\n\n\t\t// We need to listen on document itself, since mouse can go outside of the\n\t\t// window, and we will loose it\n\t\tdocument.addEventListener('mousemove', onMouseMove);\n\t\tdocument.addEventListener('mouseup', onMouseUp);\n\n\t\treturn false;\n\t}\n\n\tfunction onMouseMove(e: MouseEvent) {\n\t\t// no need to worry about mouse events when touch is happening\n\t\tif (touchInProgress) return;\n\n\t\tif (e.ctrlKey) return;\n\n\t\ttriggerPanStart();\n\n\t\tconst offset = getOffsetXY(e);\n\t\tconst point = transformToScreen(offset.x, offset.y);\n\t\tconst dx = point.x - mouseX;\n\t\tconst dy = point.y - mouseY;\n\n\t\tmouseX = point.x;\n\t\tmouseY = point.y;\n\n\t\tinternalMoveBy(dx, dy);\n\t}\n\n\tfunction onMouseUp() {\n\t\ttriggerPanEnd();\n\t\treleaseDocumentMouse();\n\t}\n\n\tfunction releaseDocumentMouse() {\n\t\tdocument.removeEventListener('mousemove', onMouseMove);\n\t\tdocument.removeEventListener('mouseup', onMouseUp);\n\t\tpanstartFired = false;\n\t}\n\n\tfunction releaseTouches() {\n\t\tdocument.removeEventListener('touchmove', handleTouchMove);\n\t\tdocument.removeEventListener('touchend', handleTouchEnd);\n\t\tdocument.removeEventListener('touchcancel', handleTouchEnd);\n\t\tpanstartFired = false;\n\t\tmultiTouch = false;\n\t\ttouchInProgress = false;\n\t}\n\n\tfunction onMouseWheel(e) {\n\t\tsmoothScroll.cancel();\n\n\t\tlet delta = e.deltaY;\n\t\tif (e.deltaMode > 0) delta *= 100;\n\n\t\tconst scaleMultiplier = getScaleMultiplier(delta);\n\n\t\tif (scaleMultiplier !== 1) {\n\t\t\tconst offset = transformOrigin\n\t\t\t\t? getTransformOriginOffset()\n\t\t\t\t: getOffsetXY(e);\n\t\t\tpublicZoomTo(offset.x, offset.y, scaleMultiplier);\n\t\t}\n\t}\n\n\tfunction getOffsetXY(e) {\n\t\t// let offsetX, offsetY;\n\t\t// I tried using e.offsetX, but that gives wrong results for svg, when user clicks on a path.\n\t\tconst ownerRect = owner.getBoundingClientRect();\n\t\tconst offsetX = e.clientX - ownerRect.left;\n\t\tconst offsetY = e.clientY - ownerRect.top;\n\n\t\treturn { x: offsetX, y: offsetY };\n\t}\n\n\tfunction getTransformOriginOffset() {\n\t\tconst ownerRect = owner.getBoundingClientRect();\n\t\treturn {\n\t\t\tx: ownerRect.width * transformOrigin.x,\n\t\t\ty: ownerRect.height * transformOrigin.y,\n\t\t};\n\t}\n\n\tfunction publicZoomTo(clientX, clientY, scaleMultiplier) {\n\t\tsmoothScroll.cancel();\n\t\tcancelZoomAnimation();\n\t\treturn zoomByRatio(clientX, clientY, scaleMultiplier);\n\t}\n\n\tfunction cancelZoomAnimation() {\n\t\tif (zoomToAnimation) {\n\t\t\tzoomToAnimation.cancel();\n\t\t\tzoomToAnimation = null;\n\t\t}\n\t}\n\n\tfunction getScaleMultiplier(delta) {\n\t\tconst sign = Math.sign(delta);\n\t\tconst deltaAdjustedSpeed = Math.min(0.25, Math.abs((speed * delta) / 128));\n\t\treturn 1 - sign * deltaAdjustedSpeed;\n\t}\n\n\tfunction triggerPanStart() {\n\t\tif (!panstartFired) {\n\t\t\tpanstartFired = true;\n\t\t\tsmoothScroll.start();\n\t\t}\n\t}\n\n\tfunction triggerPanEnd() {\n\t\tif (panstartFired) {\n\t\t\t// we should never run smooth scrolling if it was multiTouch (pinch zoom animation):\n\t\t\tif (!multiTouch) smoothScroll.stop();\n\t\t}\n\t}\n}\n\nfunction parseTransformOrigin(options) {\n\tif (!options) return;\n\tif (typeof options === 'object') {\n\t\tif (!isNumber(options.x) || !isNumber(options.y))\n\t\t\tfailTransformOrigin(options);\n\t\treturn options;\n\t}\n\n\tfailTransformOrigin();\n}\n\nfunction failTransformOrigin(options?: unknown) {\n\tthrow new Error(\n\t\t[\n\t\t\t'Cannot parse transform origin.',\n\t\t\t'Some good examples:',\n\t\t\t'  \"center center\" can be achieved with {x: 0.5, y: 0.5}',\n\t\t\t'  \"top center\" can be achieved with {x: 0.5, y: 0}',\n\t\t\t'  \"bottom right\" can be achieved with {x: 1, y: 1}',\n\t\t].join('\\n'),\n\t);\n}\n\nfunction validateBounds(bounds) {\n\tconst boundsType = typeof bounds;\n\tif (boundsType === 'undefined' || boundsType === 'boolean') return; // this is okay\n\t// otherwise need to be more thorough:\n\tconst validBounds =\n\t\tisNumber(bounds.left) &&\n\t\tisNumber(bounds.top) &&\n\t\tisNumber(bounds.bottom) &&\n\t\tisNumber(bounds.right);\n\n\tif (!validBounds)\n\t\tthrow new Error(\n\t\t\t'Bounds object is not valid. It can be: ' +\n\t\t\t'undefined, boolean (true|false) or an object {left, top, right, bottom}',\n\t\t);\n}\n\nfunction isNumber(x) {\n\treturn Number.isFinite(x);\n}\n\n// IE 11 does not support isNaN:\nfunction isNaN(value) {\n\tif (Number.isNaN) {\n\t\treturn Number.isNaN(value);\n\t}\n\n\treturn value !== value;\n}\n","export default function rectanglesIntersect(rectA: Rect, rectB: Rect): boolean {\n  const aLeftOfB = rectA.x2 < rectB.x1;\n  const aRightOfB = rectA.x1 > rectB.x2;\n  const aAboveB = rectA.y1 > rectB.y2;\n  const aBelowB = rectA.y2 < rectB.y1;\n  return !(aLeftOfB || aRightOfB || aAboveB || aBelowB);\n}\n","import type NodeOutput from '../model/NodeOutput';\nimport type NodeInput from '../model/NodeInput';\n\nexport default (output: NodeOutput, input: NodeInput) => {\n  return input.type.includes(output.type) || input.type.includes('*');\n};\n","//@ts-ignore\ntype Pojo = number | string | boolean | Record<string, Pojo> | Pojo[];\n\nexport function diffObjects(alpha: Pojo, beta: Pojo) {\n  if (alpha === undefined && undefined === beta) {\n    return;\n  }\n  const type = Array.isArray(alpha) ? 'array' : typeof alpha;\n\n  if (type === 'string' || type === 'boolean' || type === 'number') {\n    if (alpha === beta) return;\n    return beta;\n  }\n\n  if (Array.isArray(alpha)) {\n    const arrDiff = alpha.map((v, i) => {\n      if (typeof beta === 'object' && i in beta) return diffObjects(v, beta[i]);\n      return beta[i];\n    });\n    if (!arrDiff.length || (arrDiff.length === 1 && !arrDiff[0])) return;\n    return arrDiff;\n  }\n\n  if (!alpha) return beta;\n  const keys = Object.keys(alpha);\n  const diff = {};\n  let changed = false;\n  keys.forEach((k) => {\n    const _diff = diffObjects(alpha[k], beta[k]);\n    if (_diff !== undefined) {\n      changed = true;\n      diff[k] = _diff;\n    }\n  });\n  if (!changed) return;\n  return diff;\n}\n\nexport function diffBoth(alpha: Pojo, beta: Pojo) {\n  return [diffObjects(alpha, beta), diffObjects(beta, alpha)];\n}\n\nexport function mergeObjects(alpha: Pojo, beta: Pojo) {\n  const type = typeof alpha;\n\n  if (type === 'string' || type === 'boolean' || type === 'number') {\n    return beta;\n  }\n\n  if (Array.isArray(alpha)) {\n    return alpha.map((v, i) => {\n      if (beta[i]) return mergeObjects(v, beta[i]);\n      return v;\n    });\n  }\n\n  if (typeof alpha === 'object') {\n    const keys = Object.keys(beta);\n    const diff = { ...alpha };\n    keys.forEach((k) => {\n      diff[k] = mergeObjects(alpha[k], beta[k]);\n    });\n    return diff;\n  }\n}\n","import type NodeOutput from './NodeOutput';\nimport type Node from './Node';\nimport type NodeInput from './NodeInput';\nimport type NodeSystem from './NodeSystem';\nimport NodeConnectionView from '../view/NodeConnectionView';\nimport { canSocketsConnect } from '../helpers';\n\ninterface ConnectionOptions {\n\toutput: NodeOutput;\n\tinput: NodeInput;\n}\n\nexport default class NodeConnection {\n\tsystem!: NodeSystem;\n\n\tinput!: NodeInput;\n\toutput!: NodeOutput;\n\n\ttype!: string;\n\tview!: NodeConnectionView;\n\n\tconstructor(system: NodeSystem, { input, output }: ConnectionOptions) {\n\t\t// TODO: Dont connect if connection already exists\n\n\t\tif (!output || !input) return;\n\n\t\tthis.system = system;\n\n\t\tconst children = input.node.getChildren();\n\n\t\tif (children.includes(output.node)) throw new Error('Circular reference');\n\n\t\tif (!canSocketsConnect(output, input))\n\t\t\tthrow new Error(\n\t\t\t\t\"Can't connect type \" + input.type + ' to ' + output.type,\n\t\t\t);\n\n\t\tthis.output = output;\n\t\tthis.input = input;\n\n\t\tif (system.options.view) {\n\t\t\tthis.view = new NodeConnectionView(this);\n\t\t}\n\n\t\tthis.output.setConnection(this);\n\t\tthis.input.setConnection(this);\n\n\t\tthis.output.node.system.save();\n\t}\n\n\tpublic joinNode(node: Node) {\n\t\tif (!this.isNodeJoinable(node)) return;\n\n\t\tthis.remove();\n\n\t\tthis.output.node.connectTo(node, 0, node.getInputs()[0].key);\n\t\tconst inputs = this.input.node.getInputs();\n\t\tconst indexIn = inputs.indexOf(this.input);\n\t\tconst keyIn = inputs[indexIn].key;\n\t\tnode.connectTo(this.input.node, 0, keyIn);\n\t}\n\n\tpublic isNodeJoinable(node: Node) {\n\t\tconst outputType = this.input.type;\n\t\tconst inputType = this.output.type;\n\n\t\tif (this.input.node === node || this.output.node === node) return false;\n\n\t\tconst nodeInputs = node.getInputs();\n\t\tif (\n\t\t\t!nodeInputs.length ||\n\t\t\t!nodeInputs.find((input) => input.type.includes(inputType))\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst nodeOutputs = node.outputs;\n\t\tif (\n\t\t\t!nodeOutputs.length ||\n\t\t\t!nodeOutputs.find(\n\t\t\t\t(output) =>\n\t\t\t\t\toutputType.includes(output.type) || outputType.includes('*'),\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tremove() {\n\t\tif (this.view) this.view.remove();\n\t\tthis.input.removeConnection();\n\t\tthis.output.removeConnection(this);\n\t}\n\n\tdeserialize() {\n\t\treturn {\n\t\t\tid: this.input.node.attributes.id,\n\t\t\tout: this.indexOut,\n\t\t\tin: this.indexIn,\n\t\t};\n\t}\n\n\tget indexOut(): number {\n\t\treturn this.output.node.outputs.indexOf(this.output);\n\t}\n\n\tget indexIn(): string {\n\t\treturn this.input.key;\n\t}\n}\n","import { EventEmitter, memoize } from '@plantarium/helpers';\nimport type NodeView from '../view/NodeView';\nimport NodeConnection from './NodeConnection';\nimport type NodeOutput from './NodeOutput';\nimport type NodeState from './NodeState';\nimport type NodeSystem from './NodeSystem';\n\nexport default class Node extends EventEmitter {\n  system: NodeSystem;\n\n  id: string;\n  attributes: NodeAttributes;\n\n  outputs: NodeOutput[] = [];\n\n  _state = {};\n  states: {\n    [key: string]: NodeState;\n  } = {};\n\n  inputData: unknown[] = [];\n  computedData: unknown;\n\n  view!: NodeView;\n\n  wrapper!: HTMLDivElement;\n\n  enableUpdates = true;\n  _compute: (state: { [key: string]: unknown }) => unknown;\n\n  refs: { node: Node; keyIn: string[]; indexOut: number }[] = [];\n\n  constructor(system: NodeSystem, props: NodeProps) {\n    super();\n\n    this.system = system;\n\n    const { attributes, state = {} } = props;\n    this._state = state;\n    this.attributes = attributes;\n    this.id = attributes.id;\n\n    this._compute = memoize((_state = this._state) => this.compute(_state));\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  bindView(view: NodeView) {\n    this.view = view;\n\n    this.outputs.forEach((o) => o.bindView());\n    Object.values(this.states).forEach((i) => i.bindView());\n  }\n\n  setAttributes(attrib: Partial<NodeAttributes>) {\n    if (this.enableUpdates) {\n      this.system.history.addAction();\n    }\n\n    this.attributes = { ...this.attributes, ...attrib };\n    this?.view.updateViewPosition();\n    this.save();\n  }\n\n  compute(paramaters: unknown): unknown {\n    return paramaters;\n  }\n\n  getChildren() {\n    const outConnections = this.outputs.map((o) => o.connections).flat();\n\n    const childNodes = outConnections.map((c) => c.input.node);\n\n    return childNodes;\n  }\n\n  getSockets() {\n    return [...this.getInputs(), ...this.outputs];\n  }\n\n  getInputs() {\n    return Object.values(this.states)\n      .map((s) => s.getInput())\n      .filter((s) => !!s);\n  }\n\n  setStateValue(key: string, value: unknown) {\n    this.states[key].setValue(value);\n  }\n\n  getStateValue(key: string): unknown {\n    return this.state[key];\n  }\n\n  update() {\n    if (!this.enableUpdates) return;\n\n    this.computedData = this._compute(this.state);\n\n    this.emit('computedData', this.computedData);\n\n    //Update downstream nodes\n    this.refs.forEach((ref) => {\n      ref.node.enableUpdates = false;\n      ref.keyIn.forEach((keyIn) => {\n        ref.node.setStateValue(keyIn, this.computedData);\n      });\n      ref.node.enableUpdates = true;\n      ref.node.update();\n    });\n\n    this.save();\n  }\n\n  remove() {\n    this.system.removeNode(this);\n    this.destroyEventEmitter();\n  }\n\n  connectTo(\n    node: Node,\n    indexOut = 0,\n    keyIn: string = node.getInputs()[0].key,\n  ): NodeConnection {\n    const output = this.outputs[indexOut];\n\n    const input = node.states[keyIn]?.getInput();\n    if (!input) return;\n\n    const connection = new NodeConnection(this.system, { output, input });\n\n    output?.view?.updatePosition();\n    input?.view?.updatePosition();\n\n    // Check if node already has a connection to this node\n\n    const existingRef = this.refs.find(\n      (ref) => ref.node.id === node.id && ref.indexOut === indexOut,\n    );\n\n    if (existingRef) {\n      existingRef.keyIn = [...existingRef.keyIn, keyIn];\n    } else {\n      this.refs.push({ node, keyIn: [keyIn], indexOut });\n    }\n\n    this.update();\n\n    return connection;\n  }\n\n  disconnectFrom(node: Node, keyIn: string, indexOut: number) {\n    //TODO: theres something missing here\n    this.refs = this.refs.filter((ref) => {\n      if (ref.indexOut !== indexOut) return false;\n      ref.keyIn.splice(ref.keyIn.indexOf(keyIn), 1);\n      if (ref.keyIn.length === 0) return false;\n      return true;\n    });\n\n    this.update();\n  }\n\n  deserialize() {\n    const attributes = Object.assign({}, this.attributes);\n\n    attributes.refs = this.outputs\n      .map((o) => o.connections)\n      .flat()\n      .map((c) => c.deserialize());\n\n    const state = {};\n\n    Object.values(this.states).forEach((s) => {\n      state[s.key] = s.getValue();\n    });\n\n    return Object.assign(\n      {},\n      {\n        attributes,\n        state,\n      },\n    );\n  }\n\n  save() {\n    this.system.save();\n  }\n}\n","export default {\n  title: 'Boolean',\n  type: 'boolean',\n  outputs: ['boolean'],\n  parameters: {\n    value: {\n      type: 'boolean',\n      defaultValue: false,\n    },\n  },\n  compute({ value = false }) {\n    return value;\n  },\n};\n","const node: NodeTypeData = {\n  title: 'Math',\n  type: 'math',\n  outputs: ['number', 'number'],\n  parameters: {\n    mode: {\n      type: 'whatever',\n      internal: true,\n      inputType: 'selection',\n      label: false,\n      defaultValue: 'add',\n      values: ['add', 'multiply', 'subtract'],\n    },\n    a: {\n      type: 'number',\n      defaultValue: 0,\n      label: false,\n    },\n    b: {\n      type: 'number',\n      defaultValue: 0,\n      label: false,\n    },\n  },\n  compute({ mode, a, b }: { a: number; b: number; mode: string }) {\n    switch (mode) {\n      case 'multiply':\n        return a * b;\n      case 'subtract':\n        return a - b;\n      default:\n        return a + b;\n    }\n  },\n};\n\nexport default node;\n","export default {\n  title: 'Number',\n  type: 'number',\n  outputs: ['number'],\n  parameters: {\n    value: {\n      type: 'number',\n      internal: true,\n      label: false,\n      defaultValue: 0,\n    },\n  },\n  compute({ value = 0 }) {\n    return value;\n  },\n};\n","import { stateToElement } from '@plantarium/ui';\nimport type { SvelteComponent } from '@plantarium/ui/node_modules/svelte/types/runtime';\nimport type NodeState from '../model/NodeState';\nimport './NodeStateView.scss';\n\nexport default class NodeStateView {\n  wrapper = document.createElement('div');\n  input = document.createElement('div');\n  element: SvelteComponent;\n  private isPaused = false;\n\n  constructor(private nodeState: NodeState) {\n    this.wrapper.classList.add('node-state-single-wrapper');\n    this.input.classList.add('node-state-input');\n\n    const template = nodeState.template;\n\n    const label = template.label || nodeState.key;\n    if (typeof label === 'string') {\n      const labelEl = document.createElement('p');\n      labelEl.className = 'state-label';\n      labelEl.innerHTML = label;\n      this.wrapper.appendChild(labelEl);\n    }\n\n    if (template?.label === false) {\n      this.wrapper.classList.add('hide-label');\n    }\n\n    if (!template.external) {\n      this.element = stateToElement({\n        target: this.input,\n        template,\n        value: nodeState.getValue(),\n      });\n\n      if (this.element) {\n        this.element.$on('change', ({ detail }) => {\n          if (this.isPaused) return;\n          this.isPaused = true;\n          if (typeof detail !== 'undefined' && !Number.isNaN(detail)) {\n            this.nodeState.setValue(detail);\n          }\n          this.isPaused = false;\n        });\n      }\n    }\n\n    nodeState.node.view.stateWrapper.appendChild(this.wrapper);\n    this.wrapper.appendChild(this.input);\n  }\n\n  private rect: DOMRect;\n\n  updateValue() {\n    if (this.isPaused) return;\n    this.isPaused = true;\n    setTimeout(() => {\n      if (this.element) {\n        this.element.value = this.nodeState.getValue();\n      }\n    }, 50);\n    this.isPaused = false;\n  }\n\n  updatePosition() {\n    this.rect = this.wrapper.getBoundingClientRect();\n    this.nodeState.getInput()?.view?.updatePosition();\n  }\n\n  get y() {\n    return this.rect.y - this.nodeState.node.view.y;\n  }\n\n  get height() {\n    return this.rect.height;\n  }\n\n  setActive(isActive: boolean) {\n    this.wrapper.classList[isActive ? 'remove' : 'add']('disabled');\n  }\n}\n","import type Node from '../model/Node';\nimport type NodeInput from '../model/NodeInput';\nimport type NodeConnectionView from './NodeConnectionView';\nimport './NodeInputView.scss';\n\nexport default class NodeInputView {\n  node: Node;\n  input: NodeInput;\n  wrapper: HTMLDivElement;\n  connection!: NodeConnectionView;\n\n  constructor(input: NodeInput) {\n    if (!input || !input.node) throw new Error('Somethings missing');\n\n    this.input = input;\n    this.node = input.node;\n\n    this.wrapper = document.createElement('div');\n    this.wrapper.classList.add('node-input-wrapper');\n    input.type.forEach((t) => {\n      this.wrapper.classList.add(`socket-type-${t === '*' ? 'all' : t}`);\n    });\n\n    input.state.view.wrapper.appendChild(this.wrapper);\n\n    this.wrapper.addEventListener(\n      'mousedown',\n      (ev) => {\n        ev.stopPropagation();\n        ev.preventDefault();\n        const connection = this.input.connection;\n        if (connection) {\n          connection.remove();\n          this.node.system.view.createFloatingConnection(connection.output);\n        } else {\n          this.node.system.view.createFloatingConnection(this.input);\n        }\n      },\n      false,\n    );\n\n    this.node.system.view.colorStore.on(input.type[0], (color) => {\n      const col = window\n        .getComputedStyle(this.wrapper, null)\n        .getPropertyValue('background-color');\n      this.wrapper.style.backgroundColor =\n        col !== 'rgba(0, 0, 0, 0)' ? col : color;\n    });\n  }\n\n  rect: DOMRect;\n  updatePosition() {\n    this.rect = this.wrapper.getBoundingClientRect();\n\n    this?.connection?.setPosition({ x2: this.x, y2: this.y });\n  }\n\n  remove() {\n    this.wrapper.remove();\n    if (this.connection) this.connection.remove();\n  }\n\n  set state(v: string) {\n    this.wrapper.classList.forEach((c) => {\n      if (c.includes('socket-state-')) this.wrapper.classList.remove(c);\n    });\n    if (v && v.length) this.wrapper.classList.add('socket-state-' + v);\n  }\n\n  get x() {\n    return this.node.view.x - 3;\n  }\n\n  get y() {\n    const system = this.node.system.view;\n    const y =\n      (this.rect.y + this.rect.height / 2 - system.y - system.top) / system.s -\n      system.height / 2;\n    return y;\n  }\n}\n","import NodeInputView from '../view/NodeInputView';\nimport type NodeConnection from './NodeConnection';\nimport type Node from './Node';\nimport type NodeState from './NodeState';\n\nexport default class NodeInput {\n  node: Node;\n  view: NodeInputView;\n  connection!: NodeConnection;\n  type: string[];\n\n  constructor(\n    public state: NodeState,\n    type: string[] | string,\n    public key: string,\n  ) {\n    this.node = state.node;\n    this.type = Array.isArray(type) ? type : [type];\n  }\n\n  bindView() {\n    this.view = new NodeInputView(this);\n  }\n\n  removeConnection() {\n    const conn = this.connection;\n    delete this.connection;\n    conn && conn.remove();\n    this.node.setStateValue(this.key, undefined);\n    this.state.setIsExternal(false);\n  }\n\n  setConnection(conn: NodeConnection) {\n    if (this.connection) {\n      this.connection.remove();\n    }\n    this.connection = conn;\n    if (this.view) this.view.connection = conn.view;\n    this.state.setIsExternal(true);\n  }\n\n  remove() {\n    if (this.view) this.view.remove();\n    this.removeConnection();\n  }\n}\n","import { EventEmitter } from '@plantarium/helpers';\nimport NodeStateView from '../view/NodeStateView';\nimport type Node from './Node';\nimport NodeInput from './NodeInput';\n\nexport default class NodeState extends EventEmitter {\n  isExternal = false;\n  private input: NodeInput;\n\n  view: NodeStateView;\n\n  private value: unknown;\n\n  constructor(\n    public node: Node,\n    public key: string,\n    public template: ValueTemplate,\n  ) {\n    super();\n\n    this.value = node.state[key] ?? template.defaultValue ?? template.value;\n    this.node._state[key] = this.value;\n\n    if (!this.template.internal) {\n      this.input = new NodeInput(this, template.type, key);\n    }\n  }\n\n  setIsExternal(isExternal = false) {\n    this.isExternal = isExternal;\n    this?.view?.setActive(!isExternal);\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value: unknown) {\n    if (!this.isExternal) {\n      if (this.node.enableUpdates) {\n        this.node.system.history.addAction();\n      }\n      this.value = value;\n    }\n    this.node._state[this.key] = value;\n    if (this.node.enableUpdates) {\n      this?.view.updateValue();\n      this.node.update();\n    }\n  }\n\n  remove() {\n    //\n  }\n\n  getInput() {\n    return this.input;\n  }\n\n  bindView() {\n    this.view = new NodeStateView(this);\n    this.input && this.input.bindView();\n  }\n}\n","import type Node from '../model/Node';\nimport type System from '../model/NodeSystem';\nimport type NodeConnectionView from './NodeConnectionView';\nimport type InputView from './NodeInputView';\nimport type OutputView from './NodeOutputView';\nimport './NodeView.scss';\n\nexport default class NodeView {\n  node: Node;\n  wrapper: HTMLDivElement;\n  outputWrapper: HTMLDivElement;\n  stateWrapper: HTMLDivElement;\n\n  inputs: InputView[] = [];\n  outputs: OutputView[] = [];\n\n  active = false;\n  x = 0;\n  y = 0;\n\n  downX = 0;\n  downY = 0;\n\n  mDownX = 0;\n  mDownY = 0;\n\n  height = 50;\n  width = 91;\n  _state: string | undefined;\n  system: System;\n\n  hoveredConnection: NodeConnectionView;\n\n  title!: HTMLElement;\n\n  _unsubscribeMouseMove!: () => void;\n  _unsubscribeMouseUp!: () => void;\n\n  constructor(node: Node) {\n    this.node = node;\n\n    this.system = node.system;\n\n    this.wrapper = document.createElement('div');\n    this.wrapper.style.minHeight = this.height + 'px';\n    this.wrapper.style.minWidth = this.width + 'px';\n    this.wrapper.classList.add(\n      'node-wrapper',\n      'node-type-' + node.attributes.type.toLowerCase(),\n    );\n    this.wrapper.setAttribute(\n      'id',\n      'node-view-' + this.system.id + '-' + this.node.id,\n    );\n\n    this.outputWrapper = document.createElement('div');\n    this.outputWrapper.classList.add('node-outputs-wrapper');\n    this.wrapper.append(this.outputWrapper);\n\n    const title = document.createElement('p');\n    title.innerHTML = node.attributes.name || node.attributes.type;\n    title.classList.add('node-title');\n    this.wrapper.appendChild(title);\n\n    this.stateWrapper = document.createElement('div');\n    this.stateWrapper.classList.add('node-state-wrapper');\n    this.wrapper.append(this.stateWrapper);\n\n    node.system.view.nodeContainer.append(this.wrapper);\n\n    const { pos: { x = 0, y = 0 } = {} } = node.attributes;\n    this.x = x;\n    this.y = y;\n\n    this.bindEventListeners();\n\n    this.wrapper.style.left = x + 'px';\n    this.wrapper.style.top = y + 'px';\n\n    setTimeout(() => {\n      const { width, height } = this.wrapper.getBoundingClientRect();\n      this.width = width / this.system.view.s;\n      this.height = height / this.system.view.s;\n      this.updateViewPosition(x, y);\n    }, 10);\n  }\n\n  bindEventListeners() {\n    this.wrapper.addEventListener('mousedown', (ev) =>\n      this.handleMouseDown(ev),\n    );\n    this._unsubscribeMouseMove = this.system.view.on(\n      'mousemove',\n      (ev: CustomMouseEvent) => this.handleMouseMove(ev),\n    );\n    this._unsubscribeMouseUp = this.system.view.on('mouseup', () =>\n      this.handleMouseUp(),\n    );\n  }\n\n  removeEventListeners() {\n    this._unsubscribeMouseMove();\n    this._unsubscribeMouseUp();\n    this.wrapper.addEventListener('mousedown', (ev) =>\n      this.handleMouseDown(ev),\n    );\n  }\n\n  set state(s: string | undefined) {\n    this.wrapper.classList.remove(\n      'node-active',\n      'node-selected',\n      'node-dragging',\n    );\n    this.wrapper.classList.add('node-' + s);\n    this._state = s;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  handleMouseDown(ev: MouseEvent) {\n    if (this.system.view.keyMap.space || ev.button === 2) return;\n    if (ev.target !== ev.currentTarget) return;\n    ev.stopImmediatePropagation();\n    ev.stopPropagation();\n\n    this.node.system.view.setActive(this.node, ev);\n\n    const { rmx: x, rmy: y } = this.system.view;\n\n    this.mDownX = x;\n    this.mDownY = y;\n\n    this.downX = this.node.attributes?.pos?.x || 0;\n    this.downY = this.node.attributes?.pos?.y || 0;\n\n    this.active = true;\n\n    // Set mouse down for all selected nodes, this makes it possible to move multiple nodes at the same time\n    if (this.system.view.selectedNodes.length) {\n      this.system.view.selectedNodes.forEach((node) => {\n        node.view.active = true;\n        node.view.mDownX = x;\n        node.view.mDownY = y;\n\n        node.view.downX = node.view.x;\n        node.view.downY = node.view.y;\n      });\n    }\n  }\n\n  handleMouseUp() {\n    this.active = false;\n\n    if (this.hoveredConnection) {\n      this.hoveredConnection.connection.joinNode(this.node);\n      delete this.hoveredConnection;\n    }\n  }\n\n  handleMouseMove({ mx: _x, my: _y, keys }) {\n    if (this.active) {\n      this.state = 'dragging';\n      const precision = keys.ctrlKey ? 0.02 : 1;\n\n      let vx = this.mDownX - _x;\n      let vy = this.mDownY - _y;\n\n      if (keys.shiftKey) {\n        if (Math.abs(vx) > Math.abs(vy)) {\n          vy = 0;\n        } else {\n          vx = 0;\n        }\n      }\n\n      const x =\n        Math.round((this.downX - vx / this.system.view.s) * precision) /\n        precision;\n      const y =\n        Math.round((this.downY - vy / this.system.view.s) * precision) /\n        precision;\n\n      this.setPosition(x, y);\n    }\n  }\n\n  updateViewPosition(\n    x = this.node.attributes?.pos?.x ?? this.x,\n    y = this.node.attributes?.pos?.y ?? this.y,\n  ) {\n    this.wrapper.style.left = x + 'px';\n    this.wrapper.style.top = y + 'px';\n    Object.values(this.node.states).forEach((s) => s?.view?.updatePosition());\n    this.node.outputs.forEach((o) => o.view.updatePosition());\n  }\n\n  setPosition(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n\n    this.node.setAttributes({ pos: { x, y } });\n\n    this.updateViewPosition();\n  }\n\n  remove() {\n    this.removeEventListeners();\n    this.wrapper.remove();\n  }\n}\n","import Node from '../model/Node';\n\nimport NodeState from '../model/NodeState';\nimport type NodeSystem from '../model/NodeSystem';\n\nimport NodeView from '../view/NodeView';\n\nclass DebugNode extends Node {\n  constructor(system: NodeSystem, props: NodeProps) {\n    super(system, props);\n\n    this.states = {\n      input: new NodeState(this, 'input', { type: '*' }),\n    };\n\n    this.outputs = [];\n  }\n\n  compute({ input }) {\n    return input;\n  }\n}\n\nclass DebugView extends NodeView {\n  constructor(node: Node) {\n    super(node);\n\n    const d = document.createElement('div');\n\n    node.on('computedData', (data: unknown) => {\n      d.innerHTML = '';\n      const p = document.createElement('p');\n      p.innerHTML = JSON.stringify(data, null, ' ');\n      d.append(p);\n    });\n\n    this.wrapper.appendChild(d);\n  }\n}\n\nexport default {\n  title: 'Debug',\n  meta: {\n    description: 'Outputs any inputs for debug purposes',\n  },\n  node: DebugNode,\n  view: DebugView,\n};\n","import Node from '../model/Node';\nimport NodeState from '../model/NodeState';\nimport type NodeSystem from '../model/NodeSystem';\nimport NodeView from '../view/NodeView';\n\nclass OutputNode extends Node {\n  constructor(system: NodeSystem, props: NodeProps) {\n    super(system, props);\n\n    this.states = {\n      input: new NodeState(this, 'input', {\n        type: '*',\n        external: true,\n        label: false,\n      }),\n    };\n    this.outputs = [];\n  }\n\n  compute({ input }) {\n    return input;\n  }\n}\n\nclass OutputView extends NodeView {\n  constructor(node: Node) {\n    super(node);\n\n    const d = document.createElement('p');\n\n    d.style.margin = '0px';\n    d.style.padding = '4px';\n    d.style.color = 'white';\n    d.style.fontWeight = 'bold';\n\n    node.on('computedData', (data) => {\n      d.innerHTML = JSON.stringify(data, null, 2);\n    });\n\n    this.wrapper.appendChild(d);\n  }\n}\n\nexport default {\n  title: 'Output',\n  meta: {\n    description: 'Outputs the final value',\n  },\n  node: OutputNode,\n  view: OutputView,\n};\n","import BooleanNode from './Boolean';\nimport MathNode from './Math';\nimport NumberNode from './Number';\nimport DebugNode from './Debug';\nimport OutputNode from './Output';\nimport type NodeType from '../model/NodeType';\n\nconst types: { [name: string]: NodeType | NodeTypeData } = {\n  BooleanNode,\n  MathNode,\n  NumberNode,\n  DebugNode,\n  OutputNode,\n};\n\nexport default types;\n","/* eslint-disable no-console */\nimport { logger } from '@plantarium/helpers';\nimport type { NodeSystem } from '..';\n\nlet longestModuleName = 0;\nclass DummyClass {\n  system: NodeSystem;\n}\n\nexport default class Logger {\n  module: unknown;\n  name: string;\n  level: number;\n  length: number;\n  isGrouped = false;\n  output: ReturnType<typeof logger> = logger('logger');\n  constructor(\n    module: DummyClass | NodeSystem | object,\n    logLevel: number = 'system' in module ? module.system.log.level : 2,\n  ) {\n    this.module = module;\n    this.name = module.constructor.name;\n    this.length = this.name.length;\n    longestModuleName = Math.max(longestModuleName, this.length);\n    this.level = logLevel;\n    this.output = logger(this.getModuleName());\n  }\n\n  private getModuleName() {\n    return this.isGrouped ? '' : `${this.name.padEnd(longestModuleName, ' ')}`;\n  }\n\n  private handle(\n    func: (...args: unknown[]) => void,\n    message: unknown,\n    args?: unknown[],\n  ) {\n    if (args && args.length) {\n      // tslint:disable-next-line\n      console.groupCollapsed(`${this.getModuleName()} ${message}`);\n      func(...args);\n      // tslint:disable-next-line\n      console.groupEnd();\n    } else {\n      func(`${this.getModuleName()} ${message}`);\n    }\n  }\n\n  // level: 3\n  info(message: unknown, ...args: unknown[]): void {\n    if (this.level >= 3) {\n      this.output(message, ...args);\n    }\n  }\n  // level: 2\n  log(message: string | unknown, ...args: unknown[]): void {\n    if (this.level >= 2) {\n      this.output(message, ...args);\n    }\n  }\n  // level: 1\n  warn(message: string | unknown, ...args: unknown[]): void {\n    if (this.level >= 1) {\n      this.output.warn(message, ...args);\n    }\n  }\n  // level: 0\n  error(message: Error, ...args: unknown[]) {\n    if (this.level >= 0) {\n      this.output.error(message);\n      this.output(...args);\n    }\n  }\n\n  group(message: string) {\n    this.output.group(message);\n    this.isGrouped = true;\n  }\n\n  groupEnd() {\n    // tslint:disable-next-line\n    console.groupEnd();\n    this.isGrouped = false;\n  }\n}\n","import './AddMenu.scss';\nimport type NodeSystemView from './NodeSystemView';\nimport NodeInput from '../model/NodeInput';\nimport type NodeOutput from '../model/NodeOutput';\nimport type NodeType from '../model/NodeType';\nimport type NodeSystem from '../model/NodeSystem';\nimport Logger from '../model/Logger';\n\ninterface ContextOptions {\n  x: number;\n  y: number;\n  socket?: NodeInput | NodeOutput;\n}\n\nclass SearchContainer {\n  menu: RightClickMenu;\n  type: NodeType;\n  children: SearchContainer[] = [];\n\n  wrapper: HTMLDivElement;\n\n  searchString: string;\n\n  constructor(\n    menu: RightClickMenu,\n    type: NodeType,\n    containers?: SearchContainer[],\n  ) {\n    this.menu = menu;\n    this.type = type;\n    if (containers) this.children.push(...containers);\n\n    this.wrapper = document.createElement('div');\n    this.wrapper.classList.add('search-container');\n\n    const title = document.createElement('p');\n    title.innerHTML = this.type.title;\n    this.wrapper.appendChild(title);\n\n    const s = [type.title];\n    if (this.type.meta) {\n      if (this.type.meta.description)\n        s.push(this.type.meta.description.split(' ').join(':'));\n      if (this.type.meta.tags) s.push(...this.type.meta.tags);\n    }\n\n    this.searchString = s.join(':').toLowerCase();\n    this.menu.wrapper.appendChild(this.wrapper);\n  }\n\n  show() {\n    this.wrapper.style.display = '';\n  }\n\n  hide() {\n    this.wrapper.style.display = 'none';\n  }\n\n  blur() {\n    this.wrapper.classList.remove('focused');\n  }\n\n  focus() {\n    if (this.menu.activeContainer) this.menu.activeContainer.blur();\n    this.menu.activeContainer = this;\n    this.wrapper.classList.add('focused');\n  }\n\n  showIfSearch(search: string) {\n    if (this.searchString.includes(search.toLowerCase())) {\n      this.show();\n      return true;\n    } else {\n      this.hide();\n      return false;\n    }\n  }\n\n  destroy() {\n    this.wrapper.remove();\n  }\n}\n\nexport default class RightClickMenu {\n  wrapper: HTMLDivElement;\n\n  searchInput: HTMLInputElement;\n\n  view: NodeSystemView;\n  system: NodeSystem;\n\n  x = 0;\n  y = 0;\n\n  visible = false;\n  log: Logger;\n\n  possibleContainers: SearchContainer[] = [];\n  filteredContainers: SearchContainer[] = [];\n  containers: SearchContainer[] = [];\n  activeContainer?: SearchContainer;\n\n  socket: NodeInput | NodeOutput | undefined;\n\n  res!: (data: NodeProps) => void;\n  rej!: () => void;\n\n  constructor(view: NodeSystemView) {\n    this.view = view;\n    this.system = view.system;\n\n    this.log = new Logger(this);\n\n    this.wrapper = document.createElement('div');\n    this.wrapper.classList.add('context-wrapper');\n\n    this.searchInput = document.createElement('input');\n    this.searchInput.type = 'text';\n    this.searchInput.placeholder = 'Search';\n\n    this.wrapper.appendChild(this.searchInput);\n\n    this.view.wrapper.append(this.wrapper);\n\n    this.bindEventListeners();\n\n    this.view.on('keydown', ({ key }) => key === 'Escape' && this.hide());\n  }\n\n  updateTypes(types: NodeType[]) {\n    this.containers.forEach((c) => c.destroy());\n    this.containers.push(\n      ...types.map((type) => {\n        return new SearchContainer(this, type);\n      }),\n    );\n  }\n\n  setActive(num: number) {\n    const { length } = this.filteredContainers;\n\n    if (!length) return;\n\n    const curIndex = this.activeContainer\n      ? this.filteredContainers.indexOf(this.activeContainer)\n      : 0;\n\n    const nextIndex = (((curIndex + num) % length) + length) % length;\n\n    this.filteredContainers[nextIndex].focus();\n    this.log.info(`Set active entry ${nextIndex}`);\n  }\n\n  bindEventListeners() {\n    window.addEventListener('mousedown', (ev) => this.handleWindowClick(ev));\n\n    this.view.system.store.on(\n      'types',\n      (types: NodeType[]) => this.updateTypes(types),\n      20,\n    );\n\n    this.view.on('keydown', ({ key }) => {\n      switch (key) {\n        case 'escape':\n          this.reject();\n          break;\n        case 'arrowdown':\n          this.setActive(1);\n          break;\n        case 'arrowup':\n          this.setActive(-1);\n          break;\n      }\n    });\n\n    this.searchInput.addEventListener('input', () => {\n      const { value = '' } = this.searchInput;\n      this.search(value);\n    });\n    this.searchInput.addEventListener('keydown', ({ keyCode }) => {\n      if (keyCode === 13 && this.activeContainer) {\n        this.resolve();\n      }\n    });\n  }\n\n  handleWindowClick(ev: MouseEvent) {\n    const path = ev.composedPath();\n    if (this.visible && !path.includes(this.wrapper)) {\n      this.reject();\n    }\n  }\n\n  search(s?: string) {\n    if (s && s.length) {\n      const found = this.possibleContainers.filter((c) => c.showIfSearch(s));\n      if (found.length === 0) {\n        this.filteredContainers = [...this.possibleContainers];\n        this.filteredContainers.forEach((c) => c.show());\n      } else {\n        this.filteredContainers = [...found];\n        found[0].focus();\n      }\n      this.log.info(`Found ${found.length} entries for search:${s}`);\n    } else {\n      this.filteredContainers = [...this.possibleContainers];\n      this.filteredContainers.forEach((c) => c.show());\n    }\n  }\n\n  reject() {\n    if (this.rej) this.rej();\n    this.hide();\n  }\n\n  resolve() {\n    const type = this.activeContainer?.type;\n\n    const { x: rx, y: ry } = this.view.projectWindowToLocal(this.x, this.y);\n\n    const x = rx - this.view.width / 2;\n    const y = ry - this.view.height / 2;\n\n    if (type) {\n      this.res({\n        attributes: {\n          pos: {\n            x,\n            y,\n          },\n          id: '',\n          name: type.title,\n          type: type.title,\n          refs: [],\n        },\n        state: {\n          value: undefined,\n        },\n      });\n    } else {\n      this.reject();\n    }\n\n    this.hide();\n  }\n\n  hide() {\n    this.visible = false;\n    this.wrapper.classList.remove('context-visible');\n    this.wrapper.blur();\n    this.res = (d: NodeProps) => d;\n    this.reject = () => {\n      return;\n    };\n    this.searchInput.disabled = true;\n  }\n\n  show({ x, y, socket }: ContextOptions): Promise<NodeProps> {\n    this.x = x;\n    this.y = y;\n    this.socket = socket;\n    this.visible = true;\n\n    this.wrapper.style.left = x + 'px';\n    this.wrapper.style.top = y + 'px';\n    setTimeout(() => {\n      this.searchInput.disabled = false;\n      this.wrapper.classList.add('context-visible');\n      this.searchInput.value = '';\n      this.searchInput.focus();\n      this.search();\n    }, 10);\n\n    // Hide all containers\n    this.containers.forEach((c) => c.hide());\n\n    // get all possible containers\n    this.possibleContainers = !socket\n      ? this.containers\n      : this.containers.filter((c) => {\n          if (socket instanceof NodeInput) {\n            const { type } = socket;\n            if (!c.type.outputs || !c.type.outputs.length) return false;\n            if (type.includes('*')) return true;\n            return c.type.outputs?.some((t) => type.includes(t));\n          } else {\n            const { type } = socket;\n            if (!c.type.inputs || !c.type.inputs.length) return false;\n            if (type === '*') return true;\n            return (\n              c.type.inputs?.includes('*') || c.type.inputs?.includes(type)\n            );\n          }\n        });\n\n    // show them\n    this.possibleContainers.forEach((c) => c.show());\n\n    if (this.possibleContainers.length) this.possibleContainers[0].focus();\n\n    this.filteredContainers = [...this.possibleContainers];\n\n    return new Promise((res, rej) => {\n      this.res = res;\n      this.rej = rej;\n    });\n  }\n}\n","import './BoxSelection.scss';\nimport { EventEmitter } from '@plantarium/helpers';\nimport type NodeSystemView from './NodeSystemView';\nimport type Node from '../model/Node';\nimport { rectanglesIntersect } from '../helpers';\n\ninterface HitBox extends Rect {\n  n: Node;\n  state?: string;\n}\n\nexport default class BoxSelectionView extends EventEmitter {\n  view: NodeSystemView;\n  wrapper: HTMLDivElement;\n\n  mDownX = 0;\n  mDownY = 0;\n\n  downX = 0;\n  downY = 0;\n\n  isShiftKey = false;\n\n  resolve!: (nodes: Node[]) => void;\n  constructor(view: NodeSystemView) {\n    super();\n\n    this.view = view;\n\n    this.wrapper = document.createElement('div');\n    this.wrapper.classList.add('box-selection-wrapper');\n    this.view.wrapper.append(this.wrapper);\n\n    this.view.on('mousedown', ({ target, mx, x, my, y, keys }) => {\n      if (keys.space || keys.shiftKey || keys.button === 2 || !keys.ctrlKey)\n        return;\n\n      if (target && !target?.className?.includes('nodesystem')) return;\n\n      this.mDownX = mx;\n      this.mDownY = my;\n\n      this.downX = x;\n      this.downY = y;\n\n      this.wrapper.style.left = mx + 'px';\n      this.wrapper.style.top = my + 'px';\n      this.wrapper.style.width = '0px';\n      this.wrapper.style.height = '0px';\n\n      this.isShiftKey = keys.shift;\n\n      this.show();\n    });\n  }\n\n  show() {\n    this.wrapper.classList.add('box-selection-visible');\n\n    const rects: HitBox[] = this.view.system.nodes.map((n) => {\n      const { width, height } = n.view;\n\n      const { x, y } = n.view;\n\n      const x1 = x + this.view.width / 2;\n      const y1 = y + this.view.height / 2;\n\n      const x2 = x1 + width;\n      const y2 = y1 + height;\n\n      return {\n        n,\n        state: n.view.state,\n        x1,\n        y1,\n        x2,\n        y2,\n      };\n    });\n\n    let nodes: Node[] = [];\n\n    const unsubMove = this.view.on(\n      'mousemove',\n      ({ mx, my, x, y }) => {\n        const { mDownX, mDownY, downX, downY, isShiftKey } = this;\n\n        // UnProjected box for updateing html elemeent\n        const box: Rect = {\n          x1: Math.min(mx, mDownX),\n          x2: Math.max(mx, mDownX),\n          y1: Math.min(my, mDownY),\n          y2: Math.max(my, mDownY),\n        };\n\n        this.wrapper.style.left = box.x1 + 'px';\n        this.wrapper.style.top = box.y1 + 'px';\n\n        this.wrapper.style.width = Math.abs(mDownX - mx) + 'px';\n        this.wrapper.style.height = Math.abs(mDownY - my) + 'px';\n\n        const projectedBox: Rect = {\n          x1: Math.min(x, downX),\n          x2: Math.max(x, downX),\n          y1: Math.min(y, downY),\n          y2: Math.max(y, downY),\n        };\n\n        nodes = rects\n          .filter((r) => {\n            if (rectanglesIntersect(projectedBox, r)) {\n              return true;\n            } else {\n              if (!isShiftKey) {\n                r.state = 'normal';\n                r.n.view.state = 'normal';\n              }\n              return false;\n            }\n          })\n          .map(({ n, state }) => {\n            if (state !== 'active') {\n              state = 'selected';\n              n.view.state = 'selected';\n            }\n\n            return n;\n          });\n      },\n      5,\n    );\n\n    this.view.once('mouseup', () => {\n      unsubMove();\n      this.hide();\n      this.emit('selection', nodes);\n    });\n  }\n\n  private projectBox(b: Rect) {\n    const { x: x1, y: y1 } = this.view.projectWindowToLocal(b.x1, b.y1);\n    const { x: x2, y: y2 } = this.view.projectWindowToLocal(b.x2, b.y2);\n\n    return {\n      x1,\n      y1,\n      x2,\n      y2,\n    };\n  }\n\n  hide() {\n    this.wrapper.classList.remove('box-selection-visible');\n  }\n}\n","import type Node from '../model/Node';\nimport type NodeOutput from '../model/NodeOutput';\nimport type NodeConnectionView from './NodeConnectionView';\nimport './NodeOutputView.scss';\n\nexport default class NodeOutputView {\n  node: Node;\n  output: NodeOutput;\n  wrapper: HTMLDivElement;\n  connections: NodeConnectionView[] = [];\n\n  constructor(output: NodeOutput) {\n    this.output = output;\n    this.node = output.node;\n\n    this.wrapper = document.createElement('div');\n    this.wrapper.classList.add('node-output-wrapper');\n    this.wrapper.classList.add(`socket-type-${output.type}`);\n    // this.node.view.outputWrapper.appendChild(this.wrapper);\n\n    output.node.view.outputWrapper.appendChild(this.wrapper);\n\n    this.wrapper.addEventListener(\n      'mousedown',\n      (ev) => {\n        ev.stopPropagation();\n        ev.preventDefault();\n        this.node.system.view.createFloatingConnection(this.output);\n      },\n      false,\n    );\n\n    this.node.system.view.colorStore.on(output.type, (color) => {\n      const col = window\n        .getComputedStyle(this.wrapper, null)\n        .getPropertyValue('background-color');\n\n      this.wrapper.style.backgroundColor =\n        col !== 'rgba(0, 0, 0, 0)' && col !== 'rgb(0,0,0)' ? col : color;\n    });\n  }\n\n  remove() {\n    this.wrapper.remove();\n    this.connections.forEach((c) => c.remove());\n  }\n\n  set state(v: string) {\n    this.wrapper.classList.forEach((c) => {\n      if (c.includes('socket-state-')) this.wrapper.classList.remove(c);\n    });\n    if (v && v.length) this.wrapper.classList.add('socket-state-' + v);\n  }\n\n  private rect: DOMRect;\n  updatePosition() {\n    this.rect = this.wrapper.getBoundingClientRect();\n\n    this.output.connections.forEach((c) =>\n      c.view.setPosition({ x1: this.x, y1: this.y }),\n    );\n  }\n\n  get x() {\n    return this.node.view.x + this.node.view.width + 3;\n  }\n\n  get y() {\n    const system = this.node.system.view;\n    return (\n      (this.rect.y + this.rect.height / 2 - system.y - system.top) / system.s -\n      system.height / 2\n    );\n  }\n}\n","import NodeOutputView from '../view/NodeOutputView';\nimport type Node from './Node';\nimport type NodeConnection from './NodeConnection';\nimport type NodeInput from './NodeInput';\n\nexport default class NodeOutput {\n  node: Node;\n  view!: NodeOutputView;\n  connections: NodeConnection[] = [];\n  type: string;\n\n  constructor(node: Node, type: string) {\n    this.node = node;\n    this.type = type;\n\n    if (Array.isArray(type))\n      throw new Error('Output can only output one type, not ' + type);\n  }\n\n  bindView() {\n    this.view = new NodeOutputView(this);\n  }\n\n  connectTo(input: NodeInput) {\n    const indexOut = this.node.outputs.indexOf(this);\n    return this.node.connectTo(input.node, indexOut, input.key);\n  }\n\n  removeConnection(conn: NodeConnection) {\n    const index = this.connections.indexOf(conn);\n    this.connections.splice(index, 1);\n    this.node.disconnectFrom(conn.input.node, conn.indexIn, conn.indexOut);\n    if (this.view) this.view.connections.splice(index, 1);\n  }\n\n  setConnection(conn: NodeConnection) {\n    this.connections.push(conn);\n    if (this.view) this.view.connections.push(conn.view);\n  }\n\n  remove() {\n    this.connections.forEach((c) => c.remove());\n  }\n}\n","import { aggregate, EventEmitter } from '@plantarium/helpers';\nimport type NodeConnection from '../model/NodeConnection';\nimport NodeInput from '../model/NodeInput';\nimport NodeOutput from '../model/NodeOutput';\nimport ConnectionView from './ConnectionView';\nimport type NodeSystemView from './NodeSystemView';\n\ninterface FloatingConnectionView extends ConnectionView, EventEmitter {}\n\nclass FloatingConnectionView extends aggregate(ConnectionView, EventEmitter) {\n  socket: NodeInput | NodeOutput;\n  view: NodeSystemView;\n  allSockets: (NodeInput | NodeOutput)[];\n  potentialSockets: (NodeInput | NodeOutput)[];\n  hoveredSocket: (NodeInput | NodeOutput) | undefined;\n  isInput: boolean;\n  isRightClick!: boolean;\n\n  mdx: number;\n  mdy: number;\n\n  dx2: number;\n  dy2: number;\n\n  private _unsubMouseUp: () => void;\n  private _unsubMouseMove: () => void;\n\n  constructor(\n    socket: NodeInput | NodeOutput,\n    point: { x?: number; y?: number } = {},\n  ) {\n    const { system } = socket.node;\n\n    super({}, socket);\n\n    this.view = system.view;\n\n    this.path.style.zIndex = '999';\n\n    const type = Array.isArray(socket.type) ? socket.type[0] : socket.type;\n\n    system.view.colorStore.on(type, (color) => {\n      this.path.style.stroke = color;\n    });\n\n    socket.view.updatePosition();\n\n    const x1 = socket.view.x;\n    const y1 = socket.view.y;\n\n    let x2 = x1;\n    let y2 = y1;\n\n    if (point) {\n      x2 = point.x - system.view.width / 2;\n      y2 = point.y - system.view.height / 2;\n    }\n\n    this.setPosition({\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n    });\n\n    this.dx2 = this.x2;\n    this.dy2 = this.y2;\n\n    this.isInput = socket instanceof NodeInput;\n\n    // Get all potential sockets from NodeSystem\n    this.allSockets =\n      socket instanceof NodeInput\n        ? system.getOutputs(socket.type)\n        : system.getInputs(socket.type);\n\n    this.allSockets.forEach((s) => (s.view.state = 'potential'));\n\n    // Filter out sockets on own node\n    let potentialSockets = this.allSockets.filter(\n      (s) => s.node.attributes.id !== socket.node.attributes.id,\n    );\n    potentialSockets.forEach((s) => (s.view.state = 'middle'));\n\n    // -- Filter out already connected sockets;\n    // get current connection(s) of socket\n    const connections: NodeConnection[] =\n      'connection' in socket ? [socket.connection] : socket.connections;\n    // check if the socket even has any connection(s)\n    if (connections && !!connections.length) {\n      // get all the sockets of the connection\n      const connectedSockets = connections\n        .map((c) => [c.input, c.output])\n        .flat();\n      // filter out all the sockets which are already connected\n      potentialSockets = potentialSockets.filter(\n        (s) => !connectedSockets.includes(s),\n      );\n    }\n\n    this.potentialSockets = potentialSockets;\n\n    // Set all the states on the sockets;\n    this.potentialSockets.forEach((s) => s.view.updatePosition());\n    this.potentialSockets.forEach((s) => (s.view.state = 'highlight'));\n\n    this._unsubMouseUp = this.view.on('mouseup', this.handleMouseUp.bind(this));\n    this._unsubMouseMove = this.view.on(\n      'mousemove',\n      this.handleMouseMove.bind(this),\n    );\n\n    this.mdx = this.view.mx;\n    this.mdy = this.view.my;\n\n    this.socket = socket;\n    // socket.view.updatePosition(this);\n  }\n\n  handleMouseUp(ev: CustomMouseEvent) {\n    const { x, y, keys } = ev;\n    this._unsubMouseUp();\n    this._unsubMouseMove();\n\n    this.allSockets.forEach((s) => (s.view.state = ''));\n\n    let keyIn: string;\n    let indexOut = 0;\n\n    if (\n      this.socket instanceof NodeInput &&\n      this.hoveredSocket instanceof NodeOutput\n    ) {\n      keyIn = this.socket.key;\n      indexOut = this.hoveredSocket.node.outputs.indexOf(this.hoveredSocket);\n    } else if (\n      this.socket instanceof NodeOutput &&\n      this.hoveredSocket instanceof NodeInput\n    ) {\n      keyIn = this.hoveredSocket.key;\n      indexOut = this.socket.node.outputs.indexOf(this.socket);\n    }\n\n    if (this.hoveredSocket) {\n      this.emit('connection', {\n        keyIn,\n        indexOut,\n        inputNode: this.isInput ? this.socket.node : this.hoveredSocket.node,\n        outputNode: this.isInput ? this.hoveredSocket.node : this.socket.node,\n      });\n\n      this.remove();\n    } else if (keys.ctrlKey) {\n      this.view.addMenu\n        .show({ x, y, socket: this.socket })\n        .then((props) => this.view.system.createNode(props))\n        .then((node) => {\n          if (this.socket instanceof NodeOutput) {\n            this.socket.node.connectTo(node, indexOut, keyIn);\n          } else {\n            node.connectTo(this.socket.node, indexOut, keyIn);\n          }\n        })\n        .catch(() => {\n          // Do nothing^\n        })\n        .finally(() => {\n          this.remove();\n        });\n    } else {\n      this.remove();\n    }\n  }\n\n  handleMouseMove(ev: CustomMouseEvent) {\n    // Convert mouse (0 - width) coordinates to 0 to 1 coordinates\n    // and apply the view offset\n    // Convert the relative coordinates to 0 - 100 coordinates and center them\n    const { x: mx, y: my } = ev;\n\n    if (!this.mdx) {\n      this.mdx = mx;\n      this.mdy = my;\n    }\n\n    const x2 = this.dx2 + (mx - this.mdx);\n    const y2 = this.dy2 + (my - this.mdy);\n\n    const distance = 20;\n\n    const p = this.potentialSockets\n      .map((socket) => {\n        const { x, y } = socket.view;\n        return {\n          socket,\n          distance: Math.abs(x2 - x) + Math.abs(y2 - y),\n        };\n      })\n      .filter((s) => {\n        return s.distance < distance;\n      })\n      .sort((a, b) => {\n        return a.distance > b.distance ? -1 : 1;\n      })\n      .map((s) => s.socket);\n\n    if (p.length) {\n      const { x: _x2, y: _y2 } = p[0].view;\n      this.hoveredSocket = p[0];\n      this.setPosition({ x2: _x2, y2: _y2 });\n    } else {\n      this.hoveredSocket = undefined;\n      this.setPosition({ x2, y2 });\n    }\n  }\n\n  remove() {\n    super.remove();\n  }\n}\n\nexport default FloatingConnectionView;\n","import { EventEmitter } from '@plantarium/helpers';\n\nconst COLORS = [\n  { color: '#a52a2a', name: 'brown' },\n  { color: '#008000', name: 'green' },\n  { color: '#4b0082', name: 'indigo' },\n  { color: '#f0e68c', name: 'khaki' },\n  { color: '#add8e6', name: 'lightblue' },\n  { color: '#e0ffff', name: 'lightcyan' },\n  { color: '#90ee90', name: 'lightgreen' },\n  { color: '#d3d3d3', name: 'lightgrey' },\n  { color: '#ffb6c1', name: 'lightpink' },\n  { color: '#ffffe0', name: 'lightyellow' },\n  { color: '#00ff00', name: 'lime' },\n  { color: '#ff00ff', name: 'magenta' },\n  { color: '#800000', name: 'maroon' },\n  { color: '#000080', name: 'navy' },\n  { color: '#808000', name: 'olive' },\n  { color: '#ffa500', name: 'orange' },\n  { color: '#ffc0cb', name: 'pink' },\n  { color: '#800080', name: 'purple' },\n  { color: '#800080', name: 'violet' },\n  { color: '#ff0000', name: 'red' },\n  { color: '#c0c0c0', name: 'silver' },\n  { color: '#ffffff', name: 'white' },\n];\n\nexport default class ColorStore extends EventEmitter {\n  colors: { [type: string]: string } = {\n    boolean: '#f00',\n    number: '#fff',\n    plant: '#65e2a0',\n    vec3: '#6363C7',\n  };\n  index = 0;\n  constructor() {\n    super();\n  }\n\n  private setType(socketType: string) {\n    if (!(socketType in this.colors)) {\n      this.colors[socketType] = COLORS[this.index].color;\n      this.index++;\n    }\n    this.emit(socketType, this.colors[socketType]);\n  }\n\n  on(socketType: string, cb: (color: string) => unknown) {\n    this.setType(socketType);\n    cb(this.colors[socketType]);\n    return super.on(socketType, cb);\n  }\n}\n","import { EventEmitter, throttle } from '@plantarium/helpers';\nimport { createPanZoom } from '../helpers';\nimport type Node from '../model/Node';\nimport type NodeInput from '../model/NodeInput';\nimport type NodeOutput from '../model/NodeOutput';\nimport type NodeSystem from '../model/NodeSystem';\nimport AddMenu from './AddMenu';\nimport BoxSelection from './BoxSelection';\nimport FloatingConnectionView from './FloatingConnectionView';\nimport './NodeSystemView.scss';\nimport ColorStore from './socketColorStore';\n\nexport default class NodeSystemView extends EventEmitter {\n  system: NodeSystem;\n  wrapper: HTMLElement;\n  transformWrapper: HTMLDivElement;\n  svg: SVGElement;\n  addMenu: AddMenu;\n  boxSelection: BoxSelection;\n  colorStore = new ColorStore();\n\n  nodeContainer: HTMLDivElement;\n\n  width = 0;\n  height = 0;\n\n  top = 0;\n  left = 0;\n\n  x = window.innerWidth / 2;\n  y = window.innerHeight / 2;\n  s = 1;\n\n  mx = 0;\n  my = 0;\n  mdx = 0;\n  mdy = 0;\n\n  /**\n   * Unprojected mouse x coordinate\n   */\n  rmx = 0;\n  /**\n   * Unprojected mouse y coordinate\n   */\n  rmy = 0;\n\n  ev: MouseEvent;\n\n  mouseDown = false;\n\n  keyMap: { [key: string]: boolean } = {};\n\n  activeNode: Node | undefined;\n  selectedNodes: Node[] = [];\n  selectedNodesDown: [number, number][] = [];\n\n  clipboard: NodeProps[] = [];\n\n  panzoom: ReturnType<typeof createPanZoom>;\n\n  dpr: number;\n\n  constructor(system: NodeSystem) {\n    super();\n\n    this.system = system;\n\n    this.wrapper = system.options?.wrapper ?? document.createElement('div');\n    this.wrapper.classList.add('nodesystem-wrapper');\n    if (system.options.parent) {\n      system.options.parent.appendChild(this.wrapper);\n    }\n\n    this.transformWrapper = document.createElement('div');\n    this.transformWrapper.classList.add('nodesystem-transform');\n    this.wrapper.appendChild(this.transformWrapper);\n\n    this.nodeContainer = document.createElement('div');\n    this.nodeContainer.classList.add('nodes-container');\n    this.transformWrapper.append(this.nodeContainer);\n\n    this.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    this.svg.setAttribute('viewBox', '0 0 1 1');\n    this.svg.setAttribute('height', '1');\n    this.svg.setAttribute('width', '1');\n    this.svg.setAttribute('preserveAspectRatio', 'none');\n    //The next line works on some browsers but pt all\n    this.svg.style.transform = `scale(${window.devicePixelRatio ?? 1})`;\n    this.transformWrapper.appendChild(this.svg);\n\n    this.addMenu = new AddMenu(this);\n    this.boxSelection = new BoxSelection(this);\n    this.boxSelection.on('selection', (nodes: Node[]) => {\n      this.selectedNodes = nodes;\n    });\n\n    this.dpr = window.devicePixelRatio ?? 1;\n\n    this.bindEventListeners();\n    this.handleResize();\n    setTimeout(() => {\n      this.setTransform({ x: 0, y: 0, s: 1 });\n    }, 1);\n  }\n\n  createFloatingConnection(socket: NodeInput | NodeOutput) {\n    const floatingConnection = new FloatingConnectionView(socket, {\n      x: this.mx,\n      y: this.my,\n    });\n    floatingConnection.once(\n      'connection',\n      ({\n        inputNode,\n        outputNode,\n        keyIn,\n        indexOut,\n      }: {\n        inputNode: Node;\n        outputNode: Node;\n        keyIn: string;\n        indexOut: number;\n      }) => {\n        outputNode.connectTo(inputNode, indexOut, keyIn);\n      },\n    );\n  }\n\n  setActive(n?: Node | undefined, { shiftKey = false, ctrlKey = false } = {}) {\n    if (!n) {\n      if (this.activeNode) {\n        this.activeNode.view.state = 'normal';\n        this.activeNode = undefined;\n      }\n      this.selectedNodes.forEach((s) => (s.view.state = 'normal'));\n      this.selectedNodes = [];\n    } else if (shiftKey && ctrlKey) {\n      if (this.activeNode) {\n        this.activeNode.view.state = 'normal';\n        this.activeNode = undefined;\n      }\n\n      this.activeNode = n;\n      this.activeNode.view.state = 'active';\n\n      if (this.activeNode.outputs.length) {\n        const debugNode = this.system.createNode({\n          state: {},\n          attributes: {\n            type: 'debug',\n            id: '0',\n            name: 'debug',\n            refs: [],\n            pos: {\n              x: this.activeNode.view.x + this.activeNode.view.width + 10,\n              y: this.activeNode.view.y,\n            },\n          },\n        });\n\n        debugNode.enableUpdates = true;\n\n        this.activeNode.connectTo(debugNode, 0, 'input');\n      }\n    } else if (shiftKey) {\n      if (!this.activeNode) {\n        this.activeNode = n;\n        this.activeNode.view.state = 'active';\n      } else {\n        this.selectedNodes.push(this.activeNode);\n        this.activeNode.view.state = 'selected';\n        this.activeNode = n;\n        this.activeNode.view.state = 'active';\n      }\n    } else {\n      if (this.activeNode) {\n        this.selectedNodes.forEach((s) => (s.view.state = 'normal'));\n        this.selectedNodes = [];\n        if (this.activeNode !== n) {\n          this.activeNode.view.state = 'normal';\n          this.activeNode = n;\n          this.activeNode.view.state = 'active';\n        }\n      } else {\n        this.activeNode = n;\n        this.activeNode.view.state = 'active';\n      }\n    }\n  }\n\n  getSelectedNodes() {\n    if (this.activeNode && this.selectedNodes.includes(this.activeNode)) {\n      return this.selectedNodes;\n    } else {\n      if (this.activeNode) {\n        return [...this.selectedNodes, this.activeNode];\n      } else {\n        return [...this.selectedNodes];\n      }\n    }\n  }\n\n  projectLocalToWindow(x: number, y: number) {\n    //Offset coords\n    const offsetX = x + this.x;\n    const offsetY = y + this.y;\n\n    //Scaled coords\n    const scaledX = offsetX * this.s;\n    const scaledY = offsetY * this.s;\n\n    return { x: scaledX, y: scaledY };\n  }\n\n  projectWindowToLocal(x: number, y: number) {\n    //Offset coords\n    const offsetX = x - this.x;\n    const offsetY = y - this.y;\n    //Scaled coords\n    const scaledX = offsetX / this.s;\n    const scaledY = offsetY / this.s;\n\n    return { x: scaledX, y: scaledY };\n  }\n\n  setTransform({ x = this.x, y = this.y, s = this.s } = {}) {\n    this.x = x;\n    this.y = y;\n    this.s = s / this.dpr;\n    this.panzoom.setTransform(x, y, s / this.dpr);\n  }\n\n  bindEventListeners() {\n    window.addEventListener('keydown', (ev) => this.handleKeyDown(ev));\n    window.addEventListener('keyup', (ev) => this.handleKeyUp(ev));\n    this.wrapper.addEventListener('mousemove', (ev) =>\n      this.handleMouseMove(ev),\n    );\n\n    this.wrapper.addEventListener('mousedown', (ev) =>\n      this.handleMouseDown(ev),\n    );\n    this.wrapper.addEventListener('touchdown', (ev: MouseEvent) =>\n      this.handleMouseDown(ev),\n    );\n    this.wrapper.addEventListener('mouseup', (ev) => this.handleMouseUp(ev));\n\n    window.addEventListener(\n      'resize',\n      throttle(() => this.handleResize(), 10),\n    );\n\n    this.panzoom = createPanZoom(this.transformWrapper, {\n      minZoom: 0.2,\n      maxZoom: 5,\n      onTransform: ({ x, y, scale: s }) => {\n        this.x = x;\n        this.y = y;\n        this.s = s;\n        this.wrapper.style.backgroundPosition = `${x}px ${y}px`;\n        this.wrapper.style.backgroundSize =\n          s * this.height * 0.02 + '% ' + s * this.width * 0.02 + '%';\n        this.wrapper.style.backgroundOrigin = `${x}px ${y}px`;\n        window['t'] = { x, y, s };\n        this.system.setMetaData({ transform: { x, y, s } });\n      },\n    });\n  }\n\n  handleResize() {\n    const { width, height, top, left } = this.wrapper.getBoundingClientRect();\n    this.width = width;\n    this.height = height;\n    this.top = top;\n    this.left = left;\n    this.emit('resize', { width, height });\n  }\n\n  handleMouseMove(ev: MouseEvent) {\n    this.ev = ev;\n    const { clientX, clientY, shiftKey, ctrlKey } = ev;\n\n    this.rmx = clientX - this.left;\n    this.rmy = clientY - this.top;\n\n    const { x, y } = this.projectWindowToLocal(this.rmx, this.rmy);\n\n    this.mx = x;\n    this.my = y;\n\n    this.emit('mousemove', {\n      x,\n      y,\n      mx: this.rmx,\n      my: this.rmy,\n      keys: { ...this.keyMap, shiftKey, ctrlKey },\n    });\n  }\n\n  handleMouseDown(ev: MouseEvent) {\n    const { shiftKey, ctrlKey, clientX, clientY, button, target } = ev;\n\n    if (!shiftKey) this.setActive();\n\n    this.mouseDown = true;\n\n    this.rmx = clientX - this.left;\n    this.rmy = clientY - this.top;\n\n    const { x, y } = this.projectWindowToLocal(this.rmx, this.rmy);\n\n    this.mx = x;\n    this.my = y;\n\n    this.selectedNodesDown = this.selectedNodes.map((_n) => [\n      _n.view.x,\n      _n.view.y,\n    ]);\n\n    this.emit('mousedown', {\n      x,\n      y,\n      mx: this.rmx,\n      my: this.rmy,\n      target,\n      keys: {\n        ...this.keyMap,\n        shiftKey,\n        ctrlKey,\n        button,\n      },\n    });\n  }\n\n  handleMouseUp({ clientX, clientY, shiftKey, ctrlKey }: MouseEvent) {\n    this.mouseDown = false;\n    const x = clientX - this.left; //x position within the element.\n    const y = clientY - this.top; //y position within the element.\n\n    this.emit('mouseup', {\n      x,\n      y,\n      keys: {\n        ...this.keyMap,\n        shiftKey,\n        ctrlKey,\n      },\n    });\n  }\n\n  handleKeyUp({ key }: KeyboardEvent) {\n    if (key === ' ') key = 'space';\n    delete this.keyMap[key && key.toLowerCase()];\n    this.emit('keyup', { key, keys: this.keyMap });\n  }\n\n  handleKeyDown({ key, ctrlKey, shiftKey }: KeyboardEvent) {\n    key = key === ' ' ? 'space' : key.toLowerCase();\n    this.keyMap[key && key.toLowerCase()] = true;\n    if (key === 'space') {\n      this.ev && this.handleMouseDown(this.ev);\n    }\n    switch (key) {\n      case 'a':\n        if (shiftKey) {\n          this.addMenu\n            .show({\n              x: this.rmx,\n              y: this.rmy,\n            })\n            .then((props) => {\n              this.system.createNode(props);\n            })\n            .catch();\n        }\n        break;\n      case 'c':\n        if (shiftKey && ctrlKey) {\n          localStorage.clear();\n          window.location.reload();\n        } else if (ctrlKey) {\n          const s = this.selectedNodes.splice(0);\n          if (this.activeNode && !s.includes(this.activeNode))\n            s.push(this.activeNode);\n          this.clipboard = s.map((n) => n.deserialize());\n        } else if (this.selectedNodes.length && this.activeNode) {\n          this.selectedNodes[0].connectTo(this.activeNode);\n        }\n        break;\n      // f\n      case 'f':\n        this.setTransform({ x: 0, y: 0, s: 1 });\n        break;\n      // g\n      case 'g':\n        if (!this.keyMap.g) {\n          this.mdx = this.mx;\n          this.mdy = this.my;\n          this.selectedNodesDown = this.selectedNodes.map((_n) => [\n            _n.view.x,\n            _n.view.y,\n          ]);\n        }\n        break;\n      // x\n      case 'x':\n        if (this.activeNode) {\n          if (ctrlKey) {\n            this.system.spliceNode(this.activeNode);\n          } else {\n            this.system.removeNode(this.activeNode);\n          }\n        }\n        this.selectedNodes.forEach((n) => n.remove());\n        break;\n      case 'y':\n        if (this.system.history) {\n          if (ctrlKey) {\n            this.system.history.redo();\n          }\n        }\n        break;\n      // z\n      case 'z':\n        if (this.system.history) {\n          if (ctrlKey) {\n            this.system.history.undo();\n          }\n        }\n        break;\n      // l\n      case 'l':\n        // TODO: implement new log\n        if (this.activeNode) {\n          // eslint-disable-next-line no-console\n          console.log(this.activeNode);\n          // eslint-disable-next-line no-console\n          console.log(this.activeNode.deserialize());\n        }\n        break;\n      // v\n      case 'v':\n        if (ctrlKey) {\n          const sorted = this.clipboard.sort((a, b) => {\n            const { pos: { x: x1 = 0, y: y1 = 0 } = {} } = a.attributes;\n            const { pos: { x: x2 = 0, y: y2 = 0 } = {} } = b.attributes;\n            return x1 + y1 < x2 + y2 ? -1 : 1;\n          });\n\n          let { pos: { x: offsetX = 0, y: offsetY = 0 } = {} } =\n            sorted[0].attributes;\n\n          const { x: mx, y: my } = this.projectWindowToLocal(this.mx, this.my);\n\n          offsetX -= mx;\n          offsetY -= my;\n\n          this.clipboard\n            .map((prop) => {\n              const { pos: { x = 0, y = 0 } = {} } = prop.attributes;\n\n              prop.attributes.pos = {\n                x: x - offsetX,\n                y: y - offsetY,\n              };\n              return prop;\n            })\n            .forEach((c) => this.system.createNode(c));\n        }\n        break;\n    }\n\n    this.emit('keydown', { key, keys: { ...this.keyMap, ctrlKey } });\n  }\n}\n","import { genId } from '@plantarium/helpers';\n\nimport type NodeSystem from './NodeSystem';\nimport type Node from './Node';\nimport Logger from './Logger';\n\nexport default class NodeFactory {\n  system: NodeSystem;\n\n  log: Logger;\n\n  id = genId();\n\n  constructor(system: NodeSystem) {\n    this.system = system;\n    this.log = new Logger(this);\n    this.log.info(`Initialized`);\n  }\n\n  reset() {\n    this.id.reset();\n    this.log.info('Reset id generator');\n  }\n\n  create(props: NodeProps): Node {\n    const { attributes } = props;\n\n    const name = attributes.type.toLowerCase();\n\n    const type = this.system.store.getByName(name);\n\n    attributes.id = this.id(+attributes.id);\n\n    const node = new type.node(this.system, props);\n\n    if (this.system.options.view && type.view) {\n      const view = new type.view(node);\n      node.bindView(view);\n    }\n\n    if (name === 'output') {\n      this.system.setOutputNode(node);\n    }\n\n    this.log.info(`Created node with type ${attributes.type}`, props);\n\n    return node;\n  }\n}\n","import { diffBoth, mergeObjects } from '../helpers';\nimport Logger from './Logger';\nimport type NodeSystem from './NodeSystem';\n\nexport default class NodeHistory {\n  history: { previous: unknown; next: unknown }[] = [];\n  historyIndex = -1;\n\n  isApplyingChanges = false;\n\n  log: Logger;\n\n  addAction: NodeHistory['_addAction'];\n  prevState: NodeSystemData;\n\n  constructor(private system: NodeSystem) {\n    this.log = new Logger(this);\n    this.log.info(`Instantiated`);\n\n    window['h'] = this;\n\n    this.addAction = (() => {\n      let int;\n      const f = () => {\n        if (!this.system.isLoaded) return;\n        if (this.isApplyingChanges) return;\n\n        if (int) {\n          clearTimeout(int);\n        } else {\n          this.prevState = this.system.serialize();\n        }\n\n        int = setTimeout(() => {\n          this._addAction();\n          int = false;\n        }, 200);\n      };\n\n      return f;\n    })().bind(this);\n  }\n\n  private _addAction() {\n    this.log.info('Register History Step');\n\n    if (this.isApplyingChanges) return;\n\n    // Check if we are in detached head mode and remove all other steps\n    if (this.historyIndex !== this.history.length - 1) {\n      this.history.length = this.historyIndex + 1;\n    }\n\n    const newState = this.system.serialize();\n    const [next, previous] = diffBoth(this.prevState, newState);\n    if (!previous || !next) return;\n    this.history.push({\n      previous,\n      next,\n    });\n\n    if (this.history.length > 60) {\n      this.history = this.history.reverse().slice(0, 60).reverse();\n    }\n\n    this.historyIndex = this.history.length - 1;\n  }\n\n  serialize() {\n    return {\n      steps: this.history,\n      index: this.historyIndex,\n    };\n  }\n\n  deserialize(data: HistoryData) {\n    this.historyIndex = data.index;\n    this.history = data.steps;\n  }\n\n  undo() {\n    if (this.isApplyingChanges) return;\n    this.isApplyingChanges = true;\n    if (this.historyIndex < 0) {\n      this.log.info('Reached beginning of Stack');\n      this.isApplyingChanges = false;\n      return;\n    }\n\n    const { previous } = this.history[this.historyIndex];\n\n    const data = mergeObjects(this.system.serialize(), previous);\n\n    this.system.load(data);\n\n    this.historyIndex--;\n    this.isApplyingChanges = false;\n  }\n\n  redo() {\n    if (this.isApplyingChanges) return;\n    this.isApplyingChanges = true;\n\n    if (this.historyIndex >= this.history.length - 1) {\n      this.log.info('Reached end of Stack');\n      this.isApplyingChanges = false;\n      return;\n    }\n\n    const { next } = this.history[this.historyIndex + 1];\n\n    const data = mergeObjects(this.system.serialize(), next);\n\n    this.system.load(data);\n\n    this.historyIndex++;\n    this.isApplyingChanges = false;\n  }\n}\n","import NodeView from '../view/NodeView';\nimport Node from './Node';\nimport NodeOutput from './NodeOutput';\nimport NodeState from './NodeState';\nimport type NodeSystem from './NodeSystem';\nimport type NodeType from './NodeType';\n\nexport default class NodeParser {\n  system: NodeSystem;\n\n  constructor(system: NodeSystem) {\n    this.system = system;\n  }\n\n  parseSystem(nodeData: NodeSystemData) {\n    const { nodes } = nodeData;\n\n    const nodeStore = new Map<string, Node>();\n\n    // Instantiate all the nodes\n    const nodeInstances = nodes.map((props) => {\n      const n = this.system.factory.create(props);\n      n.enableUpdates = false;\n      nodeStore.set(n.id, n);\n      return n;\n    });\n\n    // Connect all the nodes\n    nodeInstances.forEach((n) => {\n      if (n.attributes.refs)\n        n.attributes.refs.forEach((ref) => {\n          const n2 = nodeStore.get(ref.id);\n          if (!n2)\n            throw new Error(\n              `Failed ref: from ${n.attributes.name || n.attributes.id} to ${\n                ref.id\n              } `,\n            );\n          n.connectTo(n2, ref.out, ref.in);\n        });\n    });\n\n    nodeInstances.forEach((n) => {\n      n.enableUpdates = true;\n      n.update();\n    });\n\n    return nodeInstances;\n  }\n\n  parseType(typeData: NodeTypeData): NodeType {\n    const { compute, meta, outputs, title: name, parameters } = typeData;\n\n    const TempNode = eval(`(outputs, compute) => class ${name} extends Node {\n      constructor(system, props) {\n        super(system, props);\n        if (compute) this.compute = compute;\n\n        if (outputs) {\n          const _outputs = Array.isArray(outputs) ? outputs : [outputs];\n          this.outputs = _outputs.map((s) => new NodeOutput(this, s));\n        }\n\n        Object.entries(parameters).forEach(([key, template]) => {\n          this.states[key] = new NodeState(this, key, template);\n        });\n      }\n    }`)(outputs, compute, NodeState, NodeOutput, Node);\n\n    const inputs = Object.values(parameters)\n      .filter((p) => p.internal !== true)\n      .map((p) => p.type);\n\n    if (this.system.options.view) {\n      const V = class TempView extends NodeView {\n        initView: () => void;\n        constructor(node: Node) {\n          super(node);\n        }\n      };\n\n      return {\n        ...typeData,\n        inputs,\n        title: name,\n        meta,\n        node: TempNode,\n        view: V,\n      };\n    }\n\n    return {\n      inputs,\n      ...typeData,\n      title: name,\n      meta,\n      node: TempNode,\n    };\n  }\n\n  getData() {\n    return {\n      meta: this.system.meta,\n      nodes: this.system.nodes.map((n) => n.deserialize()),\n    };\n  }\n}\n","import { EventEmitter, logger } from '@plantarium/helpers';\nimport type NodeType from './NodeType';\n\nconst log = logger('NodeTypeStore');\n\nexport default class NodeTypeStore extends EventEmitter {\n  types: NodeType[] = [];\n  typeMap: { [name: string]: NodeType } = {};\n\n  constructor() {\n    super();\n  }\n\n  add(type: NodeType) {\n    log('register new type ' + type.title, type);\n\n    this.types = [\n      ...this.types.filter(\n        (t) => t.title.toLowerCase() !== type.title.toLowerCase(),\n      ),\n      type,\n    ];\n\n    this.typeMap[type.title.toLowerCase()] = type;\n    this.emit('types', this.types);\n    this.emit('type', type);\n  }\n\n  getByName(name: string) {\n    if (name in this.typeMap) return this.typeMap[name];\n\n    throw new Error('NodeTypeStore: type ' + name + ' does not exist');\n  }\n}\n","import { debounceDecorator, EventEmitter } from '@plantarium/helpers';\nimport DefaultNodes from '../nodes';\nimport NodeSystemView from '../view/NodeSystemView';\nimport Logger from './Logger';\nimport type Node from './Node';\nimport NodeFactory from './NodeFactory';\nimport NodeHistory from './NodeHistory';\nimport NodeParser from './NodeParser';\nimport type NodeType from './NodeType';\nimport NodeTypeStore from './NodeTypeStore';\n\n/**\n * @ignore\n */\nlet systemID = 0;\n\ninterface NodeSystemOptions {\n  view?: boolean;\n  wrapper?: HTMLElement;\n  defaultNodes?: string[] | boolean;\n  registerNodes?: NodeTypeData[];\n  logLevel?: number;\n  parent?: HTMLElement;\n}\n\nexport default class NodeSystem extends EventEmitter {\n  private parser: NodeParser = new NodeParser(this);\n  meta: NodeSystemMeta = { lastSaved: Date.now() };\n\n  outputNode!: Node;\n  factory: NodeFactory;\n  store: NodeTypeStore;\n  log: Logger;\n  history: NodeHistory;\n\n  isLoaded = false;\n  isPaused = false;\n\n  nodes: Node[] = [];\n  _result: unknown;\n\n  states: NodeSystemData[] = [];\n\n  id: number = systemID++;\n\n  view!: NodeSystemView;\n  options: NodeSystemOptions;\n\n  constructor(options: NodeSystemOptions = {}) {\n    super();\n    const {\n      view = false,\n      wrapper,\n      defaultNodes = false,\n      registerNodes = false,\n      logLevel = 5,\n    } = options;\n    this.options = { view, wrapper };\n\n    try {\n      this.log = new Logger(this, logLevel);\n      this.log.group(`Instantiated id:${this.id}`);\n      this.store = new NodeTypeStore();\n      this.factory = new NodeFactory(this);\n      this.history = new NodeHistory(this);\n\n      if (view) {\n        this.view = new NodeSystemView(this);\n      }\n\n      if (defaultNodes) {\n        const nodesToRegister: (NodeType | NodeTypeData)[] = [];\n\n        if (defaultNodes === true) {\n          nodesToRegister.push(\n            ...Object.entries(DefaultNodes).map((entry) => entry[1]),\n          );\n        } else if (Array.isArray(defaultNodes) && defaultNodes.length) {\n          defaultNodes.forEach((type) => {\n            if (typeof type === 'string' && type in DefaultNodes) {\n              nodesToRegister.push(DefaultNodes[type]);\n            }\n          });\n        }\n\n        nodesToRegister.forEach((nodeType) => this.registerNodeType(nodeType));\n      }\n\n      if (registerNodes && registerNodes.length) {\n        registerNodes.forEach(this.registerNodeType.bind(this));\n      }\n\n      this.log.groupEnd();\n    } catch (error) {\n      this.emit('error', { type: 'init', error });\n    }\n  }\n\n  get result() {\n    return this._result;\n  }\n\n  set result(res) {\n    this._result = res;\n    if (this.isLoaded) this.emit('result', res);\n  }\n\n  setMetaData(data: Partial<NodeSystemMeta>) {\n    this.meta = { ...this.meta, ...data };\n    this.save();\n  }\n\n  load(systemData: NodeSystemData) {\n    try {\n      this.isLoaded = false;\n      this.isPaused = true;\n      this.nodes.forEach((n) => (n.enableUpdates = false));\n      this.nodes.forEach((n) => n.remove());\n      this.factory.reset();\n      const nodes = this.parser.parseSystem(systemData);\n      this.addNodes(nodes);\n      this.meta = systemData.meta || { lastSaved: 0 };\n      this.meta.lastSaved = Date.now();\n      if (this.view) this.view.setTransform(this.meta.transform);\n\n      this.log.info(\n        `Loaded NodeSystemData with ${nodes.length} Nodes`,\n        systemData,\n      );\n\n      if ('history' in systemData) {\n        this.history.deserialize(systemData.history);\n      }\n\n      this.isPaused = false;\n      this.isLoaded = true;\n\n      this.result = this._result;\n\n      return this;\n    } catch (error) {\n      this.emit('error', { type: 'loading', error });\n    }\n  }\n\n  serialize() {\n    return {\n      ...this.parser.getData(),\n      history: this.history.serialize(),\n      meta: this.meta,\n    };\n  }\n\n  @debounceDecorator(1000)\n  save() {\n    if (this.isLoaded) {\n      this.meta.lastSaved = Date.now();\n      this.log.info('save system', this.serialize());\n      this.emit('save', this.serialize());\n    }\n  }\n\n  setOutputNode(node: Node) {\n    if (this.outputNode) {\n      this.outputNode.remove();\n    }\n    this.outputNode = node;\n    node.on('computedData', (data) => (this.result = data));\n  }\n\n  addNodes(nodes: Node[]) {\n    nodes.forEach((n) => this.addNode(n));\n  }\n\n  addNode(node: Node) {\n    this.history.addAction();\n    this.nodes.push(node);\n    this.save();\n  }\n\n  removeNode(node: Node) {\n    this.history.addAction();\n\n    node.enableUpdates = false;\n\n    node.view.remove();\n\n    Object.values(node.states).forEach((i) => i.remove());\n\n    node.outputs.forEach((o) => o.remove());\n    node.getInputs().forEach((i) => i.remove());\n\n    this.nodes = this.nodes.filter((n) => n !== node);\n\n    this.save();\n\n    this.log.info(\n      `Removed Node id:${node.id} type:${node.attributes.type}`,\n      node.deserialize(),\n    );\n  }\n\n  spliceNode(node: Node) {\n    const leftSockets = node.getInputs().map((i) => i?.connection?.output);\n    const rightSockets = node.outputs\n      .map((o) => o.connections)\n      .flat()\n      .map((c) => c.input);\n\n    for (let i = 0; i < leftSockets.length; i++) {\n      const leftSocket = leftSockets[i];\n      const rightSocket = rightSockets[i];\n      if (!rightSocket || !leftSocket) continue;\n      leftSocket.connectTo(rightSocket);\n    }\n\n    return this.removeNode(node);\n  }\n\n  getSockets(type?: string) {\n    const sockets = this.nodes.map((n) => [...n.getSockets()]).flat();\n    if (!type) return sockets;\n    return sockets.filter((s) => s.type === type);\n  }\n\n  getInputs(type?: string) {\n    const inputs = this.nodes.map((n) => n.getInputs()).flat();\n    if (!type || type === '*') return inputs;\n    return inputs.filter((s) => s.type.includes('*') || s.type.includes(type));\n  }\n\n  getOutputs(type?: string[]) {\n    const outputs = this.nodes.map((n) => n.outputs).flat();\n    if (!type || type.includes('*')) return outputs;\n    return outputs.filter((s) => s.type === '*' || type.includes(s.type));\n  }\n\n  createNode(props: NodeProps) {\n    const node = this.factory.create(props);\n    this.addNode(node);\n    this.save();\n    this.log.info(\n      `Created new node id:${props.attributes.id} type:${props.attributes.type}`,\n      props,\n    );\n    return node;\n  }\n\n  getNodes() {\n    return this.nodes;\n  }\n\n  findNodeById(id: string) {\n    return this.nodes.filter((node) => node.id === id)[0];\n  }\n\n  getNodeTypes(): NodeType[] {\n    return this.store.types;\n  }\n\n  registerNodeType(type: NodeType | NodeTypeData) {\n    if ('node' in type) {\n      this.store.add(type);\n    } else {\n      const _type = this.parser.parseType(type);\n      this.store.add(_type);\n    }\n\n    this.log.info(`Registered new nodeType type:${type.title}`, type);\n  }\n}\n","import { debounce } from '@plantarium/helpers';\n\nconst savedState: { [key: string]: unknown } = JSON.parse(\n  localStorage.getItem('pt_local_state') as string,\n);\n\nconst state = { ...savedState };\n\nconst set: (key: string, value: unknown) => void = debounce(\n  (key: string, value: unknown) => {\n    state[key] = value;\n    localStorage.setItem('pt_local_state', JSON.stringify(state));\n  },\n  100,\n  false,\n);\n\nexport default {\n  get<T>(key: string, defaultValue?: T): T {\n    state[key] = state[key] ?? defaultValue;\n    return state[key] as typeof defaultValue;\n  },\n  set,\n};\n","export default (value): value is GeneratorContextNode => {\n  return typeof value === 'object' && 'type' in value;\n};\n","export default (() => {\n  let id = Math.random();\n\n  return () => {\n    id = id > 0 ? id - Math.random() : id + Math.random();\n    return id.toString().split('.')[1];\n  };\n})();\n","import { inputChanged } from '@plantarium/helpers';\nimport Nodes from '@plantarium/nodes';\nconst nodes: { [type: string]: PlantNode } = {};\n\nNodes.forEach((n) => {\n  nodes[n.type] = n;\n  if ('computeSkeleton' in n) {\n    n.computeSkeleton = inputChanged(n.computeSkeleton);\n  }\n  if ('computeGeometry' in n) {\n    n.computeGeometry = inputChanged(n.computeGeometry);\n  }\n  if ('computeValue' in n) {\n    n.computeValue = inputChanged(n.computeValue);\n  }\n});\nexport default nodes;\n","import nodes from './nodes';\n\nexport function executeSkeletonNode(node, ctx: GeneratorContext) {\n  if (node.type in nodes) {\n    if (nodes[node.type].computeSkeleton) {\n      return nodes[node.type].computeSkeleton(node.computedParameters, ctx);\n    }\n  }\n  return node.computedParameters;\n}\n\nexport function executeGeometryNode(node, ctx: GeneratorContext) {\n  if (node.type in nodes && nodes[node.type].computeGeometry) {\n    return nodes[node.type].computeGeometry(\n      node.computedParameters,\n      node.result,\n      ctx,\n    );\n  }\n\n  return node.computedParameters;\n}\n\nexport function executeValueNode(node, ctx: GeneratorContext, alpha?: number) {\n  if (node.type in nodes && nodes[node.type].computeValue) {\n    return nodes[node.type].computeValue(node.computedParameters, ctx, alpha);\n  }\n\n  return node.computedParameters;\n}\n","import {\n  executeGeometryNode,\n  executeSkeletonNode,\n  executeValueNode,\n} from './executeNode';\nimport isNode from './helpers/isNode';\n\nexport const walkSkeletonNode = (node, ctx: GeneratorContext) => {\n  // Compute all the values for the parameters\n  node.computedParameters = {};\n  Object.entries(node.parameters).forEach(([parameterName, param]) => {\n    if (isNode(param)) {\n      node.computedParameters[parameterName] = walkSkeletonNode(param, ctx);\n    } else {\n      node.computedParameters[parameterName] = param;\n    }\n  });\n\n  // Calculate the output of the node\n  node.result = executeSkeletonNode(node, ctx);\n\n  return node;\n};\n\nexport const walkGeometryNode = (node, ctx) => {\n  node.computedParameters = {};\n  Object.entries(node.parameters).forEach(([key, value]) => {\n    if (isNode(value)) {\n      node.computedParameters[key] = walkGeometryNode(value, ctx);\n    } else {\n      node.computedParameters[key] = value;\n    }\n  });\n\n  // We need to merge the result of the previous pass with this one\n  node.result = { ...node.result, ...executeGeometryNode(node, ctx) };\n\n  return node;\n};\n\nexport const walkValueNode = (\n  node: GeneratorContextNode,\n  ctx: GeneratorContext,\n  alpha?: number,\n) => {\n  // Compute all the values for the parameters\n  node.computedParameters = node.computedParameters ?? {};\n  Object.entries(node.parameters).forEach(([parameterName, param]) => {\n    if (isNode(param)) {\n      node.computedParameters[parameterName] = walkValueNode(param, ctx, alpha);\n    } else {\n      node.computedParameters[parameterName] = param;\n    }\n  });\n\n  // Calculate the output of the node\n\n  return executeValueNode(node, ctx, alpha);\n};\n","import { noise } from '@plantarium/geometry';\nimport isNode from './helpers/isNode';\nimport uniqID from './helpers/uniqID';\nimport { walkValueNode } from './walkNode';\n\nlet lastSettings = '';\nlet lastCtx;\nlet currentNoise = 0;\n\nconst createContext = (s: Partial<PlantariumSettings>): GeneratorContext => {\n  let seed = 0;\n  noise.seed = 0;\n  let buildId = uniqID();\n  return {\n    handleParameter(param: ParameterResult | GeneratorContextNode, alpha = 1) {\n      if (typeof param === 'number') return param;\n\n      // Handle if parameter is node\n      if (isNode(param)) {\n        return walkValueNode(param, this, alpha);\n      }\n\n      // If we are here its probably a vector\n\n      return param;\n    },\n    n1d(scale) {\n      return noise.n1d(currentNoise++ * scale);\n    },\n    getSetting(key: string) {\n      return s[key];\n    },\n    get settings() {\n      return s;\n    },\n    get seed() {\n      return seed;\n    },\n    refresh() {\n      currentNoise = 0;\n      if (s?.useRandomSeed) {\n        seed = Math.floor(Math.random() * 100000);\n        noise.seed = seed;\n      }\n      buildId = uniqID();\n      return;\n    },\n  };\n};\n\nexport default (settings: Partial<PlantariumSettings>): GeneratorContext => {\n  const s = JSON.stringify(settings);\n\n  if (s !== lastSettings) {\n    lastSettings = s;\n    lastCtx = createContext(settings);\n  }\n\n  lastCtx.refresh();\n\n  return lastCtx;\n};\n","import {\n  convertInstancedGeometry,\n  join\n} from '@plantarium/geometry';\nimport { logger } from '@plantarium/helpers';\nimport createContext from './createContext';\nimport { walkGeometryNode, walkSkeletonNode } from './walkNode';\n\nconst log = logger('gen.plant');\n\nexport default function plant(\n  rootNode: NodeResult,\n  s: Partial<PlantariumSettings>,\n) {\n  log('-------- ~generator started~ --------');\n\n  const a = performance.now();\n\n  const ctx = createContext(s);\n\n  const skelly = walkSkeletonNode(rootNode, ctx);\n\n  log('final skeleton', skelly.result);\n\n  const final = walkGeometryNode(skelly, ctx);\n\n  log('final geometry', final);\n\n  const { result } = final;\n\n  //result.geometry = calculateNormals(result.geometry);\n\n  if (result.instances) {\n    const instances = result.instances\n      ?.map((i) => convertInstancedGeometry(i))\n      .flat();\n\n    result.geometry = join(result.geometry, ...instances);\n  }\n\n  log('generated in ', Math.floor((performance.now() - a) * 10) / 10, 'ms');\n\n  return result;\n}\n","import { wrap } from 'comlink';\nimport type plant from '../plant';\nimport createWebWorker from './webWorker?worker=external';\n\nexport default () => {\n  const worker = createWebWorker();\n\n  const wrapped = wrap<{\n    plant: (\n      rootNode: NodeResult,\n      s: PlantariumSettings,\n    ) => ReturnType<typeof plant>;\n  }>(worker);\n\n  let isRunning = false;\n\n  async function plantProxy(\n    rootNode: NodeResult,\n    s: Partial<PlantariumSettings>,\n  ) {\n    if (isRunning) return;\n    isRunning = true;\n\n    const result = await wrapped.plant(rootNode, s);\n\n    isRunning = false;\n    return result;\n  }\n\n  return {\n    plant: plantProxy,\n  };\n};\n","import { convertHexToRGB, EventEmitter, throttle } from '@plantarium/helpers';\r\nimport { Camera, Orbit, Renderer as oRenderer, Transform, Vec3 } from 'ogl';\r\n\r\ninterface RendererOptions {\r\n  clearColor: string;\r\n  width: number;\r\n  height: number;\r\n  canvas: HTMLCanvasElement;\r\n  still: boolean;\r\n  alpha: boolean;\r\n  camPos: [number, number, number];\r\n}\r\n\r\nlet a = 0;\r\n\r\nexport default class Renderer extends EventEmitter {\r\n  canvas: HTMLCanvasElement;\r\n\r\n  gl: WebGL2RenderingContext;\r\n\r\n  renderer: oRenderer;\r\n  scene: Transform = new Transform();\r\n  camera: Camera;\r\n  controls: Orbit;\r\n  controlTarget: Vec3;\r\n\r\n  private lastCamPos: Vec3 = new Vec3(0, 0, 0);\r\n\r\n  constructor({\r\n    canvas,\r\n    width,\r\n    height,\r\n    clearColor = 'ffffff',\r\n    alpha = false,\r\n    camPos = [0, 2, 4],\r\n  }: Partial<RendererOptions> = {}) {\r\n    super();\r\n\r\n    this.canvas = canvas;\r\n\r\n    if ((!width || !height) && canvas) {\r\n      const rect = canvas.getBoundingClientRect();\r\n      width = rect.width;\r\n      height = rect.height;\r\n    }\r\n\r\n    this.renderer = new oRenderer({\r\n      canvas,\r\n      width,\r\n      premultipliedAlpha: true,\r\n      height,\r\n      alpha,\r\n      antialias: true,\r\n      dpr: 1,\r\n    });\r\n    this.gl = this.renderer.gl;\r\n    this.gl.clearColor(...convertHexToRGB(clearColor), 0);\r\n\r\n    if (this.renderer.gl.canvas) {\r\n      this.canvas = this.renderer.gl.canvas;\r\n    }\r\n\r\n    // Setup Camera\r\n    this.camera = new Camera(this.gl, { fov: 70, aspect: width / height });\r\n    this.lastCamPos.set(camPos);\r\n    this.camera.position.set(camPos);\r\n    this.camera.lookAt(new Vec3(0, 0, 0));\r\n\r\n    // Setup controls\r\n    if (canvas) {\r\n      this.controls = new Orbit(this.camera, {\r\n        element: canvas,\r\n        target: new Vec3(0, 0.2, 0),\r\n        maxPolarAngle: 1.6,\r\n        minDistance: 0.2,\r\n        maxDistance: 15,\r\n        ease: 0.7,\r\n        rotateSpeed: 0.5,\r\n        inertia: 0.5,\r\n      });\r\n    }\r\n\r\n    this.bindEventlisteners();\r\n    if (canvas) {\r\n      this.render();\r\n    }\r\n  }\r\n\r\n  setControlTarget(vec: Vec3) {\r\n    if (Number.isNaN(vec.x)) return;\r\n    if (!this.controlTarget) {\r\n      this.controls.target = vec;\r\n    }\r\n    this.controlTarget = vec;\r\n  }\r\n\r\n  setClearColor(clearColor: string) {\r\n    this.gl.clearColor(...convertHexToRGB(clearColor), 1);\r\n  }\r\n\r\n  renderScene(scene: Transform) {\r\n    this.renderer.render({ scene, camera: this.camera });\r\n  }\r\n\r\n  render(): void {\r\n    requestAnimationFrame(this.render.bind(this));\r\n\r\n\r\n    if (!this.lastCamPos.equals(this.camera.position)) {\r\n      this.lastCamPos.set(this.camera.position);\r\n      this.emit('camPos', this.camera.position.toArray());\r\n    }\r\n\r\n    if (this.controlTarget) {\r\n      if (this.controlTarget.squaredDistance(this.controls.target) < 0.00005) {\r\n        this.controls.target = this.controlTarget;\r\n      } else {\r\n        this.controls.target.lerp(this.controlTarget, 0.05);\r\n      }\r\n    }\r\n\r\n    window['target'] = this.controls.target;\r\n\r\n    this.controls.update();\r\n\r\n    this.renderer.render({ scene: this.scene, camera: this.camera });\r\n\r\n    this.emit(\"perf\", performance.now()-a)\r\n    a = performance.now();\r\n  }\r\n\r\n  bindEventlisteners() {\r\n    const _throttle = throttle(() => this.handleResize(), 500);\r\n    window.addEventListener('resize', () => {\r\n      this.canvas.classList.add('resizing');\r\n      _throttle();\r\n    });\r\n  }\r\n\r\n  handleResize() {\r\n    let wrapper = this.canvas.parentElement;\r\n    if (!wrapper) wrapper = this.canvas;\r\n    const { width, height } = wrapper.getBoundingClientRect();\r\n    this.renderer.setSize(width, height);\r\n    this.camera.perspective({\r\n      aspect: this.gl.canvas.width / this.gl.canvas.height,\r\n    });\r\n    this.canvas.classList.remove('resizing');\r\n  }\r\n}\r\n","import { Program, Texture } from \"ogl\";\r\nimport BasicShaderFrag from \"./BasicShader.frag\";\r\nimport BasicShaderVert from \"./BasicShader.vert\";\r\nimport GroundShaderFrag from \"./GroundShader.frag\";\r\nimport GroundShaderVert from \"./GroundShader.vert\";\r\nimport InstanceShaderFrag from \"./InstanceShader.frag\";\r\nimport InstanceShaderVert from \"./InstanceShader.vert\";\r\nimport MatCapFrag from \"./MatCap.frag\";\r\nimport MatCapVert from \"./MatCap.vert\";\r\nimport ParticleFrag from \"./ParticleShader.frag\";\r\nimport ParticleVert from \"./ParticleShader.vert\";\r\nimport WireFrameFrag from \"./WireframeShader.frag\";\r\nimport WireFrameVert from \"./WireframeShader.vert\";\r\n\r\nconst GroundShader = {\r\n  fragment: GroundShaderFrag,\r\n  vertex: GroundShaderVert\r\n};\r\n\r\nconst BasicShader = {\r\n  fragment: BasicShaderFrag,\r\n  vertex: BasicShaderVert\r\n};\r\n\r\nconst InstanceShader = {\r\n  fragment: InstanceShaderFrag,\r\n  vertex: InstanceShaderVert\r\n};\r\n\r\nconst WireFrameShader = {\r\n  fragment: WireFrameFrag,\r\n  vertex: WireFrameVert\r\n};\r\nconst ParticleShader = {\r\n  fragment: ParticleFrag,\r\n  vertex: ParticleVert\r\n};\r\n\r\n\r\nexport const MatCapShader = (gl:WebGL2RenderingContext) => {\r\n  const texture = new Texture(gl);\r\n  const img = new Image();\r\n  img.onload = () => (texture.image = img);\r\n  img.src = 'assets/matcap_green.jpg';\r\n  return new Program(gl, {\r\n    vertex: MatCapVert,\r\n    fragment: MatCapFrag,\r\n    uniforms: {\r\n      tMap: { value: texture },\r\n    },\r\n    cullFace: null,\r\n  });\r\n}\r\n\r\nexport { GroundShader, BasicShader, InstanceShader, WireFrameShader, ParticleShader };\r\n\r\n","import { worker } from '@plantarium/generator';\nimport { transferToGeometry } from '@plantarium/geometry';\nimport Nodes from '@plantarium/nodes';\nimport { NodeSystem } from '@plantarium/nodesystem';\nimport Renderer from '@plantarium/renderer';\nimport { Box, Mesh } from 'ogl';\nimport { MatCapShader } from '../components/scene/shaders';\n\nconst webWorker = worker();\nconst renderer = new Renderer({\n  width: 100,\n  height: 100,\n  alpha: true,\n  clearColor: '000',\n});\nconst nodeSystem = new NodeSystem({\n  view: false,\n  defaultNodes: false,\n  registerNodes: Nodes,\n});\n\nconst mesh = new Mesh(renderer.gl, {\n  geometry: new Box(renderer.gl, { width: 0, height: 0, depth: 0 }),\n  program: MatCapShader(renderer.gl),\n});\n\nconst renderCanvas = document.createElement('canvas');\nrenderCanvas.width = renderCanvas.height = 100;\nconst ctx = renderCanvas.getContext('2d');\n\nmesh.setParent(renderer.scene);\n\nexport default async function ({\n  pd,\n  geo,\n}: {\n  pd?: PlantProject;\n  geo?: TransferGeometry;\n}) {\n  nodeSystem.load(pd);\n\n  const nodeResult = nodeSystem.result as NodeResult;\n\n  let _geometry: TransferGeometry;\n\n  if (geo) {\n    _geometry = geo;\n  }\n\n  if (pd && !_geometry) {\n    const result = (await (\n      await webWorker\n    ).plant(nodeResult, {\n      stemResX: 12,\n      stemResY: 12,\n    })) as TransferGeometry;\n\n    _geometry = result.geometry;\n  }\n\n  if (!_geometry) return;\n\n  mesh.geometry = transferToGeometry(renderer.gl, _geometry);\n\n  mesh.geometry.computeBoundingBox();\n\n  // Make the bounding box of the plant fill the viewport of the camera\n  renderer.camera.position.x = mesh.geometry.bounds.center.x;\n  renderer.camera.position.y = mesh.geometry.bounds.center.y;\n  const boundingHeight =\n    (mesh.geometry.bounds.max.y - mesh.geometry.bounds.center.y) * 2;\n  const camDistance =\n    boundingHeight / 2 / Math.tan((Math.PI * renderer.camera.fov) / 360);\n  renderer.camera.position.z = camDistance;\n\n  renderer.camera.lookAt(mesh.geometry.bounds.center);\n\n  renderer.renderScene(renderer.scene);\n\n  ctx.clearRect(0, 0, 100, 100);\n  for (let i = 0; i < 1; i++) {\n    ctx.drawImage(renderCanvas, 0, 0);\n    ctx.drawImage(renderer.canvas, 0, 0);\n    ctx.filter = 'blur(7px) opacity(0.6) brightness(0.95)';\n  }\n  ctx.filter = 'blur(0px) drop-shadow(0px 0px 10px rgba(0, 0, 0, 0.8))';\n  ctx.drawImage(renderer.canvas, 0, 0);\n\n  return renderCanvas.toDataURL('image/webp', 1.0);\n}\n","/* eslint-disable */\nexport type DetectedInfoType =\n  | 'browser'\n  | 'node'\n  | 'bot-device'\n  | 'bot'\n  | 'react-native';\n\ninterface DetectedInfo<\n  T extends DetectedInfoType,\n  N extends string,\n  O,\n  V = null\n> {\n  readonly type: T;\n  readonly name: N;\n  readonly version: V;\n  readonly os: O;\n}\n\n class BrowserInfo\n  implements DetectedInfo<'browser', Browser, OperatingSystem | null, string> {\n  public readonly type = 'browser';\n  constructor(\n    public readonly name: Browser,\n    public readonly version: string,\n    public readonly os: OperatingSystem | null,\n  ) {}\n}\n\nclass NodeInfo\n  implements DetectedInfo<'node', 'node', NodeJS.Platform, string> {\n  public readonly type = 'node';\n  public readonly name: 'node' = 'node';\n  public readonly os: NodeJS.Platform = process.platform;\n\n  constructor(public readonly version: string) {}\n}\n\nclass SearchBotDeviceInfo\n  implements\n    DetectedInfo<'bot-device', Browser, OperatingSystem | null, string> {\n  public readonly type = 'bot-device';\n  constructor(\n    public readonly name: Browser,\n    public readonly version: string,\n    public readonly os: OperatingSystem | null,\n    public readonly bot: string,\n  ) {}\n}\n\nclass BotInfo implements DetectedInfo<'bot', 'bot', null, null> {\n  public readonly type = 'bot';\n  public readonly bot: true = true; // NOTE: deprecated test name instead\n  public readonly name: 'bot' = 'bot';\n  public readonly version: null = null;\n  public readonly os: null = null;\n}\n\nclass ReactNativeInfo\n  implements DetectedInfo<'react-native', 'react-native', null, null> {\n  public readonly type = 'react-native';\n  public readonly name: 'react-native' = 'react-native';\n  public readonly version: null = null;\n  public readonly os: null = null;\n}\n\nexport type Browser =\n  | 'aol'\n  | 'edge'\n  | 'edge-ios'\n  | 'yandexbrowser'\n  | 'kakaotalk'\n  | 'samsung'\n  | 'silk'\n  | 'miui'\n  | 'beaker'\n  | 'edge-chromium'\n  | 'chrome'\n  | 'chromium-webview'\n  | 'phantomjs'\n  | 'crios'\n  | 'firefox'\n  | 'fxios'\n  | 'opera-mini'\n  | 'opera'\n  | 'ie'\n  | 'bb10'\n  | 'android'\n  | 'ios'\n  | 'safari'\n  | 'facebook'\n  | 'instagram'\n  | 'ios-webview'\n  | 'curl'\n  | 'searchbot';\nexport type OperatingSystem =\n  | 'iOS'\n  | 'Android OS'\n  | 'BlackBerry OS'\n  | 'Windows Mobile'\n  | 'Amazon OS'\n  | 'Windows 3.11'\n  | 'Windows 95'\n  | 'Windows 98'\n  | 'Windows 2000'\n  | 'Windows XP'\n  | 'Windows Server 2003'\n  | 'Windows Vista'\n  | 'Windows 7'\n  | 'Windows 8'\n  | 'Windows 8.1'\n  | 'Windows 10'\n  | 'Windows ME'\n  | 'Open BSD'\n  | 'Sun OS'\n  | 'Linux'\n  | 'Mac OS'\n  | 'QNX'\n  | 'BeOS'\n  | 'OS/2'\n  | 'Chrome OS';\ntype UserAgentRule = [Browser, RegExp];\ntype UserAgentMatch = [Browser, RegExpExecArray] | false;\ntype OperatingSystemRule = [OperatingSystem, RegExp];\n\n// tslint:disable-next-line:max-line-length\nconst SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nconst SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nconst REQUIRED_VERSION_PARTS = 3;\n\nconst userAgentRules: UserAgentRule[] = [\n  ['aol', /AOLShield\\/([0-9\\._]+)/],\n  ['edge', /Edge\\/([0-9\\._]+)/],\n  ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n  ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n  ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n  ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n  ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n  ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n  ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n  ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n  [\n    'chromium-webview',\n    /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n  ],\n  ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n  ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n  ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n  ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n  ['fxios', /FxiOS\\/([0-9\\.]+)/],\n  ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n  ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n  ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n  ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n  ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n  ['ie', /MSIE\\s(7\\.0)/],\n  ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n  ['android', /Android\\s([0-9\\.]+)/],\n  ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n  ['safari', /Version\\/([0-9\\._]+).*Safari/],\n  ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\n  ['instagram', /Instagram\\s([0-9\\.]+)/],\n  ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n  ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n  ['curl', /^curl\\/([0-9\\.]+)$/],\n  ['searchbot', SEARCHBOX_UA_REGEX],\n];\nconst operatingSystemRules: OperatingSystemRule[] = [\n  ['iOS', /iP(hone|od|ad)/],\n  ['Android OS', /Android/],\n  ['BlackBerry OS', /BlackBerry|BB10/],\n  ['Windows Mobile', /IEMobile/],\n  ['Amazon OS', /Kindle/],\n  ['Windows 3.11', /Win16/],\n  ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n  ['Windows 98', /(Windows 98)|(Win98)/],\n  ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n  ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n  ['Windows Server 2003', /(Windows NT 5.2)/],\n  ['Windows Vista', /(Windows NT 6.0)/],\n  ['Windows 7', /(Windows NT 6.1)/],\n  ['Windows 8', /(Windows NT 6.2)/],\n  ['Windows 8.1', /(Windows NT 6.3)/],\n  ['Windows 10', /(Windows NT 10.0)/],\n  ['Windows ME', /Windows ME/],\n  ['Open BSD', /OpenBSD/],\n  ['Sun OS', /SunOS/],\n  ['Chrome OS', /CrOS/],\n  ['Linux', /(Linux)|(X11)/],\n  ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n  ['QNX', /QNX/],\n  ['BeOS', /BeOS/],\n  ['OS/2', /OS\\/2/],\n];\n\nexport function detect(\n  userAgent?: string,\n):\n  | BrowserInfo\n  | SearchBotDeviceInfo\n  | BotInfo\n  | NodeInfo\n  | ReactNativeInfo\n  | null {\n  if (!!userAgent) {\n    return parseUserAgent(userAgent);\n  }\n\n  if (\n    typeof document === 'undefined' &&\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative'\n  ) {\n    return new ReactNativeInfo();\n  }\n\n  if (typeof navigator !== 'undefined') {\n    return parseUserAgent(navigator.userAgent);\n  }\n\n  return getNodeVersion();\n}\n\nfunction matchUserAgent(ua: string): UserAgentMatch {\n  // opted for using reduce here rather than Array#first with a regex.test call\n  // this is primarily because using the reduce we only perform the regex\n  // execution once rather than once for the test and for the exec again below\n  // probably something that needs to be benchmarked though\n  return (\n    ua !== '' &&\n    userAgentRules.reduce<UserAgentMatch>(\n      (matched: UserAgentMatch, [browser, regex]) => {\n        if (matched) {\n          return matched;\n        }\n\n        const uaMatch = regex.exec(ua);\n        return !!uaMatch && [browser, uaMatch];\n      },\n      false,\n    )\n  );\n}\n\nfunction browserName(ua: string): Browser | null {\n  const data = matchUserAgent(ua);\n  return data ? data[0] : null;\n}\n\nexport function parseUserAgent(\n  ua: string,\n): BrowserInfo | SearchBotDeviceInfo | BotInfo | null {\n  const matchedRule: UserAgentMatch = matchUserAgent(ua);\n\n  if (!matchedRule) {\n    return null;\n  }\n\n  const [name, match] = matchedRule;\n  if (name === 'searchbot') {\n    return new BotInfo();\n  }\n  // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n  let versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n  if (versionParts) {\n    if (versionParts.length < REQUIRED_VERSION_PARTS) {\n      versionParts = [\n        ...versionParts,\n        ...createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length),\n      ];\n    }\n  } else {\n    versionParts = [];\n  }\n\n  const version = versionParts.join('.');\n  const os = detectOS(ua);\n  const searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n\n  if (searchBotMatch && searchBotMatch[1]) {\n    return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n  }\n\n  return new BrowserInfo(name, version, os);\n}\n\nexport function detectOS(ua: string): OperatingSystem | null {\n  for (let ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n    const [os, regex] = operatingSystemRules[ii];\n    const match = regex.exec(ua);\n    if (match) {\n      return os;\n    }\n  }\n\n  return null;\n}\n\nexport function getNodeVersion(): NodeInfo | null {\n  const isNode = typeof process !== 'undefined' && process.version;\n  return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\n\nfunction createVersionParts(count: number): string[] {\n  const output = [];\n  for (let ii = 0; ii < count; ii++) {\n    output.push('0');\n  }\n\n  return output;\n}\n","export function getBrowser() {\n    return \"window\" in globalThis;\n}\n","import type { Writable } from 'svelte/store';\nimport { writable } from 'svelte/store';\nimport { getBrowser } from './helper';\n\n\ninterface User {\n  username?: string;\n  id?: string;\n  role?: string;\n  permissions?: string[];\n}\n\nlet _user = {};\n\n(() => {\n\n  if(!(\"sessionStorage\" in globalThis)){\n    globalThis[\"sessionStorage\"] = {\n      getItem:(k) => undefined,\n      setItem:(k, v) => {},\n    }\n  }\n\n})()\n\nif (\"user\" in sessionStorage) {\n  try {\n    _user = JSON.parse(sessionStorage.getItem(\"user\"));\n  } catch (err) {\n    //\n  }\n}\n\n\nconst user: Writable<User> = writable(_user);\n\nuser.subscribe(v => {\n  sessionStorage.setItem(\"user\", JSON.stringify(v));\n})\n\nexport const userStore = user;\n","const { VITE_API_URL = 'http://localhost:3000' } = import.meta.env;\nimport { getBrowser } from './helper';\nimport { userStore } from './user-store';\n\nfunction parseJwt(token: string) {\n  const base64Url = token.split('.')[1];\n  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  const jsonPayload = decodeURIComponent(\n    atob(base64)\n      .split('')\n      .map(function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      })\n      .join('')\n  );\n\n  return JSON.parse(jsonPayload);\n}\n\nconst browser = getBrowser();\n\nexport const store: { token: string } = (() => {\n  let token = browser && localStorage.getItem('token');\n\n  function setUserStore() {\n    if (!token || token.length < 10) {\n      userStore.set({});\n      return;\n    }\n    const parsed = parseJwt(token);\n    userStore.set({ username: parsed.username, id: parsed.sub });\n  }\n\n  setUserStore();\n\n  return {\n    set token(v) {\n      token = v;\n      browser && localStorage.setItem('token', v);\n      setUserStore();\n    },\n    get token() {\n      return token;\n    }\n  };\n})();\n\ninterface SendOptions {\n  method: 'GET' | 'POST' | 'PUT' | 'DELETE';\n  path: string;\n  data?: any;\n  isJSON?: boolean;\n}\n\nexport async function send({ method, path, data, isJSON = true }: SendOptions) {\n  const opts: { method: string; headers: Record<string, string>; body?: string } = {\n    method,\n    headers: {}\n  };\n\n  if (data) {\n    opts.headers['Content-Type'] = 'application/json';\n    opts.body = JSON.stringify(data);\n  }\n\n  if (store.token) {\n    opts.headers['access-token'] = `Bearer ${store.token}`;\n  }\n\n  const response = await fetch(`${VITE_API_URL}/${path}`, opts);\n\n  if (response.ok) {\n    if (isJSON) {\n      try {\n        return await response.json();\n      }catch(err){\n        console.error(\"Response from \"+path+\" failed to parse\");\n        console.error(err);\n      }\n    }\n    return response.text();\n  }\n\n  const json = await response.json();\n\n  console.error(json);\n  return json;\n\n}\n\nexport function get(path: string,options:Partial<SendOptions> = {}) {\n  return send({ method: 'GET', path,...options });\n}\n\nexport function del(path: string) {\n  return send({ method: 'DELETE', path });\n}\n\nexport function post(path: string, data: any) {\n  return send({ method: 'POST', path, data });\n}\n\nexport function put(path: string, data: any) {\n  return send({ method: 'PUT', path, data });\n}\n","import { send } from \"./core\";\n\n\nexport function getReport(reportId:string){\n  return send({method:\"GET\", path: `api/report/${reportId}`});\n}\n\nexport function publishReport(reportId:string){\n  return send({method:\"PUT\", path:`api/report/${reportId}/publish`})\n}\n\nexport function unpublishReport(reportId:string){\n  return send({method:\"PUT\", path:`api/report/${reportId}/unpublish`})\n}\n\nexport function getAvailableLabels(){\n  return send({method:\"GET\", path:`api/report/labels`});\n}\n\nexport function setReportLabels(reportId:string,labels:string[]){\n  return send({method:\"PUT\", path:`api/report/${reportId}`, data: {labels}})\n}\n","import { userStore } from \"./user-store\";\nimport { send, post, store, del, get } from \"./core\";\n\nexport async function login(username: string, password: string) {\n  const res = await post('api/auth/login', { username, password });\n  store.token = res.access_token;\n}\n\nexport function logout() {\n  store.token = '';\n}\n\nexport function submitReport(data: any) {\n  return send({ method: \"POST\", path: `api/report`, data })\n}\n\nexport function deleteReport(reportId: string) {\n  return del(`api/report/${reportId}`);\n}\n\nexport async function getRole() {\n  const role = await get(`api/user/role`, { isJSON: false }) as string;\n  userStore.update(s => {\n    s.role = role;\n    return s\n  })\n  return role;\n\n}\n\nexport async function getPermission() {\n  const permissions = await get(`api/user/permission`) as unknown as string[];\n  userStore.update(s => {\n    s.permissions = permissions;\n    return s\n  })\n  return permissions;\n}\n","import * as admin from \"./admin-wrapper\";\nimport * as user from \"./user-wrapper\";\n\nexport * from \"./user-store\"\nexport * from \"./core\"\nexport * from \"./admin-wrapper\"\nexport * from \"./user-wrapper\"\n\nexport default {\n  ...admin,\n  ...user,\n}\n","import { EventEmitter, logger } from '@plantarium/helpers';\r\nimport type { NodeSystem } from '@plantarium/nodesystem';\r\nimport storage from 'localforage';\r\nimport createId from 'shortid';\r\nimport type { Writable } from \"svelte/store\"\r\nimport { writable } from 'svelte/store';\r\nimport { renderProject } from '../../helpers';\r\nimport type { SettingsManager } from '../settings-manager';\r\n\r\nconst log = logger('ProjectManager');\r\n\r\nconst PTP_PREFIX = 'pt_project_';\r\n\r\nexport default class ProjectManager extends EventEmitter {\r\n  private plant: NodeResult;\r\n  private settingsManager: typeof SettingsManager;\r\n  public activeProjectId: string;\r\n  public activeProject: Writable<PlantProject | undefined> = writable();\r\n  private projects: { [key: string]: PlantProject } = {};\r\n  private loadingActiveProject?: Promise<PlantProject>;\r\n  public store: Writable<PlantProject[]> = writable([]);\r\n  private nodeSystem: NodeSystem;\r\n\r\n  once: (\r\n    type: 'save' | 'delete' | 'update' | 'new',\r\n    cb: (value: unknown) => void,\r\n  ) => () => void;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.loadProjects();\r\n  }\r\n\r\n  private createNewProject(): PlantProject {\r\n    const amountDefaultProjects = Object.values(this.projects).filter((p) =>\r\n      /^DefaultProject((\\d)+)?/.test(p.meta.name),\r\n    ).length;\r\n\r\n    const plant = {\r\n      meta: {\r\n        name:\r\n          'DefaultProject' +\r\n          (amountDefaultProjects ? amountDefaultProjects : ''),\r\n        id: createId(),\r\n        transform: { x: 0, y: 0, s: 1 },\r\n      },\r\n      nodes: [\r\n        {\r\n          attributes: {\r\n            pos: { x: -100, y: 0 },\r\n            type: 'stem',\r\n            id: '1',\r\n            refs: [{ id: '0', in: 'main', out: 0 }],\r\n          },\r\n        },\r\n        {\r\n          attributes: {\r\n            pos: { x: 0, y: 0 },\r\n            type: 'output',\r\n            id: '0',\r\n            refs: [],\r\n          },\r\n        },\r\n      ],\r\n    };\r\n\r\n    log('created new plant', plant);\r\n\r\n    return plant;\r\n  }\r\n\r\n  public createNew(): void {\r\n    const plant = this.createNewProject();\r\n    this.emit('new', plant);\r\n\r\n    this.saveProject(plant);\r\n  }\r\n\r\n  async updateProjectMeta(\r\n    id: string,\r\n    meta: Partial<PlantProjectMeta>,\r\n  ): Promise<void> {\r\n    const project = await this.getProject(id);\r\n\r\n    project.meta = { ...project.meta, ...meta };\r\n\r\n    log('update meta', id);\r\n\r\n    this.emit('update', project);\r\n\r\n    this.saveProject(project);\r\n  }\r\n\r\n  async saveProject(_project: PlantProject) {\r\n    const project = JSON.parse(JSON.stringify(_project));\r\n\r\n    this.projects[project.meta.id] = project;\r\n\r\n    this.emit('save', project);\r\n\r\n    if(!project?.meta?.thumbnail) this.renderThumbnail({ project })\r\n\r\n    await storage.setItem('pt_project_ids', Object.keys(this.projects));\r\n\r\n    await storage.setItem(PTP_PREFIX + project.meta.id, project);\r\n\r\n    log('saved plant id: ', project.meta.id);\r\n\r\n    this.store.set(Object.values(this.projects));\r\n  }\r\n\r\n  private async getProject(id: string): Promise<PlantProject> {\r\n    if (id in this.projects) return this.projects[id];\r\n    const project = (await storage.getItem(PTP_PREFIX + id)) as PlantProject;\r\n    this.projects[id] = project;\r\n    return project;\r\n  }\r\n\r\n  async deleteProject(id: string): Promise<void> {\r\n    if (id in this.projects) {\r\n      delete this.projects[id];\r\n      await storage.removeItem(PTP_PREFIX + id);\r\n      await storage.setItem('pt_project_ids', Object.keys(this.projects));\r\n      this.store.set(Object.values(this.projects));\r\n      this.emit('delete', id);\r\n      log('deleted project with id: ' + id);\r\n    } else {\r\n      log.warn('cant delete project with id: ' + id);\r\n    }\r\n  }\r\n\r\n  async setActiveProject(id: string) {\r\n    this.loadingActiveProject && await this.loadingActiveProject;\r\n    if (id === this.activeProjectId) return;\r\n\r\n    this.activeProjectId = id;\r\n\r\n    this.loadingActiveProject = this.getProject(id);\r\n\r\n    const project = await this.loadingActiveProject;\r\n\r\n    if (this.loadingActiveProject) {\r\n      this.activeProjectId = id;\r\n      this.saveProject(project);\r\n      this.activeProject.set(project);\r\n      await storage.setItem('pt_active_id', id);\r\n      log('set active project to id: ' + id);\r\n      this.emit('load', project);\r\n      delete this.loadingActiveProject;\r\n    } else {\r\n      log.warn('cant find plant with id: ' + id);\r\n    }\r\n  }\r\n\r\n  async renderThumbnail({ project, geo }: { project?: PlantProject, geo?: TransferGeometry }) {\r\n    const projectId = project?.meta?.id || this.activeProjectId\r\n\r\n    if (!(projectId in this.projects)) return;\r\n\r\n    const a = performance.now();\r\n\r\n    const thumbDataString = await renderProject(geo ? { geo } : { pd: project });\r\n\r\n    const b = performance.now() - a;\r\n\r\n    this.projects[projectId].meta.thumbnail = thumbDataString;\r\n\r\n    log(\"generated thumbnail for \" + projectId + \" in \" + Math.floor(b) + \"ms\")\r\n\r\n    this.saveProject(this.projects[projectId])\r\n\r\n    this.store.set(Object.values(this.projects));\r\n\r\n  }\r\n\r\n  private async loadProjects() {\r\n    const projectIds =\r\n      ((await storage.getItem('pt_project_ids')) as string[]) || [];\r\n\r\n    log('loaded project ids', projectIds);\r\n\r\n    const activeProjectId = (await storage.getItem('pt_active_id')) as string;\r\n\r\n    if (!projectIds.length) {\r\n      const plant = this.createNewProject();\r\n      projectIds.push(plant.meta.id);\r\n      await this.saveProject(plant);\r\n    }\r\n\r\n    await Promise.all(\r\n      projectIds.map(async (id) => {\r\n        const p = await this.getProject(id);\r\n        log('loaded ', id);\r\n        this.projects[id] = p;\r\n      }),\r\n    );\r\n\r\n    if (activeProjectId && projectIds.includes(activeProjectId)) {\r\n      this.setActiveProject(activeProjectId);\r\n    } else {\r\n      this.setActiveProject(projectIds[0]);\r\n    }\r\n\r\n    this.store.set(Object.values(this.projects));\r\n  }\r\n\r\n  setProject(plant: NodeResult) {\r\n    this.plant = plant;\r\n    this.emit('plant', plant);\r\n  }\r\n\r\n  getActiveProject() {\r\n    return this.plant;\r\n  }\r\n\r\n  setSettings(settings: PlantariumSettings) {\r\n    this.emit('settings', settings);\r\n  }\r\n}\r\n","<script lang=\"ts\">\n  import { humane } from '@plantarium/helpers';\n  import { projectManager } from '..';\n\n  export let project: PlantProject;\n\n  let active = false;\n  function fakeActive() {\n    active = true;\n    setTimeout(() => {\n      active = false;\n    }, 100);\n    return true;\n  }\n</script>\n\n<div\n  class=\"project-wrapper\"\n  class:active={project.meta.id === projectManager.activeProjectId || active}\n  on:resize={alert}\n  on:click={() =>\n    fakeActive() && projectManager.setActiveProject(project.meta.id)}\n>\n  <div\n    class=\"project-image\"\n    style=\"background-image: url({project.meta.thumbnail})\"\n  >\n    <!--  -->\n  </div>\n  <div class=\"project-content\">\n    <div class=\"project-content-header\">\n      <input\n        contenteditable\n        value={project.meta.name}\n        on:blur={function () {\n          const value = this.value.split('\\n').join('').trim();\n          projectManager.updateProjectMeta(project.meta.id, { name: value });\n        }}\n        on:keydown={function (ev) {\n          if (ev.key === 'Enter') {\n            const value = this.value.split('\\n').join('').trim();\n            this.blur();\n            ev.preventDefault();\n            projectManager.updateProjectMeta(project.meta.id, { name: value });\n          }\n        }}\n      />\n\n      <p>{humane.time(Date.now() - project.meta.lastSaved)} ago</p>\n    </div>\n    <div class=\"project-content-main\" />\n    <div class=\"project-content-footer\">\n      <button\n        class=\"delete\"\n        on:click|stopPropagation={() =>\n          projectManager.deleteProject(project.meta.id)}>delete</button\n      >\n    </div>\n  </div>\n</div>\n\n<style lang=\"scss\">\n  @use '~@plantarium/theme/src/themes.module.scss';\n\n  .project-wrapper {\n    position: relative;\n    min-height: 100px;\n    padding: 4px;\n    border-radius: 10px;\n    display: grid;\n    grid-template-columns: 100px 1fr;\n    color: #303030;\n\n    > .project-image {\n      background-image: url('../assets/rocky_dirt1-albedo.jpg');\n      background-color: var(--foreground-color);\n      border-radius: 10px;\n      background-size: cover;\n      width: 100px;\n      height: 100%;\n      display: inline-block;\n    }\n\n    > .project-content {\n      display: grid;\n      grid-template-rows: auto 1fr auto;\n      padding-left: 5px;\n\n      > .project-content-header {\n        display: flex;\n        align-items: baseline;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        > p {\n          font-size: 0.8em;\n        }\n      }\n\n      > .project-content-footer {\n        display: flex;\n        align-items: baseline;\n        flex-wrap: wrap;\n\n        > button {\n          font-size: 0.8em;\n          border: none;\n          border-radius: 6px;\n          margin: 0;\n          margin-right: 5px;\n\n          &.delete {\n            background-color: themes.$light-red;\n          }\n        }\n      }\n    }\n\n    &.active {\n      background-color: lightblue;\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import ResizeObserer from 'svelte-resize-observer';\n  import { projectManager } from '..';\n  import { localState } from '../../helpers';\n  import Project from './Project.svelte';\n\n  const { store } = projectManager;\n  export let visible;\n\n  let searchTerm: string;\n\n  function showProject(search, project: PlantProject) {\n    if (!search || search.length < 1) return true;\n\n    const projectName = project.meta.name.toLowerCase();\n    search = search.toLowerCase();\n\n    if (projectName.includes(search) || search.includes(projectName)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  const { width, height } = localState.get('projectManagerSize', {\n    width: 300,\n    height: window.innerHeight / 2,\n  });\n</script>\n\n<div\n  class=\"project-manager-wrapper\"\n  style={`width: ${width}px; height: ${height}px;`}\n>\n  <ResizeObserer\n    on:resize={(ev) => {\n      visible &&\n        localState.set('projectManagerSize', {\n          width: ev.detail.clientWidth,\n          height: ev.detail.clientHeight,\n        });\n    }}\n  />\n  <div class=\"header\">\n    <button class=\"add-new\" on:click={() => projectManager.createNew()}>\n      <p>new</p>\n    </button>\n    {#if $store.length > 3}\n      <input\n        type=\"text\"\n        class=\"search\"\n        placeholder=\"Search\"\n        bind:value={searchTerm}\n      />\n    {:else}\n      <div />\n    {/if}\n\t\t<!--<InputSelect values={['Date', 'Test', 'Test2']} />-->\n  </div>\n\n  {#if visible}\n    <div class=\"project-list\">\n      {#each $store as project}\n        {#if showProject(searchTerm, project)}\n          <Project {project} />\n        {/if}\n      {/each}\n    </div>\n  {/if}\n</div>\n\n<style lang=\"scss\">\n  @use '~@plantarium/theme/src/themes.module.scss';\n\n  .header {\n    position: sticky;\n    top: 0px;\n    left: 0px;\n    display: grid;\n    grid-template-columns: auto 1fr auto auto;\n    column-gap: 5px;\n    padding: 7px;\n    z-index: 99;\n    min-height: 30px;\n    padding-bottom: 0px;\n    top: 0px;\n    left: 0px;\n    background: linear-gradient(0deg, #65e29f00 0%, #65e29f 50%);\n\n    > button,\n    input {\n      height: 100%;\n      border-radius: 5px;\n      padding: 0px 10px;\n      background-color: themes.$dark-green;\n      color: white;\n      font-size: 1em;\n      border: none;\n    }\n\n    > :global(#main > *) {\n      background-color: themes.$dark-green;\n      font-size: 1em;\n    }\n\n    > button {\n      cursor: pointer;\n    }\n  }\n\n  .project-list {\n    overflow-y: hidden;\n    overflow-x: hidden;\n    padding: 3px;\n    padding-right: 7px;\n    padding-top: 7px;\n  }\n</style>\n","const template: SettingsTemplate = {\n  enableSync: {\n    type: 'boolean',\n    defaultValue: false,\n  },\n  useRandomSeed: {\n    type: 'boolean',\n    defaultValue: false,\n  },\n  theme: {\n    type: 'select',\n    values: ['dark', 'light'],\n    defaultValue: 'dark',\n  },\n  debug: {\n    onlyDev: true,\n    options: {\n      //reportError: {\n      //type: 'boolean',\n      //defaultValue: false,\n      //},\n      renderPerf: {\n        type: 'boolean',\n        defaultValue: false,\n      },\n      generatePerf: {\n        type: 'boolean',\n        defaultValue: false,\n      },\n      pd: {\n        type: 'boolean',\n        defaultValue: false,\n      },\n      skeleton: {\n        type: 'boolean',\n        defaultValue: false,\n      },\n      wireframe: {\n        type: 'boolean',\n        defaultValue: false,\n      },\n      logLevel: {\n        type: 'number',\n        min: 0,\n        max: 2,\n        defaultValue: 1,\n      },\n    },\n  },\n  background: {\n    options: {\n      grid: {\n        label: 'Show Grid',\n        type: 'boolean',\n        defaultValue: false,\n      },\n      ground: {\n        label: 'Show Ground',\n        type: 'boolean',\n        defaultValue: true,\n      },\n      resX: {\n        onlyDev: true,\n        type: 'number',\n        min: 8,\n        max: 64,\n        step: 1,\n        defaultValue: 8,\n      },\n      resY: {\n        onlyDev: true,\n        type: 'number',\n        min: 8,\n        max: 64,\n        step: 1,\n        defaultValue: 16,\n      },\n      scale: {\n        type: 'number',\n        min: 0,\n        max: 5,\n        step: 0.1,\n        defaultValue: 1,\n      },\n    },\n  },\n  leafRes: {\n    onlyDev: true,\n    type: 'number',\n    min: 3,\n    max: 12,\n    step: 1,\n    defaultValue: 2,\n  },\n  stemResX: {\n    onlyDev: true,\n    type: 'number',\n    min: 3,\n    max: 32,\n    step: 1,\n    defaultValue: 3,\n  },\n  stemResY: {\n    onlyDev: true,\n    type: 'number',\n    min: 3,\n    max: 64,\n    step: 1,\n    defaultValue: 32,\n  },\n  isDev: {\n    label: 'Advanced',\n    type: 'boolean',\n    defaultValue: false,\n  },\n};\n\nexport default template;\n","import { debounce, EventEmitter, logger } from '@plantarium/helpers';\nimport storage from 'localforage';\nimport type { Writable } from 'svelte/store';\nimport { writable } from 'svelte/store';\nimport './index.scss';\nimport SettingsTemplate from './SettingsTemplate';\n\nconst obj = {};\n\nconst log = logger('SettingsManager');\n\nconst templateToSettings = (\n  template: SettingsTemplate,\n  store?: typeof obj,\n): PlantariumSettings => {\n  const settings = {} as PlantariumSettings;\n\n  Object.entries(template).forEach(([key, _template]) => {\n    const value = store && key in store ? store[key] : undefined;\n    if ('options' in _template) {\n      settings[key] = templateToSettings(_template.options, value);\n    } else {\n      settings[key] = value ?? _template.defaultValue ?? _template.value;\n    }\n  });\n\n  return settings;\n};\n\nconst resolveDeep = (object: typeof obj, path: string[]) => {\n  const current = path.shift();\n  if (current && current in object) {\n    if (!path.length) return object[current];\n    return resolveDeep(object[current], path);\n  } else {\n    return;\n  }\n};\n\nconst keyToPath = (key: string) => (key.includes('.') ? key.split('.') : [key]);\n\nexport default class SettingsManager extends EventEmitter {\n  private settings: PlantariumSettings = {} as PlantariumSettings;\n\n  public store: Writable<PlantariumSettings> = writable(this.settings);\n\n  private _save: () => void;\n\n  constructor() {\n    super();\n\n    this._save = debounce(\n      () => {\n        storage.setItem('pt_settings', this.settings);\n      },\n      500,\n      false,\n    );\n  }\n\n  save() {\n    this.emit('settings', this.settings);\n\n    logger.setLevel(this.settings?.debug?.logLevel ?? 2);\n    this.store.set(this.settings);\n\n    log('save settings', this.settings);\n\n    this._save();\n  }\n\n  async loadFromLocal() {\n    const s =\n      ((await storage.getItem('pt_settings')) as PlantariumSettings) || {};\n\n    this.settings = templateToSettings(SettingsTemplate, s);\n\n    logger.setLevel(this.settings?.debug?.logLevel ?? 2);\n\n    this.store.set(this.settings);\n\n    log('loaded settings from local', this.settings);\n\n    this.emit('settings', this.settings);\n  }\n\n  set(key: string, value: unknown) {\n    const path = keyToPath(key);\n\n    if (path.length > 1) {\n      const finalKey: string = path.pop() as string;\n      const obj = resolveDeep(this.settings, path);\n      if (obj) {\n        obj[finalKey] = value;\n      }\n    } else {\n      this.settings[path[0]] = value;\n    }\n\n    log(`Set ${path}`, value);\n\n    this.emit(path + '.update', value);\n\n    this.save();\n  }\n\n  get(key: string) {\n    return resolveDeep(this.settings, keyToPath(key));\n  }\n\n  getSettings() {\n    return JSON.parse(JSON.stringify(this.settings)) as PlantariumSettings;\n  }\n}\n","import { localState } from '../../helpers';\n\nlet index = 0;\n\nconst sections: boolean[] = (localState.get('sections') as boolean[]) || [];\n\nexport default () => {\n  const i = index++;\n  return {\n    get() {\n      return sections[i] || false;\n    },\n    set(open: boolean) {\n      sections[i] = open;\n      localState.set('sections', sections);\n    },\n  };\n};\n","<script lang=\"ts\">\n  import { Section, stateToComponent } from '@plantarium/ui';\n  import { settingsManager } from '..';\n  import sectionOpen from './sectionOpen';\n\n  type SettingsTemplate = {\n    [key: string]: ValueTemplate | { options: SettingsTemplate };\n  };\n\n  const settingsStore = settingsManager.store;\n  export let value: unknown;\n  export let key: string;\n  export let path = '';\n  path = path + (path.length ? '.' : '') + key;\n  export let template: SettingsTemplate;\n  // We need to cheat here because sveltes {if else}\n  // does not work with typescript types\n  let _template: ValueTemplate = template as unknown as ValueTemplate;\n\n  const isOpen = sectionOpen();\n\n  const templateToProps = (t: ValueTemplate) => {\n    const c = { ...t };\n\n    delete c.defaultValue;\n    delete c.type;\n\n    return c;\n  };\n</script>\n\n{#if $settingsStore.isDev || !template.onlyDev}\n  <div class=\"wrapper\">\n    {#if template.options}\n      <Section\n        name={key}\n        open={isOpen.get()}\n        on:toggle={({ detail }) => isOpen.set(detail)}\n      >\n        {#each Object.entries(value) as [_key, _value]}\n          {#if _key in template.options}\n            <svelte:self\n              {path}\n              value={_value}\n              key={_key}\n              template={template.options[_key]}\n            />\n          {:else}\n            <p>error</p>\n          {/if}\n        {/each}\n      </Section>\n    {:else}\n      <p>{template.label || key}</p>\n\n      <svelte:component\n        this={stateToComponent(_template, value)}\n        {value}\n        {...templateToProps(_template)}\n        on:change={(ev) => settingsManager.set(path, ev.detail)}\n      />\n    {/if}\n  </div>\n{/if}\n\n<style>\n  .wrapper {\n    margin-left: 20px;\n    width: calc(100% - 20px);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n\n    margin-bottom: 5px;\n    padding-bottom: 10px;\n    margin-top: 5px;\n    padding-top: 10px;\n\n    border-bottom: solid thin #30303055;\n    color: #303030;\n  }\n</style>\n","<script lang=\"ts\">\n  import { settingsManager } from '..';\n  import SettingsSection from './SettingsSection.svelte';\n  import SettingsTemplate from './SettingsTemplate';\n\n  const store = settingsManager.store;\n</script>\n\n{#each Object.entries($store) as [key, value]}\n  <SettingsSection {key} {value} template={SettingsTemplate[key]} />\n{/each}\n","<script>\n</script>\n\n<p>\n  🎉 Now you have all the knowledge to use the Plantarium. Have some fun with\n  it.\n</p>\n\n<style>\n  p {\n    white-space: normal;\n  }\n</style>\n","import type TutorStep from './ITutorStep';\nimport Final from './steps/Final.svelte';\nimport Greeting from './steps/Greeting.svelte';\n\nconst steps: TutorStep[] = [\n  {\n    title: 'Tutorial',\n    description: Greeting,\n    options: {\n      'lets go': () => {\n        /**/\n      },\n    },\n    type: 'alert',\n  },\n  {\n    description: `This is the <b>Plant View</b>, here you can explore the generated 3D model of your plant. \n      Try to change the view by:`,\n    selector: '.scene-wrapper',\n    checks: [\n      {\n        description: 'Clicking and dragging',\n        setup: function (isCompleted, { c }) {\n          const el = document.querySelector(c.selector);\n          if (el.getAttribute('setup') === 'true') return;\n          el.setAttribute('setup', 'true');\n          el.addEventListener('click', isCompleted, { once: true });\n        },\n      },\n      {\n        description: 'Scrolling / Zooming',\n        setup: (isCompleted, { c }) => {\n          const el = document.querySelector(c.selector + '> canvas');\n          if (el.getAttribute('setup') === 'true') return;\n\n          el.setAttribute('setup', 'true');\n\n          el.addEventListener('wheel', isCompleted, {\n            once: true,\n            passive: true,\n          });\n        },\n      },\n    ],\n  },\n  {\n    selector: '#nodesystem-view',\n    description:\n      'This is the <b>Node View</b>, here you define the way your plant looks. Try playing with some of the settings. If you are not so sure how this works, maybe visit the NodeTutorial',\n  },\n  {\n    description: 'This Button opens the project view',\n    clickSelector: 'header > div.left > div > div',\n  },\n  {\n    description:\n      'This is the ProjectView, here you can create/rename/delete projects.',\n    selector: '.project-manager-wrapper',\n    checks: [\n      {\n        description: 'create a new project',\n        setup: (isCompleted, { pm }) => {\n          pm.once('new', isCompleted);\n        },\n      },\n      {\n        description: 'rename the project',\n        setup: (isCompleted, { pm }) => {\n          pm.once('update', isCompleted);\n        },\n      },\n      {\n        description: 'delete the project',\n        setup: (isCompleted, { pm }) => {\n          pm.once('delete', isCompleted);\n        },\n      },\n    ],\n  },\n  {\n    description: 'This Button opens the <b>Settings View</b>',\n    clickSelector: 'header > div.right > div:nth-child(2) .icon-wrapper',\n  },\n  {\n    description:\n      'This is the <b>SettingView</b>, here you can change some general settings.',\n    selector:\n      'header > div.right > div:nth-child(2) > div > div > div.wrapper.right.visible',\n  },\n  {\n    description:\n      'When you encounter something which doesnt work or you have an Idea for a new feature, use this button to report it.',\n    clickSelector: 'header > div.right > div:nth-child(1) > div',\n  },\n  {\n    title: 'Tutorial',\n    description: Final,\n    options: {\n      'lets go': () => {\n        /**/\n      },\n    },\n    type: 'alert',\n  },\n];\n\nexport default steps;\n","import { writable } from 'svelte/store';\nimport type TutorStep from './ITutorStep';\n\nexport default writable<TutorStep>(undefined);\n","<script lang=\"ts\">\n  import { Button, Icon, InputCheckbox } from '@plantarium/ui';\n  import { projectManager } from '..';\n  import store from './store';\n\n  $: selector = $store && $store.selector;\n\n  $: element = selector && document.querySelector(selector);\n  $: elementRect = element && element.getBoundingClientRect();\n\n  $: clickElement =\n    $store &&\n    $store.clickSelector &&\n    document.querySelector($store.clickSelector);\n\n  $: clickRect = clickElement && clickElement.getBoundingClientRect();\n\n  $: if ($store && $store.clickSelector) {\n    const el = document.querySelector($store.clickSelector);\n    if (el && el.getAttribute('setup') !== 'true') {\n      el.setAttribute('setup', 'true');\n      el.addEventListener(\n        'click',\n        () => {\n          setTimeout(() => {\n            $store._isCompleted = true;\n          }, 20);\n        },\n        { once: true },\n      );\n    }\n  }\n\n  $: rect = elementRect || clickRect;\n\n  $: isLeft = rect && rect.left + rect.width > window.innerWidth - 100;\n\n  $: x = rect && (isLeft ? rect.left - 10 : rect.left + rect.width + 10);\n\n  $: checks = $store && $store.checks;\n\n  $: checks &&\n    checks.forEach((c, i) => {\n      if (c._isSetup) return c;\n      c._isSetup = true;\n      c.setup(\n        () => {\n          checks[i]._isCompleted = true;\n          checks = checks;\n        },\n        { pm: projectManager, c: $store },\n      );\n      return c;\n    });\n\n  $: active = !!rect;\n</script>\n\n{#if active}\n  <span class:isLeft class:hasElement={!!element} class:hasClick={!!clickRect}>\n    {#if clickRect}\n      <div\n        class=\"click-wrapper\"\n        style={`top: ${rect.top + 20}px; left: ${x - (isLeft ? 20 : -0)}px;`}\n      >\n        <Icon name=\"pointing\" --fill={'#303030'} />\n      </div>\n    {/if}\n\n    <div class=\"wrapper\" style={`left: ${x}px; top: ${rect.top + 20}px;`}>\n      <div class=\"close-wrapper\">\n        <Button\n          icon=\"cross\"\n          --bg=\"transparent\"\n          on:click={() => {\n            active = false;\n          }}\n        />\n      </div>\n\n      <p>{@html $store.description}</p>\n\n      {#if checks}\n        <div class=\"checks-wrapper\">\n          {#each checks as check}\n            <div class=\"check-wrapper\" class:is-completed={check._isCompleted}>\n              <InputCheckbox bind:value={check._isCompleted} />\n              <p>{check.description}</p>\n            </div>\n          {/each}\n        </div>\n      {/if}\n\n      {#if !clickElement}\n        <div class=\"next-wrapper\">\n          <Button\n            on:click={() => ($store._isCompleted = true)}\n            name=\"next\"\n            --text={'white'}\n            --bg={'#303030'}\n          />\n        </div>\n      {/if}\n    </div>\n\n    {#if rect && element}\n      <span\n        class=\"highlighter \"\n        style={`width: ${rect.width}px; height: ${rect.height}px; left: ${rect.left}px; top: ${rect.top}px;`}\n      />\n    {/if}\n  </span>\n{/if}\n\n<style lang=\"scss\">\n  @use '~@plantarium/theme/src/themes.module.scss';\n\n  .close-wrapper {\n    width: 40px;\n    position: absolute;\n    right: 5px;\n    top: 5px;\n  }\n\n  span {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    height: 100vh;\n    width: 100vw;\n    color: #303030;\n  }\n\n  @keyframes cursorAnim {\n    0% {\n      transform: scale(1);\n      filter: drop-shadow(0px 0px 20px rgba(0, 0, 0, 0.8));\n    }\n    10% {\n      transform: scale(0.8);\n      filter: drop-shadow(0px 0px 5px rgba(0, 0, 0, 0.8));\n    }\n    20% {\n      transform: scale(1);\n      filter: drop-shadow(0px 0px 20px rgba(0, 0, 0, 0.8));\n    }\n    100% {\n      transform: scale(1);\n      filter: drop-shadow(0px 0px 20px rgba(0, 0, 0, 0.8));\n    }\n  }\n\n  .click-wrapper {\n    position: absolute;\n    width: 60px;\n    pointer-events: none;\n    transform: rotate(-50deg) translateX(-10px);\n    z-index: 10000;\n\n    :global(.icon-wrapper) {\n      animation: cursorAnim 4s ease infinite;\n    }\n  }\n\n  .isLeft .click-wrapper {\n    transform: rotate(50deg) translateX(-10px);\n  }\n\n  .checks-wrapper {\n    margin-top: 10px;\n  }\n\n  .next-wrapper {\n    padding-top: 25px;\n  }\n\n  .check-wrapper {\n    display: flex;\n    padding-top: 10px;\n\n    > p {\n      margin-left: 10px;\n    }\n\n    &.is-completed {\n      text-decoration: line-through;\n      text-decoration-color: #303030;\n    }\n  }\n\n  .hasClick > .wrapper {\n    transform: translate(40px, 10px);\n  }\n\n  .isLeft .wrapper {\n    transform: translateX(calc(-100%));\n  }\n\n  .wrapper {\n    position: absolute;\n    min-width: 200px;\n    max-width: 250px;\n    background-color: themes.$light-green;\n    border-radius: 20px;\n    z-index: 1000;\n    box-sizing: border-box;\n\n    padding: 30px;\n  }\n\n  .highlighter {\n    left: 0px;\n    top: 50px;\n    border: solid 7px;\n    box-sizing: border-box;\n\n    border-color: themes.$light-green;\n\n    z-index: 999;\n    pointer-events: none;\n  }\n</style>\n","import { createAlert, createToast } from '@plantarium/ui';\nimport { localState } from '../../helpers';\nimport steps from './steps';\nimport store from './store';\nimport TutorWrapper from './Tutor.svelte';\n\nconst affirmatives = ['yes', 'next', 'lets go', 'okay'];\n\nlet pm;\n\nconst Tutor = {\n  handleReject: () => {\n    localState.set('hasViewedTutorial', true);\n    createToast('The tutorial is accessable under...');\n  },\n  currentIndex: 0,\n  previous: async function () {\n    //\n  },\n  next: async function () {\n    const currentStep = steps[this.currentIndex];\n    if (this.currentIndex === steps.length) {\n      return;\n    }\n    if (currentStep.setup) await currentStep.setup({ pm });\n    store.set(currentStep);\n    this.currentIndex++;\n\n    if (this.currentIndex > 2) {\n      localState.set('hasViewedTutorial', true);\n    }\n\n    currentStep.title =\n      currentStep.title ?? `Tutorial (${this.currentIndex}/${steps.length})`;\n\n    if (currentStep.type === 'alert') {\n      const res = await createAlert(currentStep.description, {\n        title: currentStep.title,\n        type: 'success',\n        values: currentStep.options\n          ? Object.keys(currentStep.options)\n          : undefined,\n        timeout: 0,\n      });\n\n      if (affirmatives.includes(res.toString())) return this.next();\n    }\n\n    if (currentStep.type === 'toast') {\n      const res = await createToast(currentStep.description, {\n        values: currentStep.options\n          ? Object.keys(currentStep.options)\n          : undefined,\n        timeout: 0,\n      });\n      if (affirmatives.includes(res.toString())) return this.next();\n    }\n\n    const unsub = store.subscribe((v) => {\n      if (v._isCompleted) {\n        unsub();\n        this.next();\n      }\n    });\n  },\n  init: function ({ projectManager }) {\n    if (localState.get('hasViewedTutorial')) return;\n\n    pm = projectManager;\n\n    const greetings = `It looks like this is your first time here...\n    Want to take a little tour? `;\n\n    setTimeout(async () => {\n      const res = await createToast(greetings, {\n        title: '',\n        timeout: 8000,\n        values: ['nah', 'yes'],\n      });\n\n      // this.currentIndex = 5;\n      if (res === 'yes') this.next();\n      else this.handleReject();\n    }, 10000);\n  },\n  restart: function () {\n    localState.set('hasViewedTutorial', false);\n    this.currentIndex = 0;\n    this.next();\n  },\n};\n\nexport { Tutor, TutorWrapper };\n","import { get, writable } from \"svelte/store\";\nimport type { Writable } from \"svelte/store\"\n\nconst renderPerf = writable<number[]>([])\nconst generatePerf = writable<number[]>([])\n\nconst timers = {}\nconst enabled = {\n  render: false,\n  generate: false,\n}\n\nexport const times: { [key: string]: Writable<number[]> } = {\n  render: renderPerf,\n  generate: generatePerf,\n}\n\nexport function start(key: string) {\n  timers[key] = performance.now();\n}\n\nexport function setSettings(s: PlantariumSettings) {\n  enabled.render = !!s?.debug?.renderPerf;\n  enabled.generate = !!s?.debug?.generatePerf;\n}\n\nexport function add(key: string, time: number) {\n  const store = key in times ? times[key] : writable<number[]>([]);\n  store.update(s => {\n    s.push(time);\n    if (s.length > 200) s.shift();\n    return s;\n  })\n  if (key in canvasUpdates) {\n    canvasUpdates[key]();\n  }\n}\n\nexport function stop(key: string) {\n  if(!enabled[key])return;\n  const time = performance.now() - (timers[key] ?? 0);\n  add(key, time);\n}\n\nconst canvases = {};\nconst canvasUpdates = {};\n\nexport function createCanvas(key: string, canvas?: HTMLCanvasElement) {\n\n  canvas = canvas || canvases[key] || document.createElement(\"canvas\");\n  canvases[key] = canvas;\n\n  const width = 200;\n  const height = 100;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  const ctx = canvas.getContext(\"2d\");\n\n  canvasUpdates[key] = () => {\n\n    const values = [...get(times[key])];\n    const max = Math.max(...values);\n    let sum = 0;\n\n    const barWidth = width / 200;\n\n    ctx.clearRect(0, 0, width, height);\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.5)\"\n    ctx.fillRect(0, 0, width,height)\n\n    for (let i = 0; i < values.length; i++) {\n      sum += values[i];\n      const v = values[i] * (height / max);\n      ctx.fillStyle = \"rgba(0, 0, 0, 0.5)\";\n      ctx.fillRect(i * barWidth, height - v, barWidth, v);\n    }\n\n    ctx.fillStyle = \"black\";\n    ctx.textAlign = \"left\";\n    ctx.fillText(key + \"\", 10, 10)\n    ctx.textAlign = \"right\";\n    ctx.fillText(`avg: ${Math.floor(sum/values.length*10)/10}ms max: ${Math.floor(max*10)/10}ms`, 180, 10)\n\n  };\n\n\n}\n\n","import Nodes from '@plantarium/nodes';\nimport { NodeSystem } from '@plantarium/nodesystem';\nimport { setTheme } from '@plantarium/theme';\nimport { createToast } from '@plantarium/ui';\nimport { ProjectManager } from './project-manager';\nimport { SettingsManager } from './settings-manager';\nimport { Tutor } from './tutor';\nimport * as performance from '../helpers/performance';\n\nconst settingsManager = new SettingsManager();\nconst projectManager = new ProjectManager();\n\nsetTheme(settingsManager.get('theme'));\nperformance.setSettings(settingsManager.getSettings());\n\nsettingsManager.on('enableSync.update', (v) => {\n  createToast(`${v ? 'Enabled' : 'Disabled'} sync`, { type: 'success' });\n});\n\nsettingsManager.on('theme.update', (v: string) => {\n  setTheme(v);\n});\n\nconst nodeSystem = new NodeSystem({\n  view: true,\n  defaultNodes: false,\n  registerNodes: Nodes,\n});\n\nprojectManager.on('load', (project) => nodeSystem.load(project));\n\nnodeSystem.on('result', (p: NodeResult) => projectManager.setProject(p), 50);\n\nnodeSystem.on('save', (project: PlantProject) =>\n  projectManager.saveProject(project),\n);\n\nsettingsManager.on(\n  'settings',\n  (s: PlantariumSettings) => {\n    projectManager.setSettings(s);\n    performance.setSettings(s);\n  },\n  50,\n);\n\nTutor.init({ projectManager });\n\nexport { projectManager, settingsManager, nodeSystem };\nexport default { projectManager, settingsManager, nodeSystem };\n","import { ground } from '@plantarium/generator';\nimport { transferToGeometry } from '@plantarium/geometry';\nimport { loader } from '@plantarium/helpers';\nimport { Color, Mesh, Plane, Program } from 'ogl';\nimport type Scene from '.';\nimport { settingsManager } from '..';\nimport type { ProjectManager } from '../project-manager';\nimport { GroundShader } from './shaders';\n\nconst createGround = (\n  gl: WebGL2RenderingContext,\n  settings: PlantariumSettings,\n) => {\n  const {\n    background: { scale: _scale = 1, resX: _resX = 16, resY: _resY = 16 } = {},\n  } = settings || {};\n\n  const scale = _scale ?? 0;\n  const resX = _resX ?? 8;\n  const resY = _resY ?? 8;\n\n  const geo = ground(scale, resX, resY);\n\n  return transferToGeometry(gl, geo);\n};\n\nexport default class BackgroundScene {\n  private scene: Scene;\n  private gl: WebGL2RenderingContext;\n  private settings: PlantariumSettings;\n\n  private ground: Mesh;\n\n  constructor(scene: Scene, pm: ProjectManager) {\n    this.scene = scene;\n    this.gl = scene.renderer.gl;\n\n    this.initMeshes();\n\n    pm.on('settings', this.setSettings.bind(this));\n    this.setSettings(settingsManager.getSettings());\n  }\n\n  initMeshes(): void {\n    const groundGeometry = new Plane(this.gl);\n    const groundTexture = loader.texture(\n      this.gl,\n      'assets/rocky_dirt1-albedo.jpg',\n      {\n        wrapS: this.gl.REPEAT,\n        wrapT: this.gl.REPEAT,\n      },\n    );\n    const groundShader = new Program(this.gl, {\n      vertex: GroundShader.vertex,\n      fragment: GroundShader.fragment,\n      uniforms: {\n        uTime: { value: 0 },\n        tMap: { value: groundTexture },\n        // Pass relevant uniforms for fog\n        uFogColor: { value: new Color('#ffffff') },\n        uFogNear: { value: 10 },\n        uFogFar: { value: 30 },\n        texScale: { value: 1 },\n      },\n    });\n    this.ground = this.scene.addMesh({\n      geometry: groundGeometry,\n      program: groundShader,\n    });\n\n    const update = (time = 0) => {\n      requestAnimationFrame(update);\n      groundShader.uniforms.uTime.value = time;\n    };\n\n    update();\n  }\n\n  setSettings(settings: PlantariumSettings) {\n    this.settings = settings;\n\n    if (settings?.background?.ground) {\n      this.ground.geometry = createGround(this.gl, settings);\n    }\n    this.ground.visible = !!settings?.background?.ground;\n  }\n}\n","<script lang=\"ts\">\n  import type ICommit from './ICommit';\n\n  export let commit: ICommit;\n\n  export let isNew = false;\n</script>\n\n<p>\n  {@html isNew ? '<b>[NEW]</b>' : ''}\n  {commit.subject}\n</p>\n","import { writable } from 'svelte/store';\nimport { localState } from '../../helpers';\nimport type ICommit from './ICommit';\n\nexport const commits = writable<ICommit[]>([]);\n\nlet lastUpdated = localState.get('lastUpdated', Date.now());\n\nfunction parseCommit(c) {\n  const date = Date.parse(c.date);\n\n  return {\n    ...c,\n    date,\n    new: lastUpdated < date,\n  };\n}\n\nlet commitPromise;\nasync function _fetchCommits() {\n  const response = await fetch('commits.json');\n  const json = await response.json();\n\n  lastUpdated = Date.now();\n  localState.set('lastUpdated', lastUpdated);\n\n  return json.map((c) => parseCommit(c));\n}\n\nexport const fetchCommits = async () => {\n  if (commitPromise) {\n    return commitPromise;\n  }\n\n  commitPromise = _fetchCommits();\n\n  const _commits = await commitPromise;\n\n  commits.set(_commits);\n};\n","<script>\n  import Commit from './Commit.svelte';\n  import { commits, fetchCommits } from './store';\n\n  fetchCommits();\n\n  let day = $commits.length && new Date($commits[0].date).getDay();\n\n  const checkDate = (commit) => {\n    const d = new Date(commit.date);\n    if (d.getDay() != day) {\n      day = d.getDay();\n      return true;\n    }\n    return false;\n  };\n\n  const prettyDate = (date) => {\n    return new Date(date).toLocaleDateString();\n  };\n</script>\n\n<h1>Changelog</h1>\n\n<div>\n  {#each $commits as commit}\n    {#if checkDate(commit)}\n      <h3>\n        {prettyDate(commit.date)}\n      </h3>\n    {/if}\n    <Commit {commit} />\n  {/each}\n</div>\n\n<style>\n  h3 {\n    margin-top: 20px;\n  }\n  div {\n    max-width: 640px;\n    margin: 0 auto;\n    height: 70vh;\n    overflow-y: auto;\n  }\n</style>\n","<script lang=\"ts\">\n  import { ThemeStore } from '@plantarium/theme';\n  import Button from '@plantarium/ui/src/Button.svelte';\n  import type { IconType } from '@plantarium/ui/src/Icon.svelte';\n  import ClickOutside from 'svelte-click-outside';\n  import type { SvelteComponentDev } from 'svelte/internal';\n\n  export let name: string;\n  export let right = false;\n  export let icon: IconType;\n  export let component: SvelteComponentDev;\n\n  export let visible = false;\n</script>\n\n<ClickOutside on:clickoutside={() => (visible = false)}>\n  <div class=\"icon-wrapper\" class:active={visible}>\n    <Button\n      useActive\n      {icon}\n      {name}\n      --bg=\"transparent\"\n      --text={$ThemeStore['text-color']}\n      bind:active={visible}\n    />\n\n    <div class=\"wrapper\" class:visible class:right>\n      <svelte:component this={component} {visible} />\n    </div>\n  </div>\n</ClickOutside>\n\n<style lang=\"scss\">\n  @use '~@plantarium/theme/src/themes.module.scss';\n\n  .icon-wrapper {\n    position: relative;\n  }\n\n  .wrapper {\n    position: absolute;\n    width: fit-content;\n    background-color: themes.$light-green;\n    pointer-events: none;\n    display: none;\n\n    border-radius: 5px;\n    padding: 10px;\n    margin-top: -5px;\n\n    overflow: auto;\n\n    min-height: 100px;\n    min-width: var(--min-width, unset);\n    max-height: 70vh;\n    max-width: 500px;\n  }\n\n  .wrapper.right {\n    right: 0px;\n  }\n\n  .visible {\n    display: block;\n    pointer-events: all;\n  }\n</style>\n","<script lang=\"ts\">\n  import { Button, InputCheckbox, Section } from '@plantarium/ui';\n  import { onMount } from 'svelte';\n  import { detect, api } from '../helpers';\n  import { parseStackTrace } from '@plantarium/helpers';\n  export let mode: 'feat' | 'bug' = 'bug';\n  let info = detect();\n\n  let title: string;\n  let description: string;\n  let includeBrowserInfo = false;\n  export let error: Error;\n  $: stackTrace = error && parseStackTrace(error.stack);\n  let includeStacktrace = true;\n\n  let submitPromise: Promise<unknown>;\n  function submit() {\n    const data = {\n      type: mode,\n      title,\n      description,\n    };\n\n    if (includeStacktrace) {\n      data.stacktrace = stackTrace;\n    }\n\n    if (includeBrowserInfo) {\n      data.browser = detect();\n      data.browser.screen = {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        dpi: window.devicePixelRatio,\n      };\n    }\n\n    submitPromise = api.submitReport(data);\n  }\n\n  onMount(async () => {\n    if (stackTrace) {\n      title = stackTrace.type + ': ' + stackTrace.title;\n    }\n  });\n</script>\n\n{#if submitPromise}\n  {#await submitPromise}\n    Submitting Reprot\n  {:then result}\n    <Button name=\"Done\" icon=\"checkmark\" />\n    <code>{JSON.stringify(result, null, 2)}</code>\n  {:catch err}\n    <p>Errror</p>\n    <code>{JSON.stringify(err, null, 2)}</code>\n  {/await}\n{:else}\n  <section>\n    <label for=\"title\">Title</label>\n    <input\n      type=\"text\"\n      id=\"title\"\n      placeholder=\"Simple Title\"\n      on:keydown|stopPropagation\n      bind:value={title}\n    />\n  </section>\n\n  <section>\n    <label for=\"description\">Description</label>\n    <textarea\n      type=\"text\"\n      id=\"description\"\n      rowspan=\"5\"\n      on:keydown|stopPropagation\n      bind:value={description}\n      placeholder={mode === 'bug'\n        ? 'Please provide a detailed description of what happened.'\n        : 'Please describe the feature.'}\n    />\n  </section>\n\n  {#if mode === 'bug'}\n    {#if stackTrace}\n      <section>\n        <div style=\"display:flex; align-items: center\">\n          <InputCheckbox bind:value={includeStacktrace} />\n          <p style=\"margin-left: 5px;\">Include StackTrace</p>\n        </div>\n\n        <div class=\"info\">\n          <Section name=\"What is that?\">\n            <pre><code>{error.stack}</code></pre>\n          </Section>\n        </div>\n      </section>\n    {/if}\n\n    <section>\n      <div style=\"display:flex; align-items: center\">\n        <InputCheckbox bind:value={includeBrowserInfo} />\n        <p style=\"margin-left: 5px;\">Include Browser Info</p>\n      </div>\n\n      <div class=\"info\">\n        <Section name=\"What is that?\">\n          <p>\n            This information makes it easier for a developer to track down what\n            might have caused the bug.\n          </p>\n          <ul>\n            <li>OS <i>({info.os})</i></li>\n            <li>Browser <i>({info.name} / {info.version})</i></li>\n            <li>\n              Screen Resolution <i>({window.innerWidth}x{window.innerHeight})</i\n              >\n            </li>\n            <li>\n              Screen DPI <i>({window.devicePixelRatio})</i>\n            </li>\n          </ul>\n        </Section>\n      </div>\n    </section>\n  {/if}\n  <Button --bg=\"white\" --text-color=\"#303030\" name=\"Submit\" on:click={submit} />\n{/if}\n\n<style>\n  section {\n    margin: 1em 0px;\n  }\n\n  .info :global(*) {\n    font-size: 0.9em !important;\n  }\n\n  label {\n    font-size: 1em;\n    color: white;\n  }\n\n  textarea,\n  input[type='text'] {\n    box-sizing: border-box;\n    color: white;\n    font-size: 0.8em;\n    background-color: rgba(255, 255, 255, 0.2);\n    border-radius: 5px;\n    border: solid 2px rgba(255, 255, 255, 0.8);\n    width: 100% !important;\n    min-width: 100%;\n    padding: 10px !important;\n  }\n\n  input[type='text'] {\n    font-weight: bolder;\n  }\n\n  section :global(.multiselect) {\n    margin: 0px;\n  }\n\n  section :global(.multiselect > svg) {\n    display: none !important;\n  }\n  section :global(.multiselect > svg > path),\n  section :global(.multiselect > button > svg > path),\n  section :global(.multiselect ul > li > button > svg > path) {\n    stroke: none !important;\n    fill: white;\n  }\n\n  section :global(.multiselect .options) {\n    background: #e26565;\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\n  }\n\n  section :global(.multiselect .options > .selected) {\n    border-color: white;\n  }\n</style>\n","import { Geometry, Mesh, Program } from 'ogl';\nimport type Scene from '.';\nimport { settingsManager } from '..';\nimport type { ProjectManager } from '../project-manager';\nimport { ParticleShader, WireFrameShader } from './shaders';\n\nexport default class DebugScene {\n  private plant: GeometryResult;\n  private settings: PlantariumSettings;\n\n  private gl: WebGL2RenderingContext;\n\n  private m: { [key: string]: Mesh } = {};\n\n  constructor(private scene: Scene, private pm: ProjectManager) {\n    this.gl = scene.renderer.gl;\n\n    this.initGeometry();\n\n    this.setSettings(settingsManager.getSettings());\n\n    pm.on('settings', this.setSettings.bind(this));\n  }\n\n  initGeometry() {\n    this.m.skeleton = this.scene.addMesh({\n      geometry: new Geometry(this.gl, {\n        position: { size: 3, data: new Float32Array([0, 0, 0]) },\n        uv: { size: 2, data: new Float32Array([0, 0]) },\n        index: { size: 1, data: new Uint16Array([0]) },\n      }),\n      program: new Program(this.gl, {\n        vertex: WireFrameShader.vertex,\n        fragment: WireFrameShader.fragment,\n        depthTest: false,\n      }),\n      mode: this.gl.LINES,\n    });\n    // this.m.skeleton.mode = this.gl.LINES;\n\n    this.m.vertices = this.scene.addMesh({\n      mode: this.gl.POINTS,\n      geometry: new Geometry(this.gl, {\n        position: { size: 3, data: new Float32Array(3) },\n      }),\n      program: new Program(this.gl, {\n        vertex: ParticleShader.vertex,\n        fragment: ParticleShader.fragment,\n        depthTest: false,\n        transparent: true,\n      }),\n    });\n  }\n\n  setSettings(settings: PlantariumSettings) {\n    this.settings = JSON.parse(JSON.stringify(settings));\n\n    this.m.skeleton.visible = !!this.settings.debug?.skeleton;\n    this.m.vertices.visible = !!this.settings.debug?.skeleton;\n\n    this.update();\n  }\n\n  setPlant(plant: GeometryResult) {\n    this.plant = plant;\n    this.update();\n  }\n\n  update(p = this.plant, s = this.settings) {\n    if (!p || !s) return;\n\n    //Convert skeletons to Geometry\n    if ((p.allSkeletons || p.skeletons) && s.debug?.skeleton) {\n      const skeletons: Float32Array[] = p.allSkeletons ?? p.skeletons;\n      let amountPos = 0;\n      for (const skelly of skeletons) {\n        amountPos += (skelly.length / 4) * 3;\n      }\n\n      const positions = new Float32Array(amountPos);\n      const indeces = new Uint32Array((amountPos / 3 - 1) * 2);\n\n      // Transfer positions;\n      let offset = 0;\n      skeletons.forEach((skelly) => {\n        const amount = skelly.length / 4;\n\n        for (let i = 0; i < amount; i++) {\n          positions[offset * 3 + i * 3 + 0] = skelly[i * 4 + 0];\n          positions[offset * 3 + i * 3 + 1] = skelly[i * 4 + 1];\n          positions[offset * 3 + i * 3 + 2] = skelly[i * 4 + 2];\n        }\n\n        for (let i = 0; i < amount - 1; i++) {\n          indeces[offset * 2 + i * 2] = offset + i;\n          indeces[offset * 2 + i * 2 + 1] = offset + i + 1;\n        }\n\n        offset += amount;\n      });\n\n      this.m.skeleton.geometry = new Geometry(this.gl, {\n        position: { size: 3, data: positions },\n        index: { size: 1, data: indeces },\n      });\n\n      this.m.vertices.geometry = new Geometry(this.gl, {\n        position: { size: 3, data: positions },\n      });\n    }\n  }\n}\n","import { plant, worker } from '@plantarium/generator';\nimport { transferToGeometry } from '@plantarium/geometry';\nimport { logger, throttle } from '@plantarium/helpers';\nimport { createAlert, createToast } from '@plantarium/ui';\nimport { Box, Mesh } from 'ogl';\nimport type Scene from '.';\nimport { projectManager, settingsManager } from '..';\nimport { Report } from '../../elements';\nimport type { ProjectManager } from '../project-manager';\nimport DebugScene from './debug';\nimport { MatCapShader } from './shaders';\nimport * as performance from \"../../helpers/performance\";\n\nconst updateThumbnail = throttle((geo:TransferGeometry) => {\n  projectManager.renderThumbnail({geo})\n}, 5000);\n\nconst log = logger('scene.foreground');\nexport default class ForegroundScene {\n\tprivate plant: NodeResult;\n\tprivate settings: PlantariumSettings;\n\tprivate dbg: DebugScene;\n\n\tprivate gl: WebGL2RenderingContext;\n\n\tprivate mesh: Mesh;\n\n\tprivate worker = worker();\n\n\tconstructor(private scene: Scene, private pm: ProjectManager) {\n\t\tthis.gl = scene.renderer.gl;\n\n\t\tthis.initGeometry();\n\n\t\tthis.dbg = new DebugScene(scene, pm);\n\n\t\tthis.setSettings(settingsManager.getSettings());\n\t\tthis.setPlant(pm.getActiveProject());\n\n\t\tthis.pm.on('settings', this.setSettings.bind(this));\n\t\tthis.pm.on('plant', this.setPlant.bind(this));\n\t}\n\n\tinitGeometry() {\n\t\tconst geometry = new Box(this.scene.gl, { width: 0, height: 0, depth: 0 });\n\t\tthis.mesh = this.scene.addMesh({\n\t\t\tgeometry,\n\t\t\tprogram: MatCapShader(this.gl),\n\t\t});\n\t}\n\n\tsetSettings(settings: PlantariumSettings) {\n\t\tthis.settings = JSON.parse(JSON.stringify(settings));\n\t\tthis.update();\n\t}\n\n\tsetPlant(plant: NodeResult) {\n\t\tif (!plant) return;\n\t\tthis.plant = JSON.parse(JSON.stringify(plant));\n\t\tthis.update();\n\t}\n\n\tasync update(p = this.plant, s = this.settings) {\n\t\tif (!p || !s) return;\n\n\t\tthis.scene.isLoading.set(true);\n\n    try {\n\n      performance.start(\"generate\")\n\n      const result =\n        // eslint-disable-next-line\n        //@ts-ignore\n        import.meta.env.MODE === 'development'\n          ? plant(p, s)\n          : await this.worker.plant(p, s);\n\n      performance.stop(\"generate\")\n\n\t\t\tif (!result) return;\n\n      updateThumbnail(result.geometry);\n\n\t\t\tthis.scene.isLoading.set(false);\n\n\t\t\tthis.mesh.mode = s?.debug?.wireframe ? this.gl.LINES : this.gl.TRIANGLES;\n\n\t\t\tthis.dbg.setPlant(result);\n\n\t\t\tthis.mesh.geometry = transferToGeometry(this.gl, result.geometry);\n\n\t\t\tthis.mesh.geometry.computeBoundingBox();\n      //throw new Error(\"asdasdasd\");\n\n      this.scene.renderer.setControlTarget(this.mesh.geometry.bounds.center);\n    } catch (error) {\n      log.error(error);\n      const res = await createToast(error, {\n        title: 'Error [Generator]',\n        values: ['report'],\n      });\n\n      if (res === \"report\") {\n\n        createAlert(Report, {\n          timeout: 0,\n          title: 'Report Bug',\n          type: 'error',\n          props: { mode: 'bug',error },\n        })\n      }\n    }\n\n  }\n}\n","import Renderer from '@plantarium/renderer';\nimport type { MeshOptions } from 'ogl';\nimport { Mesh, Program, Transform } from 'ogl';\nimport type { Writable } from 'svelte/store';\nimport { writable } from 'svelte/store';\nimport { localState } from '../../helpers';\nimport type { ProjectManager } from '../project-manager';\nimport BackgroundScene from './background';\nimport ForegroundScene from './foreground';\nimport * as performance from \"../../helpers/performance\";\n\nexport default class Scene {\n  renderer: Renderer;\n  bg: BackgroundScene;\n  fg: ForegroundScene;\n  scene: Transform;\n  wrapper: HTMLElement;\n\n  isLoading: Writable<boolean> = writable(false);\n\n  program: Program;\n  mesh: Mesh;\n  gl: WebGL2RenderingContext;\n\n  constructor(pm: ProjectManager, canvas: HTMLCanvasElement) {\n    this.renderer = new Renderer({\n      canvas,\n      camPos: localState.get('camPos') as [number, number, number],\n    });\n    this.renderer.on('camPos', (camPos) => localState.set('camPos', camPos));\n    this.renderer.on(\"perf\", (perf:number) => performance.add(\"render\", perf), 40)\n    this.renderer.handleResize();\n    this.scene = this.renderer.scene;\n    this.gl = this.renderer.gl;\n\n    this.wrapper = canvas.parentElement as HTMLElement;\n\n    this.bg = new BackgroundScene(this, pm);\n    this.fg = new ForegroundScene(this, pm);\n  }\n\n  addMesh(options: Partial<MeshOptions>) {\n    const mesh = new Mesh(this.gl, options);\n    mesh.setParent(this.scene);\n    return mesh;\n  }\n}\n","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n\n  import type { Writable } from 'svelte/store';\n  import Scene from '.';\n  import { projectManager, settingsManager } from '..';\n  import * as perf from '../../helpers/performance';\n\n  let canvas: HTMLCanvasElement;\n\n  let scene: Scene;\n  let pd;\n\n  $: if (canvas && projectManager && !scene)\n    scene = new Scene(projectManager, canvas);\n\n  $: isLoading = scene && scene.isLoading;\n\n  let unsub;\n  $: if (projectManager) {\n    unsub && unsub();\n    unsub = projectManager.on('save', (plant) => (pd = plant));\n  }\n  let settings: Writable<PlantariumSettings>;\n  $: if (settingsManager) {\n    settings = settingsManager.store;\n  }\n\n  let generateCanvas: HTMLCanvasElement;\n  let renderCanvas: HTMLCanvasElement;\n\n  onMount(() => {\n    perf.createCanvas('render', renderCanvas);\n    perf.createCanvas('generate', generateCanvas);\n  });\n</script>\n\n<div class=\"scene-wrapper\">\n  {#if $settings?.debug?.pd && pd}\n    <pre>\n    <code>\n      {JSON.stringify(pd,null,2)}\n    </code>\n  </pre>\n  {/if}\n\n  <div class=\"performance-wrapper\">\n    <canvas\n      bind:this={generateCanvas}\n      style={`display: ${$settings?.debug?.generatePerf ? 'visible' : 'none'}`}\n    />\n\n    <canvas\n      bind:this={renderCanvas}\n      style={`display: ${$settings?.debug?.renderPerf ? 'visible' : 'none'}`}\n    />\n  </div>\n\n  <canvas bind:this={canvas} />\n  {#if $isLoading}\n    <div class=\"is-loading\">\n      <p>Is Loading</p>\n    </div>\n  {/if}\n</div>\n\n<style lang=\"scss\">\n  @use '~@plantarium/theme/src/themes.module.scss';\n\n  .scene-wrapper::before {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n    pointer-events: none;\n    background: radial-gradient(\n      circle,\n      rgba(2, 0, 36, 0) 50%,\n      rgb(0, 0, 0, 0.4) 100%\n    );\n  }\n\n  .performance-wrapper {\n    position: absolute;\n    z-index: 1;\n    bottom: 0px;\n  }\n\n  .scene-wrapper > canvas {\n    width: 100% !important;\n    height: 100% !important;\n    filter: blur(0px);\n    transition: filter 0.3s ease;\n\n    &:global(.resizing) {\n      filter: blur(5px);\n    }\n  }\n\n  .is-loading {\n    position: absolute;\n    bottom: 10px;\n    left: 10px;\n    z-index: 99;\n  }\n\n  pre {\n    position: absolute;\n    font-size: 0.8em;\n    max-height: calc(100% - 30px);\n    overflow-y: auto;\n    right: 0;\n    z-index: 2;\n    padding: 10px 20px 10px 0px;\n    box-sizing: border-box;\n    padding: 5px;\n    opacity: 0.8;\n    background-color: var(--foreground-color);\n  }\n\n  :global(code[class*='language-'], pre[class*='language-'], .token.operator) {\n    background: none !important;\n    text-shadow: 0 1px #0000001f;\n  }\n\n  :global(.token.string) {\n    color: themes.$dark-green;\n  }\n  .scene-wrapper {\n    position: relative;\n    max-height: calc(100vh - 50px);\n  }\n</style>\n","<script>\n  import { Button, createAlert } from '@plantarium/ui';\n  import { Changelog } from '.';\n  import Report from './Report.svelte';\n  import { Tutor } from '../components/tutor';\n</script>\n\n<div>\n  <Button\n    name=\"Tutorial\"\n    icon=\"hand\"\n    --bg=\"#303030\"\n    --text=\"white\"\n    on:click={() => Tutor.restart()}\n  />\n\n  <Button\n    name=\"Report Bug\"\n    icon=\"exclamation\"\n    --bg=\"#303030\"\n    --text=\"white\"\n    on:click={() =>\n      createAlert(Report, {\n        timeout: 0,\n        title: 'Report Bug',\n        type: 'error',\n        props: { mode: 'bug' },\n      })}\n  />\n\n  <Button\n    name=\"Request Feature\"\n    --bg=\"#303030\"\n    --text=\"white\"\n    on:click={() =>\n      createAlert(Report, {\n        timeout: 0,\n        title: 'Request Feature',\n        props: { mode: 'feat' },\n      })}\n  />\n  <Button\n    name=\"Changelog\"\n    --bg=\"#303030\"\n    --text=\"white\"\n    on:click={() => createAlert(Changelog, { timeout: 0 })}\n  />\n</div>\n\n<style lang=\"scss\">\n  div {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n  }\n\n  div :global(button) {\n    margin-bottom: 10px !important;\n  }\n\n  div :global(div:last-child button) {\n    margin-bottom: 0px !important;\n  }\n</style>\n","<script lang=\"ts\">\n  import { projectManager } from './components';\n  import HelpView from './elements/Help.svelte';\n  import ProjectManagerView from './components/project-manager/ProjectManagerView.svelte';\n  import SettingsManagerView from './components/settings-manager/SettingsManagerView.svelte';\n  import HoverWindow from './elements/HoverWindow.svelte';\n  const activeProject = projectManager.activeProject;\n\n</script>\n\n<header>\n  <div class=\"left\">\n    <HoverWindow icon=\"folder\" name=\"Projects\" component={ProjectManagerView}/>\n  </div>\n\n  <h3>{$activeProject?.meta.name ?? ''}</h3>\n\n  <div class=\"right\">\n    <HoverWindow icon=\"question\" component={HelpView} right />\n    <HoverWindow\n      icon=\"cog\"\n      component={SettingsManagerView}\n      right\n      --min-width={'250px'}\n    />\n  </div>\n</header>\n\n<style lang=\"scss\">\n  @use '~@plantarium/theme/src/themes.module.scss';\n\n  h3 {\n    color: themes.$light-green;\n  }\n\n  header {\n    display: flex;\n    z-index: 2;\n    align-items: center;\n    justify-content: space-between;\n    background-color: var(--foreground-color);\n  }\n\n  .right {\n    display: flex;\n  }\n</style>\n","<script lang=\"ts\">\n  import { ThemeProvider } from '@plantarium/theme';\n  import { AlertWrapper, ToastWrapper } from '@plantarium/ui';\n  import { onMount } from 'svelte';\n  import { nodeSystem } from './components';\n  import Scene from './components/scene/Scene.svelte';\n  import { TutorWrapper } from './components/tutor';\n  import Header from './Header.svelte';\n\n  let nodeSystemWrapper: HTMLElement;\n\n  onMount(async () => {\n    nodeSystemWrapper.append(nodeSystem.view.wrapper);\n    nodeSystem.view.handleResize();\n  });\n</script>\n\n<ThemeProvider />\n<AlertWrapper />\n<ToastWrapper />\n<TutorWrapper />\n\n<Header />\n\n<main>\n  <Scene />\n  <div id=\"nodesystem-view\" bind:this={nodeSystemWrapper} />\n</main>\n\n<style lang=\"scss\">\n  @use '~@plantarium/theme/src/themes.module.scss';\n\n  :global(.overlay-visible) main {\n    pointer-events: none;\n    user-select: none;\n  }\n\n  main {\n    height: 100%;\n    max-height: calc(100vh - 50px);\n    display: grid;\n    grid-template-columns: minmax(50vw, 25%) 1fr;\n  }\n</style>\n","import './global.scss';\nimport Loader from './Loader.svelte';\n\nlet l;\ntry {\n  l = new Loader({\n    target: document.body,\n  });\n} catch (error) {\n  // eslint-disable-next-line no-console\n  console.log(error);\n}\n\nexport default l;\n"],"names":["store","generateCSSVariables","getBrowser","MessageType","createId","_store","createMessage","log","spline","makeNoise2D","makeNoise3D","node","curve.toArray","logger","nodes","isNaN","MathNode","DebugNode","OutputNode","AddMenu","BoxSelection","DefaultNodes","debounceDecorator","Nodes","inputChanged","createContext","createWebWorker","oRenderer","nodeSystem","user","SettingsTemplate","get","performance.setSettings","api.submitReport","performance.add","perf.createCanvas","Changelog"],"mappings":"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"}