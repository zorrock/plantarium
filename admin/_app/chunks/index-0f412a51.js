var c=Object.defineProperty;var u=Object.getOwnPropertySymbols;var g=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable;var p=(e,t,r)=>t in e?c(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,n=(e,t)=>{for(var r in t||(t={}))g.call(t,r)&&p(e,r,t[r]);if(u)for(var r of u(t))d.call(t,r)&&p(e,r,t[r]);return e};import{C as writable}from"./vendor-3855640a.js";function getBrowser(){try{const browser=typeof eval("window")!="undefined";return browser}catch(e){return!1}}let _user={};(()=>{"sessionStorage"in global||(global.sessionStorage={getItem:e=>{},setItem:(e,t)=>{}})})();if("user"in sessionStorage)try{_user=JSON.parse(sessionStorage.getItem("user"))}catch{}const user$1=writable(_user);user$1.subscribe(e=>{sessionStorage.setItem("user",JSON.stringify(e))});const userStore=user$1,{VITE_API_URL="http://localhost:3000"}={VITE_SVELTEKIT_AMP:"",VITE_API_URL:"http://localhost:8081",VITE_GH_ORG:"jim-fx",VITE_GH_REPO:"plantarium",BASE_URL:"/_app/",MODE:"production",DEV:!1,PROD:!0};function parseJwt(e){const r=e.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),a=decodeURIComponent(atob(r).split("").map(function(o){return"%"+("00"+o.charCodeAt(0).toString(16)).slice(-2)}).join(""));return JSON.parse(a)}const browser=getBrowser(),store=(()=>{let e=browser&&localStorage.getItem("token");function t(){if(!e||e.length<10){userStore.set({});return}const r=parseJwt(e);userStore.set({username:r.username,id:r.sub})}return t(),{set token(r){e=r,browser&&localStorage.setItem("token",r),t()},get token(){return e}}})();async function send({method:e,path:t,data:r,isJSON:a=!0}){const o={method:e,headers:{}};r&&(o.headers["Content-Type"]="application/json",o.body=JSON.stringify(r)),store.token&&(o.headers["access-token"]=`Bearer ${store.token}`);const s=await fetch(`${VITE_API_URL}/${t}`,o);if(s.ok){if(a)try{return await s.json()}catch(l){console.error("Response from "+t+" failed to parse"),console.error(l)}return s.text()}const i=await s.json();return console.error(i),i}function get(e,t={}){return send(n({method:"GET",path:e},t))}function del(e){return send({method:"DELETE",path:e})}function post(e,t){return send({method:"POST",path:e,data:t})}function getReport(e){return send({method:"GET",path:`api/report/${e}`})}function publishReport(e){return send({method:"PUT",path:`api/report/${e}/publish`})}function unpublishReport(e){return send({method:"PUT",path:`api/report/${e}/unpublish`})}function getAvailableLabels(){return send({method:"GET",path:"api/report/labels"})}function setReportLabels(e,t){return send({method:"PUT",path:`api/report/${e}`,data:{labels:t}})}var admin=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",getReport,publishReport,unpublishReport,getAvailableLabels,setReportLabels});async function login(e,t){const r=await post("api/auth/login",{username:e,password:t});store.token=r.access_token}function logout(){store.token=""}function submitReport(e){return send({method:"POST",path:"api/report",data:e})}function deleteReport(e){return del(`api/report/${e}`)}async function getRole(){const e=await get("api/user/role",{isJSON:!1});return userStore.update(t=>(t.role=e,t)),e}async function getPermission(){const e=await get("api/user/permission");return userStore.update(t=>(t.permissions=e,t)),e}var user=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",login,logout,submitReport,deleteReport,getRole,getPermission}),api=n(n({},admin),user);export{api as a,getReport as b,getAvailableLabels as c,unpublishReport as d,deleteReport as e,getPermission as f,get as g,login as h,logout as l,publishReport as p,setReportLabels as s,userStore as u};
